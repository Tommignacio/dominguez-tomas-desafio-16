{
  "code": [
  {
    "name": "/usr/local/bin/node",
    "type": "SHARED_LIB"
  },
  {
    "name": "T node::AsyncResource::AsyncResource(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::AsyncResource(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::~AsyncResource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_resource()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(char const*, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::MakeCallback(v8::Local<v8::String>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_async_id() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::get_trigger_async_id() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::CallbackScope::CallbackScope(node::AsyncResource*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncResource::CallbackScope::CallbackScope(node::AsyncResource*)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(v8::Isolate*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(v8::Isolate*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::CallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::~CallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::~InternalCallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::CallbackScope::~CallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::AsyncWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::Environment*, v8::Local<v8::Object>, node::async_context const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::InternalCallbackScope(node::AsyncWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::~InternalCallbackScope()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalCallbackScope::Close()",
    "type": "CPP"
  },
  {
    "name": "T node::InternalMakeCallback(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeSyncCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, char const*, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeCallback(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::SpinEventLoop(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::CommonEnvironmentSetup(node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::function<node::Environment* (node::CommonEnvironmentSetup const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::CommonEnvironmentSetup(node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::function<node::Environment* (node::CommonEnvironmentSetup const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::~CommonEnvironmentSetup()",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::~CommonEnvironmentSetup()",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::event_loop() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::array_buffer_allocator() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::isolate() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::isolate_data() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::env() const",
    "type": "CPP"
  },
  {
    "name": "T node::CommonEnvironmentSetup::context() const",
    "type": "CPP"
  },
  {
    "name": "t node::CommonEnvironmentSetup::~CommonEnvironmentSetup()::$_0::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)",
    "type": "CPP"
  },
  {
    "name": "t node::ToUpper(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::SPrintFImpl(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, char const*, 0>(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, char const*, 0>(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::~__shared_ptr_pointer()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::~__shared_ptr_pointer()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*, std::__1::default_delete<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*>, std::__1::allocator<auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField*> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<char*, std::__1::default_delete<char []>, std::__1::allocator<char> >::__on_zero_shared_weak()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "T node::ParseEncoding(char const*, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::ParseEncoding(v8::Isolate*, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Encode(v8::Isolate*, char const*, unsigned long, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Encode(v8::Isolate*, unsigned short const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DecodeBytes(v8::Isolate*, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::DecodeWrite(v8::Isolate*, char*, unsigned long, v8::Local<v8::Value>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::AllowWasmCodeGenerationCallback(v8::Local<v8::Context>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::ShouldAbortOnUncaughtException(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrepareStackTraceCallback(v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Array>)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Allocate(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::AllocateUninitialized(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Reallocate(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeArrayBufferAllocator::Free(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::~DebuggingArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Allocate(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::RegisterPointerInternal(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::AllocateUninitialized(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Free(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::UnregisterPointerInternal(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::Reallocate(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::RegisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::RegisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::DebuggingArrayBufferAllocator::UnregisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::UnregisterPointer(void*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<void*, unsigned long, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<std::__1::pair<void* const, unsigned long> > >::operator[](void* const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ArrayBufferAllocator::Create(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "T node::FreeArrayBufferAllocator(node::ArrayBufferAllocator*)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateCreateParamsForNode(v8::Isolate::CreateParams*)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateErrorHandlers(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateMiscHandlers(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateUpForNode(v8::Isolate*, node::IsolateSettings const&)",
    "type": "CPP"
  },
  {
    "name": "T node::SetIsolateUpForNode(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(v8::Isolate::CreateParams*, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(node::ArrayBufferAllocator*, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::NewIsolate(std::__1::shared_ptr<node::ArrayBufferAllocator>, uv_loop_s*, node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateIsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*)",
    "type": "CPP"
  },
  {
    "name": "T node::FreeIsolateData(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::InspectorParentHandle::~InspectorParentHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::CreateEnvironment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvironmentFlags::Flags, node::ThreadId, std::__1::unique_ptr<node::InspectorParentHandle, std::__1::default_delete<node::InspectorParentHandle> >)",
    "type": "CPP"
  },
  {
    "name": "T node::FreeEnvironment(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetInspectorParentHandle(node::Environment*, node::ThreadId, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::LoadEnvironment(node::Environment*, std::__1::function<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>)",
    "type": "CPP"
  },
  {
    "name": "T node::LoadEnvironment(node::Environment*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetCurrentEnvironment(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::GetEnvironmentIsolateData(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetArrayBufferAllocator(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetMultiIsolatePlatform(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetMultiIsolatePlatform(node::IsolateData*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreatePlatform(int, node::tracing::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::CreatePlatform(int, v8::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::MultiIsolatePlatform::Create(int, v8::TracingController*)",
    "type": "CPP"
  },
  {
    "name": "T node::FreePlatform(node::MultiIsolatePlatform*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetPerContextExports(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializePrimordials(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::NewContext(v8::Isolate*, v8::Local<v8::ObjectTemplate>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::ProtoThrower(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContextRuntime(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeContextForSnapshot(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::GetCurrentEventLoop(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, node::node_module const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, napi_module const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AddLinkedBinding(node::Environment*, char const*, void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AllocateEnvironmentThreadId()",
    "type": "CPP"
  },
  {
    "name": "T node::DefaultProcessExitHandler(node::Environment*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::DisposePlatform()",
    "type": "CPP"
  },
  {
    "name": "T node::SetProcessExitHandler(node::Environment*, std::__1::function<void (node::Environment*, int)>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::~NodeArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "t node::NodeArrayBufferAllocator::~NodeArrayBufferAllocator()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_PROTO_ACCESS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<void*, void*>*> std::__1::__hash_table<void*, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<void*> >::find<void*>(void* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<v8::internal::compiler::Node*, void*>*> std::__1::__hash_table<v8::internal::compiler::Node*, std::__1::hash<v8::internal::compiler::Node*>, std::__1::equal_to<v8::internal::compiler::Node*>, std::__1::allocator<v8::internal::compiler::Node*> >::find<v8::internal::compiler::Node*>(v8::internal::compiler::Node* const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<void*, unsigned long>, std::__1::__unordered_map_hasher<void*, std::__1::__hash_value_type<void*, unsigned long>, std::__1::hash<void*>, true>, std::__1::__unordered_map_equal<void*, std::__1::__hash_value_type<void*, unsigned long>, std::__1::equal_to<void*>, true>, std::__1::allocator<std::__1::__hash_value_type<void*, unsigned long> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::InspectorParentHandleImpl::~InspectorParentHandleImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::InspectorParentHandleImpl::~InspectorParentHandleImpl()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::__clone(std::__1::__function::__base<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::destroy()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::destroy_deallocate()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::LoadEnvironment(node::Environment*, char const*)::$_0, std::__1::allocator<node::LoadEnvironment(node::Environment*, char const*)::$_0>, v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>::operator()(node::StartExecutionCallbackInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ErrnoException(v8::Isolate*, int, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::UVException(v8::Isolate*, int, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::FatalException(v8::Isolate*, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T node::RunAtExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::AtExit(node::Environment*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitBeforeExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitProcessBeforeExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitProcessExit(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::DeleteACHHandle::operator()(node::ACHHandle*) const",
    "type": "CPP"
  },
  {
    "name": "T node::AddEnvironmentCleanupHook(v8::Isolate*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::AddCleanupHook(void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RemoveEnvironmentCleanupHook(v8::Isolate*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AddEnvironmentCleanupHookInternal(v8::Isolate*, void (*)(void*, void (*)(void*), void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t node::RunAsyncCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RemoveEnvironmentCleanupHookInternal(node::ACHHandle*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooksGetExecutionAsyncId(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooksGetTriggerAsyncId(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncInit(v8::Isolate*, v8::Local<v8::Object>, char const*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncInit(v8::Isolate*, v8::Local<v8::Object>, v8::Local<v8::String>, double)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncDestroy(v8::Isolate*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "T node::EmitAsyncDestroy(node::Environment*, node::async_context)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::__erase_unique<node::CleanupHookCallback>(node::CleanupHookCallback const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<node::CleanupHookCallback, void*>*> std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::find<node::CleanupHookCallback>(node::CleanupHookCallback const&)",
    "type": "CPP"
  },
  {
    "name": "t node::FinishAsyncCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::AsyncCleanupHookInfo, std::__1::allocator<node::AsyncCleanupHookInfo> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<node::inspector::protocol::NodeRuntime::Frontend*, std::__1::default_delete<node::inspector::protocol::NodeRuntime::Frontend>, std::__1::allocator<node::inspector::protocol::NodeRuntime::Frontend> >::__on_zero_shared_weak()",
    "type": "CPP"
  },
  {
    "name": "T node::signo_string(int)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::DestroyAsyncIdsCallback(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Emit(node::Environment*, double, node::AsyncHooks::Fields, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitPromiseResolve(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventBefore()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitBefore(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventAfter(node::AsyncWrap::ProviderType, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitAfter(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::WeakCallback(v8::WeakCallbackInfo<node::DestroyParam> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::DestroyParamCleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitDestroy(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetAsyncId(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::PushAsyncContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::PopAsyncContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::ExecutionAsyncResource(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::ClearAsyncIdStack(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncReset(v8::Local<v8::Object>, double, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetProviderType(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitDestroy(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::QueueDestroyAsyncId(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::SetCallbackTrampoline(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::SetupHooks(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::SetPromiseHooks(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::RegisterDestroyHook(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::AsyncWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, double, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::IsDoneInitializing() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitTraceEventDestroy()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::~AsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::EmitAsyncInit(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::String>, double, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::MakeCallback(v8::Local<v8::Function>, int, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetOwner()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncWrap::GetOwner(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T _register_async_wrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_async_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::CustomBufferJSListener::OnStreamDestroy()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::PerIsolatePlatformData::IdleTasksEnabled()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::ExternalReferenceRegistry::RegisterT<v8::CFunctionInfo const>(v8::CFunctionInfo const*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<void (*)(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::LibuvStreamWrap::~LibuvStreamWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncWrap::EmitDestroy(node::Environment*, double)::$_0::operator()(node::Environment*) const::'lambda'(void*)::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::MutexBase<node::LibuvMutexTraits>::~MutexBase()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ChannelWrap(node::Environment*, v8::Local<v8::Object>, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::Setup()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ChannelWrap(node::Environment*, v8::Local<v8::Object>, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::unordered_set<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >, std::__1::__hash_const_iterator<std::__1::__hash_node<node::cares_wrap::NodeAresTask*, void*>*> >(char const*, std::__1::unordered_set<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetAddrInfoReqWrap::GetAddrInfoReqWrap(node::Environment*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetAddrInfoReqWrap::GetAddrInfoReqWrap(node::Environment*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetNameInfoReqWrap::GetNameInfoReqWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::GetNameInfoReqWrap::GetNameInfoReqWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::AresTimeout(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NodeAresTask::Create(node::cares_wrap::ChannelWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_sockstate_cb(void*, int, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::StartTimer()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::CloseTimer()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::~ChannelWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::ModifyActivityQueryCount(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ChannelWrap::EnsureServers()",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AnyTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ATraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AaaaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CaaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CnameTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::MxTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NsTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::TxtTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SrvTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::PtrTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NaptrTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SoaTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::AresQuery(char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AnyTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseGeneralReply(node::Environment*, unsigned char const*, int, int*, v8::Local<v8::Array>, void*, int*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseMxReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseTxtReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseSrvReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseNaptrReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ParseCaaReply(node::Environment*, unsigned char const*, int, v8::Local<v8::Array>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ATraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::AaaaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CaaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::CnameTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::MxTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NsTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::TxtTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SrvTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::PtrTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::NaptrTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::SoaTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ReverseTraits::Send(node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::Callback(void*, int, int, hostent*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::ReverseTraits::Parse(node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>*, std::__1::unique_ptr<node::cares_wrap::ResponseData, std::__1::default_delete<node::cares_wrap::ResponseData> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::CallOnComplete(v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetAddrInfo(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetNameInfo(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::CanonicalizeIP(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::StrError(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::cares_wrap::(anonymous namespace)::Query<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits> >(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::GetServers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::SetServers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::SetLocalAddress(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::Cancel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_cares_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::ChannelWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::NidKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to v8::internal::PointersUpdatingVisitor::~PointersUpdatingVisitor()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetAddrInfoReqWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::ReqWrap<uv_fs_s>::Cancel()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetAddrInfoReqWrap::~GetAddrInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ReqWrap<uv_fs_s>::Cancel()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::GetNameInfoReqWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::cares_wrap::GetNameInfoReqWrap::~GetNameInfoReqWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::~MemoryRetainerNode()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::~MemoryRetainerNode()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::Name()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::SizeInBytes()",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::IsRootNode()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::PerIsolatePlatformData::NonNestableDelayedTasksEnabled() const",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::NamePrefix()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::NodeAresTask::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::Track(node::MemoryRetainer const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::AddNode(node::MemoryRetainer const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<node::MemoryRetainer const*, node::MemoryRetainerNode*, std::__1::hash<node::MemoryRetainer const*>, std::__1::equal_to<node::MemoryRetainer const*>, std::__1::allocator<std::__1::pair<node::MemoryRetainer const* const, node::MemoryRetainerNode*> > >::operator[](node::MemoryRetainer const* const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryRetainerNode::MemoryRetainerNode(node::MemoryTracker*, node::MemoryRetainer const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::__unordered_map_hasher<node::MemoryRetainer const*, std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::hash<node::MemoryRetainer const*>, true>, std::__1::__unordered_map_equal<node::MemoryRetainer const*, std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*>, std::__1::equal_to<node::MemoryRetainer const*>, true>, std::__1::allocator<std::__1::__hash_value_type<node::MemoryRetainer const*, node::MemoryRetainerNode*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<unsigned long, std::__1::allocator<unsigned long> >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<unsigned long*, std::__1::allocator<unsigned long*> >::push_back(unsigned long*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<unsigned long*, std::__1::allocator<unsigned long*> >::push_front(unsigned long*&&)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_poll_cb(uv_poll_s*, int, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::ares_poll_close_cb(uv_poll_s*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::cares_wrap::NodeAresTask*, node::cares_wrap::NodeAresTask::Hash, node::cares_wrap::NodeAresTask::Equal, std::__1::allocator<node::cares_wrap::NodeAresTask*> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T void node::Environment::CloseHandle<uv_poll_s, void (*)(uv_poll_s*)>(uv_poll_s*, void (*)(uv_poll_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::AfterGetAddrInfo(uv_getaddrinfo_s*, int, addrinfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_getaddrinfo_s, void (*)(uv_getaddrinfo_s*, int, addrinfo*)>::Wrapper(uv_getaddrinfo_s*, int, addrinfo*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::(anonymous namespace)::AfterGetNameInfo(uv_getnameinfo_s*, int, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_getnameinfo_s, void (*)(uv_getnameinfo_s*, int, char const*, char const*)>::Wrapper(uv_getnameinfo_s*, int, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_ARG_VALUE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::PushNode(char const*, unsigned long, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_timer_s, node::cares_wrap::ChannelWrap::CloseTimer()::$_0>(uv_timer_s*, node::cares_wrap::ChannelWrap::CloseTimer()::$_0)::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::FunctionDeleter<hostent, &(node::cares_wrap::safe_free_hostent(hostent*))>::operator()(hostent*) const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "T node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::Callback(void*, int, int, unsigned char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::cares_wrap_hostent_cpy(hostent*, hostent const*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::QueueResponseCallback(int)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::ParseError(int)",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::HmacConfig::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AnyTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ATraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::AaaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CaaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::CnameTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::MxTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NsTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::TxtTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SrvTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::PtrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::NaptrTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::SoaTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::cares_wrap::QueryWrap<node::cares_wrap::ReverseTraits>::~QueryWrap()",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_cares_wrap.cc",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectWrap::ConnectWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectWrap::ConnectWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::ConnectWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_shutdown_s> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectWrap::~ConnectWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::ConnectionWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::ConnectionWrap(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::OnConnection(uv_stream_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::OnConnection(uv_stream_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::PipeWrap, uv_pipe_s>::AfterConnect(uv_connect_s*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::AfterConnect(uv_connect_s*, int)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::ConnectionWrap<node::TCPWrap, uv_tcp_s>::~ConnectionWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::EnabledDebugList::Parse(std::__1::shared_ptr<node::KVStore>, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::EnabledDebugList::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::ToLower(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::New()",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::SymbolInfo::Display() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "T node::DumpBacktrace(__sFILE*)",
    "type": "CPP"
  },
  {
    "name": "T node::CheckedUvLoopClose(uv_loop_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintLibuvHandleInformation(uv_loop_s*, __sFILE*)",
    "type": "CPP"
  },
  {
    "name": "T node::NativeSymbolDebuggingContext::GetLoadedLibraries()",
    "type": "CPP"
  },
  {
    "name": "T node::FWrite(__sFILE*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T ___DumpBacktrace",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)",
    "type": "CPP"
  },
  {
    "name": "t node::PrintLibuvHandleInformation(uv_loop_s*, __sFILE*)::$_0::__invoke(uv_handle_s*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::LookupSymbol(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::IsMapped(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::PosixSymbolDebuggingContext::GetStackTrace(void**, int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<char const*&>(char const*&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::SetJSPromiseHooks(v8::Local<v8::Function>, v8::Local<v8::Function>, v8::Local<v8::Function>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::push_async_context(double, double, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::grow_async_ids_stack()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::pop_async_context(double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::FailWithCorruptedAsyncStack(double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::clear_async_id_stack()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::AddContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::RemoveContext(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope(node::Environment*, double)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::~DefaultTriggerAsyncIdScope()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::~DefaultTriggerAsyncIdScope()",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope(node::AsyncWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::DefaultTriggerAsyncIdScope::DefaultTriggerAsyncIdScope(node::AsyncWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::Serialize(v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::DeserializeProperties(std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::CreateProperties()",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::IsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::IsolateData(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, node::ArrayBufferAllocator*, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const*)",
    "type": "CPP"
  },
  {
    "name": "T node::IsolateData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::array<v8::Eternal<v8::String>, 58ul>, v8::Eternal<v8::String> const*>(char const*, std::__1::array<v8::Eternal<v8::String>, 58ul> const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::TrackingTraceStateObserver::UpdateTraceCategoryState()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::AssignToContext(v8::Local<v8::Context>, node::ContextInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::TryLoadAddon(char const*, int, std::__1::function<bool (node::binding::DLib*)> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::GetCwd()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::add_refs(long long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::allocate_managed_buffer(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::release_managed_buffer(uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::NewFunctionTemplate(void (*)(v8::FunctionCallbackInfo<v8::Value> const&), v8::Local<v8::Signature>, v8::ConstructorBehavior, v8::SideEffectType, v8::CFunction const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetMethod(v8::Local<v8::Object>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetFastMethod(v8::Local<v8::Object>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&), v8::CFunction const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetMethodNoSideEffect(v8::Local<v8::Object>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetProtoMethod(v8::Local<v8::FunctionTemplate>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetProtoMethodNoSideEffect(v8::Local<v8::FunctionTemplate>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetInstanceMethod(v8::Local<v8::FunctionTemplate>, char const*, void (*)(v8::FunctionCallbackInfo<v8::Value> const&))",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetConstructorFunction(v8::Local<v8::Object>, char const*, v8::Local<v8::FunctionTemplate>, node::Environment::SetConstructorFunctionFlag)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::SetConstructorFunction(v8::Local<v8::Object>, v8::Local<v8::String>, v8::Local<v8::FunctionTemplate>, node::Environment::SetConstructorFunctionFlag)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CreateProperties()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::GetExecPath(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Isolate*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::AsyncHooks(v8::Isolate*, node::AsyncHooks::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::ImmediateInfo(v8::Isolate*, node::ImmediateInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::TickInfo(v8::Isolate*, node::TickInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Isolate*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeMainContext(v8::Local<v8::Context>, node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Environment(node::IsolateData*, v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, node::EnvSerializeInfo const*, node::EnvironmentFlags::Flags, node::ThreadId)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::DeserializeProperties(node::EnvSerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::NearHeapLimitCallback(void*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BuildEmbedderGraph(v8::Isolate*, v8::EmbedderGraph*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::~TickInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::~ImmediateInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::~Environment()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeLibuv()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CheckImmediate(uv_check_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RegisterHandleCleanups()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::StartProfilerIdleNotifier()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ExitEnv()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CleanupHandles()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAndClearNativeImmediates(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintSyncTrace() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunSnapshotSerializeCallback() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunSnapshotDeserializeMain() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunCleanup()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAtExitCallbacks()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::AtExit(void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunAndClearInterrupts()",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RunAndClearNativeImmediates(bool)::$_8::operator()(node::CallbackQueue<void, node::Environment*>*) const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ToggleImmediateRef(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RequestInterruptFromV8()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ScheduleTimer(long long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunTimers(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::ToggleTimerRef(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::GetNow()",
    "type": "CPP"
  },
  {
    "name": "T node::CollectExceptionInfo(node::Environment*, v8::Local<v8::Object>, int, char const*, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::CollectUVExceptionInfo(v8::Local<v8::Value>, int, char const*, char const*, char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::ImmediateInfo(v8::Isolate*, node::ImmediateInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::ImmediateInfo::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::ImmediateInfo::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::TickInfo::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::TickInfo::TickInfo(v8::Isolate*, node::TickInfo::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::AsyncHooks(v8::Isolate*, node::AsyncHooks::SerializeInfo const*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::Deserialize(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<unsigned long, std::__1::allocator<unsigned long> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::AsyncHooks::SerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::Serialize(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::AsyncHooks::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::array<v8::Global<v8::Function>, 4ul>, v8::Global<v8::Function> const*>(char const*, std::__1::array<v8::Global<v8::Function>, 4ul> const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Exit(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::stop_sub_worker_contexts()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::worker_parent_env() const",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::AddUnmanagedFd(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RemoveUnmanagedFd(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintInfoForSnapshotIfDebug()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::PrintAllBaseObjects()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::VerifyNoStrongBaseObjects()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::Serialize(v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<node::PropInfo, std::__1::allocator<node::PropInfo> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, node::EnvSerializeInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::EnqueueDeserializeRequest(void (*)(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*), v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunDeserializeRequests()",
    "type": "CPP"
  },
  {
    "name": "T node::GuessMemoryAvailableToTheProcess()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >(char const*, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*> >(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunWeakRefCleanup()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::BaseObject(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::DeleteMe(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::~BaseObject()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::pointer_data()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::~BaseObject()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::~BaseObject()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::MakeWeak()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::LazilyInitializedJSTemplateConstructor(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::MakeLazilyInitializedJSTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::decrease_refcount()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::increase_refcount()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsDoneInitializing() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::WrappedObject() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsRootNode() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::~IsolateData()",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::~IsolateData()",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::IsolateData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::~ImmediateInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::ImmediateInfo::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::~TickInfo()",
    "type": "CPP"
  },
  {
    "name": "t node::TickInfo::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::AsyncHooks::~AsyncHooks()",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::InitializeLibuv()::$_1::__invoke(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RegisterHandleCleanups()::$_3::__invoke(node::Environment*, uv_handle_s*, void*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, node::Environment::RegisterHandleCleanups()::$_3::operator()(node::Environment*, uv_handle_s*, void*) const::'lambda'(uv_handle_s*)>(uv_handle_s*, node::Environment::RegisterHandleCleanups()::$_3::operator()(node::Environment*, uv_handle_s*, void*) const::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::StartProfilerIdleNotifier()::$_5::__invoke(uv_prepare_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::StartProfilerIdleNotifier()::$_6::__invoke(uv_check_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::RequestInterruptFromV8()::$_9::__invoke(v8::Isolate*, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::ToggleImmediateRef(bool)::$_10::__invoke(uv_idle_s*)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<void*, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<void*> >::__erase_unique<void*>(void* const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MemoryTracker::~MemoryTracker()",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObject::MakeWeak()::$_14::__invoke(v8::WeakCallbackInfo<node::BaseObject> const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::__clone(std::__1::__function::__base<void (node::Environment*, int)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<void (*)(node::Environment*, int), std::__1::allocator<void (*)(node::Environment*, int)>, void (node::Environment*, int)>::operator()(node::Environment*&&, int&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<v8::Global<v8::Context>, std::__1::allocator<v8::Global<v8::Context> > >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<node::EnvironmentOptions*, std::__1::default_delete<node::EnvironmentOptions>, std::__1::allocator<node::EnvironmentOptions> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::__unordered_map_hasher<char*, std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::hash<char*>, true>, std::__1::__unordered_map_equal<char*, std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > >, std::__1::equal_to<char*>, true>, std::__1::allocator<std::__1::__hash_value_type<char*, std::__1::unique_ptr<v8::BackingStore, std::__1::default_delete<v8::BackingStore> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<int, v8::Int32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::destroy(std::__1::__tree_node<int, void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::EnvironmentOptions, std::__1::allocator<node::EnvironmentOptions> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::EnvironmentOptions(node::EnvironmentOptions const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> >, std::__1::allocator<node::ExclusiveAccess<node::HostPort, node::MutexBase<node::LibuvMutexTraits> > > >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t node::TrackingTraceStateObserver::OnTraceDisabled()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Environment::ExitEnv()::$_2>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__sort<node::Environment::RunCleanup()::$_7&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_7&)",
    "type": "CPP"
  },
  {
    "name": "t unsigned int std::__1::__sort4<node::Environment::RunCleanup()::$_7&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_7&)",
    "type": "CPP"
  },
  {
    "name": "t bool std::__1::__insertion_sort_incomplete<node::Environment::RunCleanup()::$_7&, node::CleanupHookCallback*>(node::CleanupHookCallback*, node::CleanupHookCallback*, node::Environment::RunCleanup()::$_7&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<node::CleanupHookCallback, void*>*> std::__1::__hash_table<node::CleanupHookCallback, node::CleanupHookCallback::Hash, node::CleanupHookCallback::Equal, std::__1::allocator<node::CleanupHookCallback> >::find<node::CleanupHookCallback>(node::CleanupHookCallback const&) const",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned char, v8::Uint8Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, int, 0>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, int, 0>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::__erase_unique<int>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::vector<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::enable_if<(__is_forward_iterator<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::reference>::value), std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >::type)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::PropInfo, std::__1::allocator<node::PropInfo> >::__push_back_slow_path<node::PropInfo>(node::PropInfo&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>::value) && (is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>::reference>::value), void>::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned char, 0>(unsigned char const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, bool, 0>(bool const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned long long, 0>(unsigned long long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned long long, 0>(unsigned long long const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs_event_wrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs_event_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::GetInitialized(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::~FSEventWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::~FSEventWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::FSEventWrap::OnEvent(uv_fs_event_s*, char const*, int, int)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Ref(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Unref(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::HasRef(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::Close(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::OnClose(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::OnGCCollect()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::MarkAsInitialized()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::MarkAsUninitialized()",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::HandleWrap(node::Environment*, v8::Local<v8::Object>, uv_handle_s*, node::AsyncWrap::ProviderType)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_handle_wrap(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::BuildEmbedderGraph(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::CreateObject() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "T node::heap::WriteSnapshot(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::~FileOutputStream()",
    "type": "CPP"
  },
  {
    "name": "T node::heap::DeleteHeapSnapshot(v8::HeapSnapshot const*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::CreateHeapSnapshotStream(node::Environment*, std::__1::unique_ptr<v8::HeapSnapshot const, node::FunctionDeleter<v8::HeapSnapshot const, &(node::heap::DeleteHeapSnapshot(v8::HeapSnapshot const*))> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::CreateHeapSnapshotStream(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::TriggerHeapSnapshot(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::heap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_heap_utils()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_heap_utils(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::V8Node(v8::Local<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::AddNode(std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> >)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::AddEdge(v8::EmbedderGraph::Node*, v8::EmbedderGraph::Node*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::~JSGraphJSNode()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::~JSGraphJSNode()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraphJSNode::Name()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<node::heap::JSGraphJSNode*, void*>*> std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::find<node::heap::JSGraphJSNode*>(node::heap::JSGraphJSNode* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<node::heap::JSGraphJSNode*, node::heap::JSGraphJSNode::Hash, node::heap::JSGraphJSNode::Equal, std::__1::allocator<node::heap::JSGraphJSNode*> >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> >, std::__1::hash<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > >, std::__1::equal_to<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > >, std::__1::allocator<std::__1::unique_ptr<v8::EmbedderGraph::Node, std::__1::default_delete<v8::EmbedderGraph::Node> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > >, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > > > >::operator[](v8::EmbedderGraph::Node* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::__unordered_map_hasher<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::hash<v8::EmbedderGraph::Node*>, true>, std::__1::__unordered_map_equal<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > >, std::__1::equal_to<v8::EmbedderGraph::Node*>, true>, std::__1::allocator<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, std::__1::set<std::__1::pair<char const*, v8::EmbedderGraph::Node*>, std::__1::less<std::__1::pair<char const*, v8::EmbedderGraph::Node*> >, std::__1::allocator<std::__1::pair<char const*, v8::EmbedderGraph::Node*> > > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, v8::Local<v8::Object>, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, v8::Local<v8::Object> > > >::operator[](v8::EmbedderGraph::Node*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<v8::EmbedderGraph::Node*, v8::Local<v8::Object>, std::__1::hash<v8::EmbedderGraph::Node*>, std::__1::equal_to<v8::EmbedderGraph::Node*>, std::__1::allocator<std::__1::pair<v8::EmbedderGraph::Node* const, v8::Local<v8::Object> > > >::operator[](v8::EmbedderGraph::Node* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::__unordered_map_hasher<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::hash<v8::EmbedderGraph::Node*>, true>, std::__1::__unordered_map_equal<v8::EmbedderGraph::Node*, std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> >, std::__1::equal_to<v8::EmbedderGraph::Node*>, true>, std::__1::allocator<std::__1::__hash_value_type<v8::EmbedderGraph::Node*, v8::Local<v8::Object> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::JSGraph::~JSGraph()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::~FileOutputStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::FileOutputStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "t icu_71::Normalizer2WithImpl::getQuickCheck(int) const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t node::heap::(anonymous namespace)::HeapSnapshotStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::~HeapSnapshotStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::EndOfStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::GetChunkSize()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::heap::(anonymous namespace)::HeapSnapshotStream::WriteAsciiChunk(char*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::Histogram(node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::Histogram(node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Histogram::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramImpl::HistogramImpl(std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramBase(node::Environment*, v8::Local<v8::Object>, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetCount(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetCountBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMinBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMax(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMaxBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetMean(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetExceeds(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetExceedsBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetStddev(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentileBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentiles(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetPercentilesBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::DoReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::RecordDelta(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Record(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Add(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Create(node::Environment*, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Create(node::Environment*, std::__1::shared_ptr<node::Histogram>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::Initialize(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramTransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::HistogramBase::HistogramTransferData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetCount(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetCountBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetExceeds(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetExceedsBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMinBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMax(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMaxBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetMean(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetStddev(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentileBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentiles(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::GetPercentilesBigInt(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::DoReset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::Stop(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::IntervalHistogram(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, int, std::__1::function<void (node::Histogram&)>, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::IntervalHistogram(node::Environment*, v8::Local<v8::Object>, node::AsyncWrap::ProviderType, int, std::__1::function<void (node::Histogram&)>, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::Create(node::Environment*, int, std::__1::function<void (node::Histogram&)>, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "t node::BaseObjectPtrImpl<node::IntervalHistogram, false> node::MakeBaseObject<node::IntervalHistogram, node::Environment*&, v8::Local<v8::Object>&, node::AsyncWrap::ProviderType, int&, std::__1::function<void (node::Histogram&)>, node::Histogram::Options const&>(node::Environment*&, v8::Local<v8::Object>&, node::AsyncWrap::ProviderType&&, int&, std::__1::function<void (node::Histogram&)>&&, node::Histogram::Options const&)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::TimerCB(uv_timer_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::OnStart(node::IntervalHistogram::StartFlags)",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::OnStop()",
    "type": "CPP"
  },
  {
    "name": "T node::IntervalHistogram::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::~HistogramTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::~HistogramTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::HistogramTransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::SecretKeyGenConfig::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::~Histogram()",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::~Histogram()",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::Histogram::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::~HistogramBase()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::~HistogramBase()",
    "type": "CPP"
  },
  {
    "name": "t node::HistogramBase::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_71::UCharsTrieBuilder::getMinLinearMatch() const",
    "type": "CPP"
  },
  {
    "name": "t node::SocketAddressBlockListWrap::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "t node::IntervalHistogram::~IntervalHistogram()",
    "type": "CPP"
  },
  {
    "name": "t node::IntervalHistogram::~IntervalHistogram()",
    "type": "CPP"
  },
  {
    "name": "t node::IntervalHistogram::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::DeriveBitsJob<node::crypto::ECDHBitsTraits>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_OUT_OF_RANGE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefBase(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefBase(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::New(napi_env__*, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::~RefBase()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Data()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Ref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Unref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::RefCount()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::RefBase::Finalize(bool)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::New(napi_env__*, v8::Local<v8::Value>, unsigned int, bool, void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::~Reference()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Ref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::ClearWeak()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Unref()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::SetWeak()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Get()",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::Finalize(bool)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::FinalizeCallback(v8::WeakCallbackInfo<v8impl::Reference*> const&)",
    "type": "CPP"
  },
  {
    "name": "T v8impl::Reference::SecondPassCallback(v8::WeakCallbackInfo<v8impl::Reference*> const&)",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_last_error_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_define_class",
    "type": "CPP"
  },
  {
    "name": "T _napi_define_properties",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_property_names",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_all_property_names",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_own_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_named_property",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_has_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_element",
    "type": "CPP"
  },
  {
    "name": "T _napi_object_freeze",
    "type": "CPP"
  },
  {
    "name": "T _napi_object_seal",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_array",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_array_length",
    "type": "CPP"
  },
  {
    "name": "T _napi_strict_equals",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_prototype",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_array",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_array_with_length",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_latin1",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_utf8",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_string_utf16",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_double",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_int32",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_uint32",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_uint64",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_bigint_words",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_boolean",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_symbol",
    "type": "CPP"
  },
  {
    "name": "T _node_api_symbol_for",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_type_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_range_error",
    "type": "CPP"
  },
  {
    "name": "T _node_api_create_syntax_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_typeof",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_undefined",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_null",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_cb_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_new_target",
    "type": "CPP"
  },
  {
    "name": "T _napi_call_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_global",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_type_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_throw_range_error",
    "type": "CPP"
  },
  {
    "name": "T _node_api_throw_syntax_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_double",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_int32",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_uint32",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_int64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_uint64",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bigint_words",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_bool",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_latin1",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_utf8",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_string_utf16",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_bool",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_number",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_coerce_to_string",
    "type": "CPP"
  },
  {
    "name": "T _napi_wrap",
    "type": "CPP"
  },
  {
    "name": "T _napi_unwrap",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::Unwrap(napi_env__*, napi_value__*, void**, v8impl::(anonymous namespace)::UnwrapAction)",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_wrap",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external",
    "type": "CPP"
  },
  {
    "name": "T _napi_type_tag_object",
    "type": "CPP"
  },
  {
    "name": "T _napi_check_object_type_tag",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_value_external",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_reference",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_reference",
    "type": "CPP"
  },
  {
    "name": "T _napi_reference_ref",
    "type": "CPP"
  },
  {
    "name": "T _napi_reference_unref",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_reference_value",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_escapable_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_escapable_handle_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_escape_handle",
    "type": "CPP"
  },
  {
    "name": "T _napi_new_instance",
    "type": "CPP"
  },
  {
    "name": "T _napi_instanceof",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_exception_pending",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_and_clear_last_exception",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_typedarray_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_arraybuffer_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_typedarray",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_typedarray",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_dataview",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_dataview",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_dataview_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_version",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_promise",
    "type": "CPP"
  },
  {
    "name": "T _napi_resolve_deferred",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ConcludeDeferred(napi_env__*, napi_deferred__*, napi_value__*, bool)",
    "type": "CPP"
  },
  {
    "name": "T _napi_reject_deferred",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_promise",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_date",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_date",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_date_value",
    "type": "CPP"
  },
  {
    "name": "T _napi_run_script",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_finalizer",
    "type": "CPP"
  },
  {
    "name": "T _napi_adjust_external_memory",
    "type": "CPP"
  },
  {
    "name": "T _napi_set_instance_data",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_instance_data",
    "type": "CPP"
  },
  {
    "name": "T _napi_detach_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_detached_arraybuffer",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::CallbackBundle::New(napi_env__*, napi_value__* (*)(napi_env__*, napi_callback_info__*), void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::Invoke(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::CallbackBundle::Delete(napi_env__*, void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::GetNewTarget()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::Args(napi_value__**, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::FunctionCallbackWrapper::SetReturnValue(napi_value__*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<napi_property_descriptor, std::__1::allocator<napi_property_descriptor> >::__push_back_slow_path<napi_property_descriptor const&>(napi_property_descriptor const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::JSStream(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::JSStream(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::JSStream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::ReadBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::EmitEOF(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSStream::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T void node::JSStream::Finish<node::WriteWrap>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T void node::JSStream::Finish<node::ShutdownWrap>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_js_stream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::JSStream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSStream::~JSStream()",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<char, 64ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::EscapeJsonChars(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Reindent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::JSUDPWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::JSUDPWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::RecvStart()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::RecvStop()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::Send(uv_buf_t*, unsigned long, sockaddr const*)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::GetPeerName()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::GetSockName()",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::EmitReceived(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::OnSendDone(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::OnAfterBind(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::JSUDPWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _register_js_udp_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::JSUDPWrap::GetAsyncWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::JSUDPWrap::~JSUDPWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::SocketAddress::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::DhKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ModuleWrap(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Module>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ModuleWrap(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Module>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::~ModuleWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::context() const",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetFromModule(node::Environment*, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetFromID(node::Environment*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SyntheticModuleEvaluationStepsCallback(v8::Local<v8::Context>, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, void*>*> > std::__1::unordered_multimap<int, node::loader::ModuleWrap*, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, node::loader::ModuleWrap*> > >::emplace<int, node::loader::ModuleWrap*&>(int&&, node::loader::ModuleWrap*&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Link(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::loader::createImportAssertionContainer(node::Environment*, v8::Isolate*, v8::Local<v8::FixedArray>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Instantiate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::ResolveModuleCallback(v8::Local<v8::Context>, v8::Local<v8::String>, v8::Local<v8::FixedArray>, v8::Local<v8::Module>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Evaluate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::THROW_ERR_SCRIPT_EXECUTION_TIMEOUT(node::Environment*, long long)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetNamespace(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetStatus(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetStaticDependencySpecifiers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::GetError(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetImportModuleDynamicallyCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ImportModuleDynamically(v8::Local<v8::Context>, v8::Local<v8::ScriptOrModule>, v8::Local<v8::String>, v8::Local<v8::FixedArray>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::HostInitializeImportMetaObjectCallback(v8::Local<v8::Context>, v8::Local<v8::Module>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetInitializeImportMetaObjectCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::SetSyntheticExport(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::CreateCachedData(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::loader::ModuleWrap::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _register_module_wrap()",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ModuleWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ModuleWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::loader::ModuleWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_SCRIPT_EXECUTION_TIMEOUT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_SCRIPT_EXECUTION_INTERRUPTED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_EXECUTION_ENVIRONMENT_NOT_AVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> >(char const*, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, v8::Global<v8::Promise> > const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::loader::ModuleWrap*> > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__erase_unique<unsigned int>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_VM_MODULE_CACHED_DATA_REJECTED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::loader::ModuleWrap*>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::loader::ModuleWrap*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_VM_MODULE_LINK_FAILURE<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>(v8::Isolate*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<4u, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, int> > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, v8::Global<v8::Promise> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::~V8Platform()",
    "type": "CPP"
  },
  {
    "name": "T node::SignalExit(int, __siginfo*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::ResetStdio()",
    "type": "CPP"
  },
  {
    "name": "T node::ExecuteBootstrapper(node::Environment*, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, std::__1::vector<v8::Local<v8::Value>, std::__1::allocator<v8::Local<v8::Value> > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeInspector(std::__1::unique_ptr<node::inspector::ParentInspectorHandle, std::__1::default_delete<node::inspector::ParentInspectorHandle> >)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::InitializeDiagnostics()",
    "type": "CPP"
  },
  {
    "name": "t node::AtomicsWaitCallback(v8::Isolate::AtomicsWaitEvent, v8::Local<v8::SharedArrayBuffer>, unsigned long, long long, double, v8::Isolate::AtomicsWaitWakeHandle*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BootstrapInternalLoaders()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::BootstrapNode()",
    "type": "CPP"
  },
  {
    "name": "T node::Environment::RunBootstrapping()",
    "type": "CPP"
  },
  {
    "name": "T node::MarkBootstrapComplete(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::StartExecution(node::Environment*, std::__1::function<v8::MaybeLocal<v8::Value> (node::StartExecutionCallbackInfo const&)>)",
    "type": "CPP"
  },
  {
    "name": "t node::StartExecution(node::Environment*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::TrapWebAssemblyOrContinue(int, __siginfo*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::RegisterSignalHandler(int, void (*)(int, __siginfo*, void*), bool)",
    "type": "CPP"
  },
  {
    "name": "T node::ProcessGlobalArgs(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeNodeWithArgs(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeNodeWithArgs(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::ProcessFlags::Flags)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::insert(std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeOncePerProcess(int, char**)",
    "type": "CPP"
  },
  {
    "name": "T node::InitializeOncePerProcess(int, char**, node::InitializationSettingsFlags, node::ProcessFlags::Flags)",
    "type": "CPP"
  },
  {
    "name": "T node::handle_openssl_error(int, char const*, node::InitializationResult*)",
    "type": "CPP"
  },
  {
    "name": "t node::PlatformInit()",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::Initialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::TearDownOncePerProcess()",
    "type": "CPP"
  },
  {
    "name": "T node::Start(int, char**)",
    "type": "CPP"
  },
  {
    "name": "T node::Stop(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::Environment::InitializeDiagnostics()::$_0::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::InitializationResult::InitializationResult(node::InitializationResult const&)",
    "type": "CPP"
  },
  {
    "name": "t node::V8Platform::StartTracingAgent()",
    "type": "CPP"
  },
  {
    "name": "t node::NodeTraceStateObserver::OnTraceEnabled()",
    "type": "CPP"
  },
  {
    "name": "t node::NodeTraceStateObserver::OnTraceDisabled()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_function_call()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<char const (&) [39]>(char const (&) [39])",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node.cc",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::node_napi_env__(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::node_napi_env__(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::~node_napi_env__()",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::~node_napi_env__()",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::~node_napi_env__()",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::can_call_into_js() const",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::mark_arraybuffer_as_untransferable(v8::Local<v8::ArrayBuffer>) const",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node_napi_env__::trigger_fatal_exception(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T napi_module_register_by_symbol(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, napi_value__* (*)(napi_env__*, napi_value__*))",
    "type": "CPP"
  },
  {
    "name": "T node::napi_module_to_node_module(napi_module const*)",
    "type": "CPP"
  },
  {
    "name": "t napi_module_register_cb(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T _napi_module_register",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_env_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_env_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_add_async_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_remove_async_cleanup_hook",
    "type": "CPP"
  },
  {
    "name": "T _napi_fatal_exception",
    "type": "CPP"
  },
  {
    "name": "T _napi_fatal_error",
    "type": "CPP"
  },
  {
    "name": "T _napi_open_callback_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_close_callback_scope",
    "type": "CPP"
  },
  {
    "name": "T _napi_async_init",
    "type": "CPP"
  },
  {
    "name": "T _napi_async_destroy",
    "type": "CPP"
  },
  {
    "name": "T _napi_make_callback",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_buffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_external_buffer",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::BufferFinalizer::FinalizeBufferCallback(char*, void*)",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_buffer_copy",
    "type": "CPP"
  },
  {
    "name": "T _napi_is_buffer",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_buffer_info",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_node_version",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_delete_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_uv_event_loop",
    "type": "CPP"
  },
  {
    "name": "T _napi_queue_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_cancel_async_work",
    "type": "CPP"
  },
  {
    "name": "T _napi_create_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_get_threadsafe_function_context",
    "type": "CPP"
  },
  {
    "name": "T _napi_call_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_acquire_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_release_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_unref_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _napi_ref_threadsafe_function",
    "type": "CPP"
  },
  {
    "name": "T _node_api_get_module_file_name",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::~napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::~napi_env__()",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::mark_arraybuffer_as_untransferable(v8::Local<v8::ArrayBuffer>) const",
    "type": "CPP"
  },
  {
    "name": "t napi_env__::CallFinalizer(void (*)(napi_env__*, void*, void*), void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::url::url_data::~url_data()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::NewEnv(v8::Local<v8::Context>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::'lambda'(void*)::__invoke(void*)",
    "type": "CPP"
  },
  {
    "name": "T napi_async_cleanup_hook_handle__::Hook(void*, void (*)(void*), void*)",
    "type": "CPP"
  },
  {
    "name": "t napi_async_cleanup_hook_handle__::~napi_async_cleanup_hook_handle__()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<napi_async_cleanup_hook_handle__::~napi_async_cleanup_hook_handle__()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::AsyncContext::EnsureReference()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::AsyncContext::WeakCallback(v8::WeakCallbackInfo<v8impl::(anonymous namespace)::AsyncContext> const&)",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "t (anonymous namespace)::uvimpl::Work::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::~Work()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to (anonymous namespace)::uvimpl::Work::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T node::ThreadPoolWork::ScheduleWork()::'lambda'(uv_work_s*)::__invoke(uv_work_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::ThreadPoolWork::ScheduleWork()::'lambda'(uv_work_s*, int)::__invoke(uv_work_s*, int)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::CallJs(napi_env__*, napi_value__*, void*, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::Cleanup(void*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::~ThreadSafeFunction()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::~ThreadSafeFunction()",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)::'lambda'(uv_handle_s*)>(uv_handle_s*, v8impl::(anonymous namespace)::ThreadSafeFunction::CloseHandlesAndMaybeDelete(bool)::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t v8impl::(anonymous namespace)::ThreadSafeFunction::AsyncCb(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t void node::Environment::CloseHandle<uv_handle_s, v8impl::(anonymous namespace)::ThreadSafeFunction::Init()::'lambda'(uv_handle_s*)>(uv_handle_s*, v8impl::(anonymous namespace)::ThreadSafeFunction::Init()::'lambda'(uv_handle_s*))::'lambda'(uv_handle_s*)::__invoke(uv_handle_s*)",
    "type": "CPP"
  },
  {
    "name": "t void napi_env__::CallIntoModule<void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(napi_env__*)&, void node_napi_env__::CallbackIntoModule<true, void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(napi_env__*)>(void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(napi_env__*)&&)::'lambda'(napi_env__*, v8::Local<v8::Value>)>(void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(napi_env__*)&, void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(napi_env__*)&&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t void napi_env__::CallIntoModule<void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)::operator()(node::Environment*) const::'lambda'(napi_env__*)&, void node_napi_env__::CallbackIntoModule<true, void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)::operator()(node::Environment*) const::'lambda'(napi_env__*)>(void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)::operator()(node::Environment*) const::'lambda'(napi_env__*)&&)::'lambda'(napi_env__*, v8::Local<v8::Value>)>(void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)::operator()(node::Environment*) const::'lambda'(napi_env__*)&, void node_napi_env__::CallFinalizer<true>(void (*)(napi_env__*, void*, void*), void*, void*)::'lambda'(node::Environment*)::operator()(node::Environment*) const::'lambda'(napi_env__*)&&)",
    "type": "CPP"
  },
  {
    "name": "T _node_module_register",
    "type": "CPP"
  },
  {
    "name": "t node::binding::global_handle_map_t::~global_handle_map_t()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::DLib(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::DLib(char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::Open()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::Close()",
    "type": "CPP"
  },
  {
    "name": "t node::binding::global_handle_map_t::erase(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::GetSymbolAddress(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::SaveInGlobalHandleMap(node::node_module*)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLib::GetSavedModuleFromGlobalHandleMap()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::GetInternalBinding(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::GetLinkedBinding(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::binding::RegisterBuiltinModules()",
    "type": "CPP"
  },
  {
    "name": "T node::binding::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_binding(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<void*, node::binding::global_handle_map_t::Entry, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<std::__1::pair<void* const, node::binding::global_handle_map_t::Entry> > >::operator[](void* const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::__unordered_map_hasher<void*, std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::hash<void*>, true>, std::__1::__unordered_map_equal<void*, std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry>, std::__1::equal_to<void*>, true>, std::__1::allocator<std::__1::__hash_value_type<void*, node::binding::global_handle_map_t::Entry> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_DLOPEN_DISABLED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MISSING_ARGS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_ARG_TYPE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::~__func()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::__clone() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::__clone(std::__1::__function::__base<bool (node::binding::DLib*)>*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::destroy()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::destroy_deallocate()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__function::__func<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0, std::__1::allocator<node::binding::DLOpen(v8::FunctionCallbackInfo<v8::Value> const&)::$_0>, bool (node::binding::DLib*)>::operator()(node::binding::DLib*&&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_DLOPEN_FAILED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_NON_CONTEXT_AWARE_DISABLED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_MODULE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_binding.cc",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData* node::Environment::AddBindingData<node::BlobBindingData>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::StoreDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::RevokeDataObject(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::Initialize(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::ToArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::ToSlice(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::HasInstance(node::Environment*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Create(node::Environment*, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<std::__1::__wrap_iter<node::BlobEntry*> >::value) && (is_constructible<node::BlobEntry, std::__1::iterator_traits<std::__1::__wrap_iter<node::BlobEntry*> >::reference>::value), std::__1::__wrap_iter<node::BlobEntry*> >::type std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::insert<std::__1::__wrap_iter<node::BlobEntry*> >(std::__1::__wrap_iter<node::BlobEntry const*>, std::__1::__wrap_iter<node::BlobEntry*>, std::__1::__wrap_iter<node::BlobEntry*>)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetArrayBuffer(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Slice(node::Environment*, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Blob(node::Environment*, v8::Local<v8::Object>, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> > const&, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::Blob(node::Environment*, v8::Local<v8::Object>, std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> > const&, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::BlobTransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::store_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, node::BlobBindingData::StoredDataObject const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::StoredDataObject(node::BaseObjectPtrImpl<node::Blob, false> const&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::~StoredDataObject()",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::revoke_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::get_data_object(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::FixedSizeBlobCopyJob(node::Environment*, v8::Local<v8::Object>, node::Blob*, node::FixedSizeBlobCopyJob::Mode)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::FixedSizeBlobCopyJob(node::Environment*, v8::Local<v8::Object>, node::Blob*, node::FixedSizeBlobCopyJob::Mode)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::FixedSizeBlobCopyJob::AfterThreadPoolWork(int)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::FixedSizeBlobCopyJob::DoThreadPoolWork()",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::Run(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::FixedSizeBlobCopyJob::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::StoredDataObject::StoredDataObject(node::BaseObjectPtrImpl<node::Blob, false> const&, unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::BlobBindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::BlobBindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::Deserialize(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::PrepareForSerialization(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::BlobBindingData::Serialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::Blob::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_blob()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_blob(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::~BlobTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::~BlobTransferData()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::BlobTransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::~Blob()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::~Blob()",
    "type": "CPP"
  },
  {
    "name": "t node::Blob::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::process::BindingData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::~StoredDataObject()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::StoredDataObject::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::FixedSizeBlobCopyJob::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::FixedSizeBlobCopyJob::~FixedSizeBlobCopyJob()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::~BlobBindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::~BlobBindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::BlobBindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::AsyncWrap>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MESSAGE_TARGET_CONTEXT_UNAVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::__emplace_back_slow_path<node::BlobEntry>(node::BlobEntry&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_pointer<v8::BackingStore*, std::__1::default_delete<v8::BackingStore>, std::__1::allocator<v8::BackingStore> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::__unordered_map_hasher<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, node::FastStringKey::Hash, true>, std::__1::__unordered_map_equal<node::FastStringKey, std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> >, std::__1::equal_to<node::FastStringKey>, true>, std::__1::allocator<std::__1::__hash_value_type<node::FastStringKey, node::BaseObjectPtrImpl<node::BaseObject, false> > > >::find<node::FastStringKey>(node::FastStringKey const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<node::BlobEntry*>::value) && (is_constructible<node::BlobEntry, std::__1::iterator_traits<node::BlobEntry*>::reference>::value), void>::type std::__1::vector<node::BlobEntry, std::__1::allocator<node::BlobEntry> >::assign<node::BlobEntry*>(node::BlobEntry*, node::BlobEntry*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject>(char const*, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, node::BlobBindingData::StoredDataObject> const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject> > >::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::BlobBindingData::StoredDataObject>, void*>*>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::HasInstance(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::HasInstance(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Data(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Data(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Length(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Length(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, v8::Local<v8::ArrayBuffer>, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, v8::Local<v8::ArrayBuffer>, unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, v8::Local<v8::String>, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Copy(v8::Isolate*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::Copy(node::Environment*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, char*, unsigned long, void (*)(char*, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, char*, unsigned long, void (*)(char*, void*), void*)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(v8::Isolate*, char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::New(node::Environment*, char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::Buffer::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::SetBufferPrototype(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CreateFromString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::ByteLengthUtf8(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Copy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Compare(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CompareOffset(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Fill(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfNumber(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::IndexOfString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap16(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap32(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Swap64(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::EncodeInto(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::EncodeUtf8String(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)0>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)2>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)7>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)4>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)5>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)3>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringSlice<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)0>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)2>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)7>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)4>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)5>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)3>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::Buffer::(anonymous namespace)::StringWrite<(node::encoding)1>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::GetZeroFillToggle(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::DetachArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CopyArrayBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_buffer()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_buffer(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_CONTEXT_NOT_AVAILABLE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MEMORY_ALLOCATION_FAILED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_TOO_LARGE<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::CleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::CallbackInfo::CreateTrackedArrayBuffer(node::Environment*, char*, unsigned long, void (*)(char*, void*), void*)::'lambda'(void*, unsigned long, void*)::__invoke(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::Buffer::(anonymous namespace)::CallbackInfo::OnBackingStoreFree()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::New(node::Environment*, char*, unsigned long)::$_0::__invoke(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::SearchString<unsigned short>(unsigned short const*, unsigned long, unsigned short const*, unsigned long, unsigned long, bool)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::SearchString<unsigned char>(unsigned char const*, unsigned long, unsigned char const*, unsigned long, unsigned long, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::Search(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::BoyerMooreHorspoolSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::BoyerMooreSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::InitialSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::LinearSearch(node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned short>::PopulateBoyerMooreTable()",
    "type": "CPP"
  },
  {
    "name": "t unsigned long node::stringsearch::FindFirstCharacter<unsigned short>(node::stringsearch::Vector<unsigned short const>, node::stringsearch::Vector<unsigned short const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::Search(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::BoyerMooreHorspoolSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::BoyerMooreSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::InitialSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::LinearSearch(node::stringsearch::Vector<unsigned char const>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::stringsearch::StringSearch<unsigned char>::PopulateBoyerMooreTable()",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::GetZeroFillToggle(v8::FunctionCallbackInfo<v8::Value> const&)::$_1::__invoke(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::Buffer::(anonymous namespace)::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_BUFFER_OUT_OF_BOUNDS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T _register_config()",
    "type": "CPP"
  },
  {
    "name": "t node::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::DefineConstants(v8::Isolate*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineErrnoConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineSystemConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::DefineCryptoConstants(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextifyContext(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CreateV8Context(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::WeakCallback(v8::WeakCallbackInfo<node::contextify::ContextifyContext> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CleanupHook(void*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextifyContext(node::Environment*, v8::Local<v8::Object>, node::contextify::ContextOptions const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::~ContextifyContext()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::~ContextifyContext()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CreateDataWrapper(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyGetterCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertySetterCallback(v8::Local<v8::Name>, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDescriptorCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDeleterCallback(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyEnumeratorCallback(v8::PropertyCallbackInfo<v8::Array> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::PropertyDefinerCallback(v8::Local<v8::Name>, v8::PropertyDescriptor const&, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyGetterCallback(unsigned int, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertySetterCallback(unsigned int, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDescriptorCallback(unsigned int, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDeleterCallback(unsigned int, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IndexedPropertyDefinerCallback(unsigned int, v8::PropertyDescriptor const&, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::MakeContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::IsContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyContext::ContextFromContextifiedSandbox(node::Environment*, v8::Local<v8::Object> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::CreateCachedData(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::RunInContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::ContextifyScript(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::InstanceOf(node::Environment*, v8::Local<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::EvalMachine(node::Environment*, long long, bool, bool, bool, std::__1::shared_ptr<v8::MicrotaskQueue>, v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::ContextifyScript(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::ContextifyScript::~ContextifyScript()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::CompiledFnEntry(node::Environment*, v8::Local<v8::Object>, unsigned int, v8::Local<v8::ScriptOrModule>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::WeakCallback(v8::WeakCallbackInfo<node::contextify::CompiledFnEntry> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::CompiledFnEntry(node::Environment*, v8::Local<v8::Object>, unsigned int, v8::Local<v8::ScriptOrModule>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::CompiledFnEntry::~CompiledFnEntry()",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::MicrotaskQueueWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::MicrotaskQueueWrap(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::microtask_queue() const",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::Init(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::MicrotaskQueueWrap::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::StartSigintWatchdog(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::StopSigintWatchdog(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::WatchdogHasPendingSigint(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MeasureMemory(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::contextify::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_contextify()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_contextify(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::ContextifyScript::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::CompiledFnEntry::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::~MicrotaskQueueWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::~MicrotaskQueueWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::contextify::MicrotaskQueueWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_THIS<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::contextify::ContextifyScript*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, node::contextify::CompiledFnEntry*> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::credentials::SafeGetenv(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::shared_ptr<node::KVStore>, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::credentials::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SafeGetenv(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetEUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetEGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::GetGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::InitGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetEGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetEUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetGid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetUid(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::SetGroups(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_credentials()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_credentials(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<unsigned int>(v8::Local<v8::Context>, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::gid_by_name(v8::Isolate*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::uid_by_name(v8::Isolate*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::credentials::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::DirHandle(node::Environment*, v8::Local<v8::Object>, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::DirHandle(node::Environment*, v8::Local<v8::Object>, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::New(node::Environment*, uv_dir_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirHandle::GCClose()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::~DirHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::AfterClose(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::GetReqWrap(v8::FunctionCallbackInfo<v8::Value> const&, int, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::DirHandle::Read(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::AfterDirRead(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirentListToArray(node::Environment*, uv_dirent_s*, int, node::encoding, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::AfterOpenDir(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::OpenDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs_dir::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs_dir()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs_dir(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs_dir::DirHandle::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs_dir::DirHandle::GCClose()::'lambda0'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::FSReqPromise(node::fs::BindingData*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::Resolve(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::SetReturnValue(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned long long, v8::BigUint64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::FSReqPromise(node::fs::BindingData*, v8::Local<v8::Object>, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqPromise<node::AliasedBufferBase<double, v8::Float64Array, void> >::~FSReqPromise()",
    "type": "CPP"
  },
  {
    "name": "T node::MakeLibuvRequestCallback<uv_fs_s, void (*)(uv_fs_s*)>::Wrapper(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<uv_dirent_s, std::__1::allocator<uv_dirent_s> >::__append(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::KVStore>::~shared_ptr()",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Get(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Get(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Set(v8::Isolate*, v8::Local<v8::String>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Query(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Query(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Delete(v8::Isolate*, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::RealEnvStore::Enumerate(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::Clone(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::CreateMapKVStore()",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Get(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Get(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Set(v8::Isolate*, v8::Local<v8::String>, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Query(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Query(v8::Isolate*, v8::Local<v8::String>) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Delete(v8::Isolate*, v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Enumerate(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::MapKVStore::Clone(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::KVStore::AssignFromObject(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::CreateEnvVarProxy(v8::Local<v8::Context>, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvSetter(v8::Local<v8::Name>, v8::Local<v8::Value>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvQuery(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Integer> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvDeleter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Boolean> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvEnumerator(v8::PropertyCallbackInfo<v8::Array> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::RegisterEnvVarExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_env_var(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::MapKVStore::~MapKVStore()",
    "type": "CPP"
  },
  {
    "name": "t node::MapKVStore::~MapKVStore()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_STRING_TOO_LONG<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::MapKVStore, std::__1::allocator<node::MapKVStore> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::unordered_map(std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_env_var.cc",
    "type": "CPP"
  },
  {
    "name": "T node::IsExceptionDecorated(node::Environment*, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintStackTrace(v8::Isolate*, v8::Local<v8::StackTrace>)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintException(v8::Isolate*, v8::Local<v8::Context>, v8::Local<v8::Value>, v8::Local<v8::Message>)",
    "type": "CPP"
  },
  {
    "name": "t node::GetErrorSource(v8::Isolate*, v8::Local<v8::Context>, v8::Local<v8::Message>, bool*)",
    "type": "CPP"
  },
  {
    "name": "T node::PrintCaughtException(v8::Isolate*, v8::Local<v8::Context>, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T node::Assert(node::AssertionInfo const&)",
    "type": "CPP"
  },
  {
    "name": "T node::AppendExceptionLine(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Message>, node::ErrorHandlingMode)",
    "type": "CPP"
  },
  {
    "name": "T node::Abort()",
    "type": "CPP"
  },
  {
    "name": "T node::FatalError(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::OnFatalError(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::ModifyCodeGenerationFromStrings(v8::Local<v8::Context>, v8::Local<v8::Value>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TryCatchScope::~TryCatchScope()",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TryCatchScope::~TryCatchScope()",
    "type": "CPP"
  },
  {
    "name": "t node::ReportFatalException(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Message>, node::EnhanceFatalException)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::errno_string(int)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::PerIsolateMessageListener(v8::Local<v8::Message>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TriggerUncaughtException(v8::Isolate*, v8::Local<v8::Value>, v8::Local<v8::Message>, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::SetPrepareStackTraceCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::SetSourceMapsEnabled(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::SetMaybeCacheGeneratedSourceMap(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::SetEnhanceStackForFatalException(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::NoSideEffectsToString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::errors::TriggerUncaughtException(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::DecorateErrorStack(node::Environment*, node::errors::TryCatchScope const&)",
    "type": "CPP"
  },
  {
    "name": "T node::errors::TriggerUncaughtException(v8::Isolate*, v8::TryCatch const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_errors()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_errors(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<3u, node::Utf8Value>(node::Utf8Value const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToBaseString<4u, node::Utf8Value>(node::Utf8Value const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, char*, 0>(char*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, char*, 0>(char*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_errors.cc",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::external_references()",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::ExternalReferenceRegistry()",
    "type": "CPP"
  },
  {
    "name": "T node::ExternalReferenceRegistry::ExternalReferenceRegistry()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Basename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSContinuationData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandleReadWrap::~FileHandleReadWrap()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FSReqBase::~FSReqBase()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::FileHandle(node::fs::BindingData*, v8::Local<v8::Object>, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::FileHandle(node::fs::BindingData*, v8::Local<v8::Object>, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::New(node::fs::BindingData*, int, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::Close()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::~FileHandle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::TransferData(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::TransferData(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::~TransferData()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::TransferData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::Resolve()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::file_handle()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::CloseReq(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Promise>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::CloseReq(node::Environment*, v8::Local<v8::Object>, v8::Local<v8::Promise>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CloseReq::~CloseReq()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CloseReq::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ClosePromise()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReleaseFD(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::AfterClose()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::FileHandleReadWrap(node::fs::FileHandle*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandleReadWrap::FileHandleReadWrap(node::fs::FileHandle*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::Reject(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::ResolveStat(uv_stat_t const*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::Resolve(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FillGlobalStatsArray(node::fs::BindingData*, bool, uv_stat_t const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqBase::binding_data()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqCallback::SetReturnValue(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::NewFSReqCallback(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::FSReqAfterScope(node::fs::FSReqBase*, uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::FSReqAfterScope(node::fs::FSReqBase*, uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::~FSReqAfterScope()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Clear()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::~FSReqAfterScope()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Reject(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FSReqAfterScope::Proceed()",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterNoArgs(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStat(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterInteger(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterOpenFileHandle(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::FromNamespacedPath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterMkdirp(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStringPath(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterStringPtr(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterScanDir(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::AfterScanDirWithTypes(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Access(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::MKDirpSync(uv_loop_s*, uv_fs_s*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, void (*)(uv_fs_s*))",
    "type": "CPP"
  },
  {
    "name": "T node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))",
    "type": "CPP"
  },
  {
    "name": "T node::fs::CallMKDirpSync(node::Environment*, v8::FunctionCallbackInfo<v8::Value> const&, node::fs::FSReqWrapSync*, char const*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > >, std::__1::__wrap_iter<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> const*> >(char const*, std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::BindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::BindingData(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::Deserialize(v8::Local<v8::Context>, v8::Local<v8::Object>, int, node::InternalFieldInfo*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData* node::Environment::AddBindingData<node::fs::BindingData>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::PrepareForSerialization(v8::Local<v8::Context>, v8::SnapshotCreator*)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::BindingData::Serialize(int)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Open(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::OpenFileHandle(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Read(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadBuffers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Fdatasync(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Fsync(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Rename(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FTruncate(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::RMDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadDir(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::InternalModuleReadJSON(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::InternalModuleStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Stat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FStat(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Link(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Symlink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::ReadLink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Unlink(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteBuffers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::WriteString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::RealPath(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::CopyFile(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Chmod(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FChmod(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Chown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FChown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LChown(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::UTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FUTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::LUTimes(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::Mkdtemp(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::fs::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_fs()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_fs(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::~FSContinuationData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::~FSContinuationData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSContinuationData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqCallback::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FSReqCallback::~FSReqCallback()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandleReadWrap::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandleReadWrap::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::crypto::KeyPairGenConfig<node::crypto::RsaKeyPairParams>::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::GetFD()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::IsAlive()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::IsClosing()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::fs::FileHandle::GetFD()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::TransferData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t icu_71::UCharsTrieBuilder::getMaxLinearMatchLength() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::CloseReq::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::fs::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::v8_utils::BindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs::FileHandle::Close()::'lambda'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::fs::FileHandle::Close()::'lambda0'(node::Environment*)>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::ClosePromise()::$_0::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::ReadStart()::$_1::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> > >::__emplace_back_slow_path<node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false> >(node::BaseObjectPtrImpl<node::fs::FileHandleReadWrap, false>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FileHandle::DoShutdown(node::ShutdownWrap*)::$_2::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t void node::fs::FillStatsArray<double, v8::Float64Array>(node::AliasedBufferBase<double, v8::Float64Array, std::__1::enable_if<std::is_scalar<double>::value, void>::type>*, uv_stat_t const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))::$_3::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::MKDirpAsync(uv_loop_s*, uv_fs_s*, char const*, int, void (*)(uv_fs_s*))::$_3::operator()(uv_fs_s*) const::'lambda'(uv_fs_s*)::__invoke(uv_fs_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::fs::FSReqBase::Init(char const*, char const*, unsigned long, node::encoding)",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::SimpleShutdownWrap(node::StreamBase*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::AsyncWrap>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::SimpleShutdownWrap<node::AsyncWrap>::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleWriteWrap<node::ReqWrap<uv_write_s> >::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::SimpleShutdownWrap<node::ReqWrap<uv_fs_s> >::~SimpleShutdownWrap()",
    "type": "CPP"
  },
  {
    "name": "T _register_http_parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::InitializeHttpParser(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Close(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Free(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Execute(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Finish(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Initialize(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::(anonymous namespace)::Parser::Pause<true>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t void node::(anonymous namespace)::Parser::Pause<false>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Consume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Unconsume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::GetCurrentBuffer(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::~BindingData()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::BindingData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::IsNotIndicativeOfMemoryLeakAtExit() const",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::~Parser()",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t non-virtual thunk to node::(anonymous namespace)::Parser::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Execute(char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_message_begin())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_url(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_status(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_header_field(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_header_value(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_headers_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(char const*, unsigned long), &(node::(anonymous namespace)::Parser::on_body(char const*, unsigned long))>::Raw(llhttp__internal_s*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_message_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_chunk_header())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Proxy<int (node::(anonymous namespace)::Parser::*)(), &(node::(anonymous namespace)::Parser::on_chunk_complete())>::Raw(llhttp__internal_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::Flush()",
    "type": "CPP"
  },
  {
    "name": "t node::(anonymous namespace)::Parser::CreateHeaders()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Callbacks::Callbacks(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Session*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::Http2Scope(node::http2::Http2Session*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::~Http2Scope()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MaybeScheduleWrite()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Scope::~Http2Scope()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Options::Http2Options(node::http2::Http2State*, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Options::Http2Options(node::http2::Http2State*, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Init(node::http2::Http2State*, nghttp2_settings_entry*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Http2Settings(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Http2Settings(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>, unsigned long long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::callback() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack(node::Environment*, unsigned long, nghttp2_settings_entry const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Pack(node::http2::Http2State*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Update(node::http2::Http2Session*, unsigned int (*)(nghttp2_session*, nghttp2_settings_id))",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::RefreshDefaults(node::http2::Http2State*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Send()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Settings::Done(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Priority::Http2Priority(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Priority::Http2Priority(node::Environment*, v8::Local<v8::Value>, v8::Local<v8::Value>, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::TypeName() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Origins::Origins(node::Environment*, v8::Local<v8::String>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Origins::Origins(node::Environment*, v8::Local<v8::String>, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Callbacks::Callbacks(bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnBeginHeadersCallback(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnHeaderCallback(nghttp2_session*, nghttp2_frame const*, nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameReceive(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamClose(nghttp2_session*, int, unsigned int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnDataChunkReceived(nghttp2_session*, unsigned char, int, unsigned char const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameNotSent(nghttp2_session*, nghttp2_frame const*, int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnInvalidHeader(nghttp2_session*, nghttp2_frame const*, nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnNghttpError(nghttp2_session*, char const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnSendData(nghttp2_session*, nghttp2_frame*, unsigned char const*, unsigned long, nghttp2_data_source*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnInvalidFrame(nghttp2_session*, nghttp2_frame const*, int, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnFrameSent(nghttp2_session*, nghttp2_frame const*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnSelectPadding(nghttp2_session*, nghttp2_frame const*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::StopTrackingRcbuf(nghttp2_rcbuf*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CheckAllocatedSize(unsigned long) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::IncreaseAllocatedSize(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::DecreaseAllocatedSize(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Http2Session(node::http2::Http2State*, v8::Local<v8::Object>, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Http2Session(node::http2::Http2State*, v8::Local<v8::Object>, node::http2::SessionType)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::~Http2Session()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >, std::__1::__wrap_iter<node::http2::NgHttp2StreamWrite const*> >(char const*, std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamPerformanceEntryTraits::GetDetails(node::Environment*, node::performance::PerformanceEntry<node::http2::Http2StreamPerformanceEntryTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2SessionPerformanceEntryTraits::GetDetails(node::Environment*, node::performance::PerformanceEntry<node::http2::Http2SessionPerformanceEntryTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::EmitStatistics()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::EmitStatistics()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Close(unsigned int, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SendPendingData()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PopPing()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::DetachFromSession()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::FindStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CanAddStream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddStream(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::operator[](int&&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::RemoveStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnDWordAlignedPadding(unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnMaxFrameSizePadding(unsigned long, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::ConsumeHTTP2Data()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::GetFrameID(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::New(node::http2::Http2Session*, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::StartHeaders(nghttp2_headers_category)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::AddHeader(nghttp2_rcbuf*, nghttp2_rcbuf*, unsigned char)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitRstStream(unsigned int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleDataFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleHeadersFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleSettingsFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandlePriorityFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleGoawayFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandlePingFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleAltSvcFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HandleOriginFrame(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::DecrefHeaders(nghttp2_frame const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::TranslateNghttp2ErrorCode(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Close(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Destroy()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamListener::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2StreamListener::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Done(bool, unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PopSettings()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamAfterWrite(node::WriteWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::ClearOutgoing(int)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamAfterWrite(node::WriteWrap*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::MaybeStopReading()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::FlushRstStream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::PushOutgoingBuffer(node::http2::NgHttp2StreamWrite&&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::CopyDataIntoOutgoing(unsigned char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::~NgHttp2StreamWrite()",
    "type": "CPP"
  },
  {
    "name": "t node::StreamBase::Write(uv_buf_t*, unsigned long, uv_stream_s*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SubmitRequest(node::http2::Http2Priority const&, node::NgHeaders<node::http2::Http2HeadersTraits> const&, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(int)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::Provider::Stream::~Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamAlloc(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Session::OnStreamRead(long, uv_buf_t const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::HasWritesOnSocketForStream(node::http2::Http2Stream*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Consume(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Receive(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Http2Stream(node::http2::Http2Session*, v8::Local<v8::Object>, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Http2Stream(node::http2::Http2Session*, v8::Local<v8::Object>, int, nghttp2_headers_category, int)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::StreamBase::Shutdown(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2StreamListener::~Http2StreamListener()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::~Http2Stream()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >, std::__1::__wrap_iter<node::NgHeader<node::http2::Http2HeaderTraits> const*> >(char const*, std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::diagnostic_name() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::operator*() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::stream() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::CreateShutdownWrap(v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::DoShutdown(node::ShutdownWrap*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitResponse(node::NgHeaders<node::http2::Http2HeadersTraits> const&, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitInfo(node::NgHeaders<node::http2::Http2HeadersTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::OnTrailers()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitTrailers(node::NgHeaders<node::http2::Http2HeadersTraits> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitPriority(node::http2::Http2Priority const&, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::AddPendingRstStream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::SubmitPushPromise(node::NgHeaders<node::http2::Http2HeadersTraits> const&, int*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::ReadStart()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::ReadStop()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::IncrementAvailableOutboundLength(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T non-virtual thunk to node::http2::Http2Stream::DoWrite(node::WriteWrap*, uv_buf_t*, unsigned long, uv_stream_s*)",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::length() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::~NgHeader()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Provider(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::~Provider()",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::OnRead(nghttp2_session*, int, unsigned char*, unsigned long, unsigned int*, nghttp2_data_source*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Provider::Stream::Stream(node::http2::Http2Stream*, int)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::DecrementAvailableOutboundLength(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::HttpErrorString(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::PackSettings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::RefreshDefaultSettings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SetNextStreamID(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::SetLocalWindowSize(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::RefreshState(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Consume(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Destroy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Request(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Goaway(unsigned int, int, unsigned char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Goaway(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<unsigned char, 64ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::UpdateChunksSent(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::RstStream(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Respond(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Info(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Trailers(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::GetID(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Destroy(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::PushPromise(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::Priority(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Stream::RefreshState(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AltSvc(int, unsigned char*, unsigned long, unsigned char*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Origin(node::http2::Origins const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AltSvc(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Origin(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Ping(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::ArrayBufferViewContents<unsigned char, 8ul>::Read(v8::Local<v8::ArrayBufferView>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddPing(unsigned char const*, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::Settings(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Session::AddSettings(v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Send(unsigned char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Http2Ping(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::Http2Ping(node::http2::Http2Session*, v8::Local<v8::Object>, v8::Local<v8::Function>)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2Ping::callback() const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::NgHttp2StreamWrite::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::SetCallbackFunctions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Http2State::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::http2::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State* node::Environment::AddBindingData<node::http2::Http2State>(v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T void node::http2::Http2Session::RefreshSettings<&(nghttp2_session_get_local_settings)>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T void node::http2::Http2Session::RefreshSettings<&(nghttp2_session_get_remote_settings)>(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T _register_http2()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Worker::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::~NgHttp2StreamWrite()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::NgHttp2StreamWrite::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::~Http2Settings()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::~Http2Settings()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Settings::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePortData::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Session::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::StopTrackingMemory(void*)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2StreamListener::~Http2StreamListener()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Stream::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::~Http2Ping()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::~Http2Ping()",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2Ping::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > >::clear()",
    "type": "CPP"
  },
  {
    "name": "t node::StreamReq::Dispose()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::clear()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::~NgRcBufPointer()",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::~NgHeader()",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::GetName(node::http2::Http2Session*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::GetValue(node::http2::Http2Session*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::name() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::value() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeader<node::http2::Http2HeaderTraits>::flags() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeaderBase<node::http2::Http2Session>::ToString() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::~NgRcBufPointer()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<char const*, v8::Eternal<v8::String>, std::__1::hash<char const*>, std::__1::equal_to<char const*>, std::__1::allocator<std::__1::pair<char const* const, v8::Eternal<v8::String> > > >::operator[](char const* const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::String> node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::New<node::http2::Http2Session>(node::http2::Http2Session*, node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::__unordered_map_hasher<char const*, std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::hash<char const*>, true>, std::__1::__unordered_map_equal<char const*, std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> >, std::__1::equal_to<char const*>, true>, std::__1::allocator<std::__1::__hash_value_type<char const*, v8::Eternal<v8::String> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::~External()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::~External()",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::data() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::External::length() const",
    "type": "CPP"
  },
  {
    "name": "t node::NgRcBufPointer<node::http2::Http2RcBufferPointerTraits>::str() const",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::~Http2State()",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedStruct<node::http2::SessionJSFields>::AliasedStruct<>(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::MallocImpl(unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::FreeImpl(void*, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::CallocImpl(unsigned long, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::mem::NgLibMemoryManager<node::http2::Http2Session, nghttp2_mem>::ReallocImpl(void*, unsigned long, void*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >(char const*, std::__1::pair<int const, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > const&, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > >, std::__1::__deque_iterator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const*, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const&, node::BaseObjectPtrImpl<node::http2::Http2Ping, false> const* const*, long, 512l> >(char const*, std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Ping, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Ping, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false> > >, std::__1::__deque_iterator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const*, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const&, node::BaseObjectPtrImpl<node::http2::Http2Settings, false> const* const*, long, 512l> >(char const*, std::__1::deque<node::BaseObjectPtrImpl<node::http2::Http2Settings, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::http2::Http2Settings, false> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::EmitStatistics()::$_0>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::performance::PerformanceEntry<node::http2::Http2StreamPerformanceEntryTraits>::Notify(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::EmitStatistics()::$_1>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t node::performance::PerformanceEntry<node::http2::Http2SessionPerformanceEntryTraits>::Notify(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<3u, unsigned int, 0>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned int, 0>(unsigned int const&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::Close(unsigned int, bool)::$_2>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__hash_table<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, node::BaseObjectPtrImpl<node::http2::Http2Stream, false> > > >::__erase_unique<int>(int const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned long, 0>(unsigned long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, long, 0>(long const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::ToStringHelper::BaseConvert<4u, unsigned char, 0>(unsigned char const&)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Session::MaybeScheduleWrite()::$_4>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::__emplace_back_slow_path<node::http2::NgHttp2StreamWrite>(node::http2::NgHttp2StreamWrite&&)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >, std::__1::__deque_iterator<node::http2::NgHttp2StreamWrite, node::http2::NgHttp2StreamWrite const*, node::http2::NgHttp2StreamWrite const&, node::http2::NgHttp2StreamWrite const* const*, long, 128l> >(char const*, std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::~CallbackImpl()",
    "type": "CPP"
  },
  {
    "name": "t node::CallbackQueue<void, node::Environment*>::CallbackImpl<node::http2::Http2Stream::Destroy()::$_5>::Call(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<node::http2::NgHttp2StreamWrite, std::__1::allocator<node::http2::NgHttp2StreamWrite> >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::NgHeader<node::http2::Http2HeaderTraits>, std::__1::allocator<node::NgHeader<node::http2::Http2HeaderTraits> > >::__push_back_slow_path<node::NgHeader<node::http2::Http2HeaderTraits> >(node::NgHeader<node::http2::Http2HeaderTraits>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::NgHeaders<node::http2::Http2HeadersTraits>::NgHeaders(node::Environment*, v8::Local<v8::Array>)",
    "type": "CPP"
  },
  {
    "name": "t node::http2::Http2State::Http2State(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<double, v8::Float64Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long, node::AliasedBufferBase<unsigned char, v8::Uint8Array, void> const&, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t node::AliasedBufferBase<unsigned int, v8::Uint32Array, void>::AliasedBufferBase(v8::Isolate*, unsigned long, unsigned long, node::AliasedBufferBase<unsigned char, v8::Uint8Array, void> const&, unsigned long const*)",
    "type": "CPP"
  },
  {
    "name": "t ___cxx_global_array_dtor",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_http2.cc",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::set_subst_chars(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(UConverter*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::Converter(UConverter*, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::reset()",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::min_char_size() const",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Converter::max_char_size() const",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Has(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Create(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::ConverterObject(node::Environment*, v8::Local<v8::Object>, UConverter*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::Decode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::MaybeStackBuffer<char16_t, 1024ul>::AllocateSufficientStorage(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ConverterObject::ConverterObject(node::Environment*, v8::Local<v8::Object>, UConverter*, int, char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::InitializeICUDirectory(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::SetDefaultTimeZone(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ToUnicode(node::MaybeStackBuffer<char, 1024ul>*, char const*, unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::ToASCII(node::MaybeStackBuffer<char, 1024ul>*, char const*, unsigned long, node::i18n::idna_mode)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ToUnicode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ToASCII(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::GetStringWidth(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::ICUErrorName(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::Transcode(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::i18n::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_icu()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_icu(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::~ConverterObject()",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::~ConverterObject()",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::ConverterObject::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::Transcode(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeToUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeUcs2FromUtf8(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeUtf8FromUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "t node::i18n::(anonymous namespace)::TranscodeFromUcs2(node::Environment*, char const*, char const*, char const*, unsigned long, UErrorCode*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Create(v8::Isolate*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(node::SnapshotData const*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::NodeMainInstance(node::SnapshotData const*, uv_loop_s*, node::MultiIsolatePlatform*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Dispose()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::~NodeMainInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::~NodeMainInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Run()",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::CreateMainEnvironment(int*)",
    "type": "CPP"
  },
  {
    "name": "T node::NodeMainInstance::Run(int*, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::NestedTransferables() const",
    "type": "CPP"
  },
  {
    "name": "T node::BaseObject::FinalizeTransferRead(v8::Local<v8::Context>, v8::ValueDeserializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::TransferData::FinalizeTransferWrite(v8::Local<v8::Context>, v8::ValueSerializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Message(node::MallocedBuffer<char>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Message(node::MallocedBuffer<char>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::IsCloseMessage() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Deserialize(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::~DeserializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddSharedArrayBuffer(std::__1::shared_ptr<v8::BackingStore>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddTransferable(std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::AddWASMModule(v8::CompiledWasmModule&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::Serialize(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul> const&, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::~SerializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::Message::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::shared_ptr<v8::BackingStore>, std::__1::allocator<std::__1::shared_ptr<v8::BackingStore> > >, std::__1::__wrap_iter<std::__1::shared_ptr<v8::BackingStore> const*> >(char const*, std::__1::vector<std::__1::shared_ptr<v8::BackingStore>, std::__1::allocator<std::__1::shared_ptr<v8::BackingStore> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::vector<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >, std::__1::allocator<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > > >, std::__1::__wrap_iter<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > const*> >(char const*, std::__1::vector<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >, std::__1::allocator<std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> > > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MessagePortData(node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MessagePortData(node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Disentangle()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::~MessagePortData()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "t void node::MemoryTracker::TrackField<std::__1::deque<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > >, std::__1::__deque_iterator<std::__1::shared_ptr<node::worker::Message>, std::__1::shared_ptr<node::worker::Message> const*, std::__1::shared_ptr<node::worker::Message> const&, std::__1::shared_ptr<node::worker::Message> const* const*, long, 256l> >(char const*, std::__1::deque<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > > const&, char const*, char const*, bool)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::AddToIncomingQueue(std::__1::shared_ptr<node::worker::Message>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::TriggerAsync()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Entangle(node::worker::MessagePortData*, node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Entangle(std::initializer_list<node::worker::MessagePortData*>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Disentangle(node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Detach()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::~MessagePort()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Close(v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::New(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::MessagePortData, std::__1::default_delete<node::worker::MessagePortData> >, std::__1::shared_ptr<node::worker::SiblingGroup>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::GetMessagePortConstructorTemplate(node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Entangle(node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::ReceiveMessage(v8::Local<v8::Context>, node::worker::MessagePort::MessageProcessingMode, v8::Local<v8::Value>*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::OnMessage(node::worker::MessagePort::MessageProcessingMode)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::OnClose()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::PostMessage(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Value>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePortData::Dispatch(std::__1::shared_ptr<node::worker::Message>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Dispatch(node::worker::MessagePortData*, std::__1::shared_ptr<node::worker::Message>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::PostMessage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::ReadIterable(node::Environment*, v8::Local<v8::Context>, node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul>&, v8::Local<v8::Value>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Start()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Stop()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Start(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Stop(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::CheckType(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Drain(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::ReceiveMessage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MoveToContext(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Entangle(node::worker::MessagePort*, node::worker::MessagePort*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::Entangle(node::worker::MessagePort*, node::worker::MessagePortData*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::MessagePort::MemoryInfo(node::MemoryTracker*) const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::JSTransferable(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::JSTransferable(node::Environment*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::New(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::GetTransferMode() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::TransferForMessaging()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::TransferOrClone(node::BaseObject::TransferMode) const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::CloneForMessaging() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::NestedTransferables() const",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::FinalizeTransferRead(v8::Local<v8::Context>, v8::ValueDeserializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Data(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, v8::Global<v8::Value>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Data(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&, v8::Global<v8::Value>&&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::Deserialize(node::Environment*, v8::Local<v8::Context>, std::__1::unique_ptr<node::worker::TransferData, std::__1::default_delete<node::worker::TransferData> >)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::JSTransferable::Data::FinalizeTransferWrite(v8::Local<v8::Context>, v8::ValueSerializer*)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::Get(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::CheckSiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::SiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::SiblingGroup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::~SiblingGroup()",
    "type": "CPP"
  },
  {
    "name": "T node::worker::SiblingGroup::~SiblingGroup()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::~unordered_map()",
    "type": "CPP"
  },
  {
    "name": "T _register_messaging()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_messaging(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePortData::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::SelfSize() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::~JSTransferable()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::~JSTransferable()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::~Data()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::~Data()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::JSTransferable::Data::MemoryInfoName() const",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::~DeserializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::ReadHostObject(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::GetWasmModuleFromId(v8::Isolate*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::DeserializerDelegate::GetSharedArrayBufferFromId(v8::Isolate*, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::~SerializerDelegate()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::ThrowDataCloneError(v8::Local<v8::String>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::WriteHostObject(v8::Isolate*, v8::Local<v8::Object>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::GetSharedArrayBufferId(v8::Isolate*, v8::Local<v8::SharedArrayBuffer>)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SerializerDelegate::GetWasmModuleTransferId(v8::Isolate*, v8::Local<v8::WasmModuleObject>)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_MISSING_TRANSFERABLE_IN_TRANSFER_LIST<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__emplace_back_slow_path<node::BaseObject*>(node::BaseObject*&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<v8::Global<v8::SharedArrayBuffer>, std::__1::allocator<v8::Global<v8::SharedArrayBuffer> > >::__emplace_back_slow_path<v8::Global<v8::SharedArrayBuffer> >(v8::Global<v8::SharedArrayBuffer>&&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::GetDOMException(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::__emplace_back_slow_path<node::BaseObjectPtrImpl<node::BaseObject, false> >(node::BaseObjectPtrImpl<node::BaseObject, false>&&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_INVALID_TRANSFER_OBJECT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::enable_if<(__is_forward_iterator<node::BaseObjectPtrImpl<node::BaseObject, false>*>::value) && (is_constructible<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::iterator_traits<node::BaseObjectPtrImpl<node::BaseObject, false>*>::reference>::value), void>::type std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::assign<node::BaseObjectPtrImpl<node::BaseObject, false>*>(node::BaseObjectPtrImpl<node::BaseObject, false>*, node::BaseObjectPtrImpl<node::BaseObject, false>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__deque_base<std::__1::shared_ptr<node::worker::Message>, std::__1::allocator<std::__1::shared_ptr<node::worker::Message> > >::clear()",
    "type": "CPP"
  },
  {
    "name": "t node::worker::MessagePort::MessagePort(node::Environment*, v8::Local<v8::Context>, v8::Local<v8::Object>)::$_1::__invoke(uv_async_s*)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CONSTRUCT_CALL_INVALID<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::MaybeStackBuffer<v8::Local<v8::Value>, 8ul>::AllocateSufficientStorage(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::Message::~Message()",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CLOSED_MESSAGE_PORT<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::InitMessaging(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::MessageChannel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::SetDeserializerCreateObjectFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t node::worker::(anonymous namespace)::BroadcastChannel(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::Local<v8::Value> node::ERR_CONSTRUCT_CALL_REQUIRED<>(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > >::vector(std::__1::vector<node::BaseObjectPtrImpl<node::BaseObject, false>, std::__1::allocator<node::BaseObjectPtrImpl<node::BaseObject, false> > > const&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit>, std::__1::allocator<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit> > >::__emplace_back_slow_path<std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit> >(std::__1::shared_ptr<v8::internal::wasm::JSToWasmWrapperCompilationUnit>&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> >, std::__1::allocator<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> > > >::__push_back_slow_path<std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> > >(std::__1::unique_ptr<cppgc::internal::PageMemoryRegion, std::__1::default_delete<cppgc::internal::PageMemoryRegion> >&&)",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::vector<v8::CompiledWasmModule, std::__1::allocator<v8::CompiledWasmModule> >::__emplace_back_slow_path<v8::CompiledWasmModule>(v8::CompiledWasmModule&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::deque<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >::__add_back_capacity()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__split_buffer<int*, std::__1::allocator<int*> >::push_front(int*&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::worker::SiblingGroup> std::__1::shared_ptr<node::worker::SiblingGroup>::make_shared<>()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::SiblingGroup, std::__1::allocator<node::worker::SiblingGroup> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::Message, std::__1::allocator<node::worker::Message> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::worker::Message, std::__1::allocator<node::worker::Message> >::~__shared_ptr_emplace()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__shared_ptr_emplace<node::inspector::NodeInspectorClient, std::__1::allocator<node::inspector::NodeInspectorClient> >::__on_zero_shared()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::shared_ptr<node::worker::SiblingGroup> std::__1::shared_ptr<node::worker::SiblingGroup>::make_shared<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::weak_ptr<node::worker::SiblingGroup> > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_bad_weak_ptr()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::__tree_remove<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_messaging.cc",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Metadata()",
    "type": "CPP"
  },
  {
    "name": "t node::Metadata::~Metadata()",
    "type": "CPP"
  },
  {
    "name": "T node::GetOpenSSLVersion()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::InitializeIntlVersions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::Versions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Versions::Versions()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Release::Release()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Release::Release()",
    "type": "CPP"
  },
  {
    "name": "T node::Metadata::Metadata()",
    "type": "CPP"
  },
  {
    "name": "t node::Metadata::Versions::~Versions()",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_metadata.cc",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "t node::native_module::NativeModuleLoader::~NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetInstance()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::Exists(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::Add(char const*, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetSourceObject(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "t node::UnionBytes::ToStringChecked(v8::Isolate*) const",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetConfigString(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetModuleIds()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::reserve(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::InitializeModuleCategories()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCannotBeRequired()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCanBeRequired()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CanBeRequired(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CannotBeRequired(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::code_cache()",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::GetCodeCache(char const*) const",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::CompileAsModule(v8::Local<v8::Context>, char const*, node::native_module::NativeModuleLoader::Result*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::LookupAndCompile(v8::Local<v8::Context>, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, node::native_module::NativeModuleLoader::Result*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleLoader::LoadBuiltinModuleSource(v8::Isolate*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::native_module::NativeModuleLoader::~NativeModuleLoader()",
    "type": "CPP"
  },
  {
    "name": "t node::NonOwningExternalTwoByteResource::data() const",
    "type": "CPP"
  },
  {
    "name": "t node::NonOwningExternalTwoByteResource::length() const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::UnionBytes> > >::__emplace_unique_impl<char const*&, node::UnionBytes const&>(char const*&, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_unique_impl<char const (&) [37]>(char const (&) [37])",
    "type": "CPP"
  },
  {
    "name": "t unsigned long std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__count_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*>*>)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::__construct_node<char const*&, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >(char const*&, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> >&&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::unique_ptr<v8::ScriptCompiler::CachedData, std::__1::default_delete<v8::ScriptCompiler::CachedData> > > > >::__rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t __GLOBAL__sub_I_node_native_module.cc",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::ToJsSet(v8::Local<v8::Context>, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Add(char const*, node::UnionBytes const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Exists(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetSourceObject(v8::Local<v8::Context>)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetConfigString(v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetModuleCategories(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::set(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::GetCacheUsage(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(v8::Local<v8::Context>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::ModuleIdsGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::ConfigStringGetter(v8::Local<v8::Name>, v8::PropertyCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::RecordResult(char const*, node::native_module::NativeModuleLoader::Result, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::CompileFunction(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::LookupAndCompile(v8::Local<v8::Context>, char const*, std::__1::vector<v8::Local<v8::String>, std::__1::allocator<v8::Local<v8::String> > >*, node::Environment*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::HasCachedBuiltins(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::native_module::NativeModuleEnv::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T _register_native_module()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_native_module(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "T node::DebugOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::PerProcessOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::PerIsolateOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::EnvironmentOptions::CheckOptions(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::DebugOptionsParser::DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::DebugOptionsParser::~DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::EnvironmentOptionsParser::~EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::DebugOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::DebugOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::DebugOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerIsolateOptionsParser::PerIsolateOptionsParser(node::options_parser::EnvironmentOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerIsolateOptionsParser::~PerIsolateOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerProcessOptionsParser::PerProcessOptionsParser(node::options_parser::PerIsolateOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerProcessOptionsParser::~PerProcessOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::PerIsolateOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerIsolateOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerIsolateOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T void node::options_parser::Parse<node::PerProcessOptions, node::Options>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerProcessOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, node::PerProcessOptions*, node::OptionEnvvarSettings, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::DebugOptionsParser::DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, node::HostPort node::DebugOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddAlias(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, bool node::DebugOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddAlias(char const*, std::initializer_list<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::DebugOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::EnvironmentOptionsParser::EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, bool node::EnvironmentOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::EnvironmentOptions>::NoOp, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, long long node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::EnvironmentOptions>::V8Option, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::AddOption(char const*, char const*, unsigned long long node::EnvironmentOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::EnvironmentOptionsParser::EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerIsolateOptionsParser::PerIsolateOptionsParser(node::options_parser::EnvironmentOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, bool node::PerIsolateOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::PerIsolateOptions>::V8Option, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::PerIsolateOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::PerIsolateOptions>::NoOp, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::PerIsolateOptions>::Insert<node::EnvironmentOptions>(node::options_parser::OptionsParser<node::EnvironmentOptions> const&, node::EnvironmentOptions* (node::PerIsolateOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::PerIsolateOptions::get_per_env_options()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::PerProcessOptionsParser::PerProcessOptionsParser(node::options_parser::PerIsolateOptionsParser const&)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, long long node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, bool node::PerProcessOptions::*, node::OptionEnvvarSettings, bool)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > node::PerProcessOptions::*, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::Implies(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::ImpliesNot(char const*, char const*)",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::PerProcessOptions>::Insert<node::PerIsolateOptions>(node::options_parser::OptionsParser<node::PerIsolateOptions> const&, node::PerIsolateOptions* (node::PerProcessOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::PerProcessOptions::get_per_isolate_options()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::AddOption(char const*, char const*, node::options_parser::OptionsParser<node::PerProcessOptions>::NoOp, node::OptionEnvvarSettings)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::SplitHostPort(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::ParseAndValidatePort(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetBashCompletion()",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetCLIOptions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "t v8::MaybeLocal<v8::Value> node::ToV8Value<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(v8::Local<v8::Context>, std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > > const&, v8::Isolate*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::GetEmbedderOptions(v8::FunctionCallbackInfo<v8::Value> const&)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::Initialize(v8::Local<v8::Object>, v8::Local<v8::Value>, v8::Local<v8::Context>, void*)",
    "type": "CPP"
  },
  {
    "name": "T node::options_parser::RegisterExternalReferences(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleEnvOptions(std::__1::shared_ptr<node::EnvironmentOptions>)",
    "type": "CPP"
  },
  {
    "name": "T node::HandleEnvOptions(std::__1::shared_ptr<node::EnvironmentOptions>, std::__1::function<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > (char const*)>)",
    "type": "CPP"
  },
  {
    "name": "T node::ParseNodeOptionsEnvVar(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)",
    "type": "CPP"
  },
  {
    "name": "T _register_options()",
    "type": "CPP"
  },
  {
    "name": "T _register_external_reference_options(node::ExternalReferenceRegistry*)",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::EnvironmentOptions::~EnvironmentOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::DebugOptions::~DebugOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::DebugOptions::~DebugOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::~PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::~PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerProcessOptions::~PerProcessOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::PerProcessOptions::~PerProcessOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::DebugOptionsParser::~DebugOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::EnvironmentOptionsParser::~EnvironmentOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerIsolateOptionsParser::~PerIsolateOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::PerProcessOptionsParser::~PerProcessOptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::PerIsolateOptions::PerIsolateOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::DebugOptions>::~OptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::~unordered_map()",
    "type": "CPP"
  },
  {
    "name": "t void node::options_parser::OptionsParser<node::EnvironmentOptions>::Insert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions> const&, node::DebugOptions* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "T node::EnvironmentOptions::get_debug_options()",
    "type": "CPP"
  },
  {
    "name": "t void std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::insert<std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> > >(std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> >, std::__1::__hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*> >)",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions>::OptionInfo, node::options_parser::OptionsParser<node::DebugOptions>* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::DebugOptions>(node::options_parser::OptionsParser<node::DebugOptions>::Implication, node::options_parser::OptionsParser<node::DebugOptions>* (node::EnvironmentOptions::*)())",
    "type": "CPP"
  },
  {
    "name": "t std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__construct_node_hash<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&>(unsigned long, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__throw_length_error(char const*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::OptionInfo> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField::~AdaptedField()",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField::~AdaptedField()",
    "type": "CPP"
  },
  {
    "name": "t auto node::options_parser::OptionsParser<node::EnvironmentOptions>::Convert<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField, node::DebugOptions>(std::__1::shared_ptr<node::options_parser::OptionsParser<node::DebugOptions>::BaseOptionField>, node::DebugOptions* (node::EnvironmentOptions::*)())::AdaptedField::LookupImpl(node::EnvironmentOptions*) const",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication> > >::__node_insert_multi(std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, void*>*)",
    "type": "CPP"
  },
  {
    "name": "t std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, node::options_parser::OptionsParser<node::EnvironmentOptions>::Implication> > >::rehash(unsigned long)",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::EnvironmentOptions>::~OptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerIsolateOptions>::~OptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::OptionsParser<node::PerProcessOptions>::~OptionsParser()",
    "type": "CPP"
  },
  {
    "name": "t std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)",
    "type": "CPP"
  },
  {
    "name": "t node::PerProcessOptions::~PerProcessOptions()",
    "type": "CPP"
  },
  {
    "name": "t node::options_parser::ArgsInfo::pop_first()",
    "type": "CPP"
  },
  {
    "name": "Abort.ExtraWide",
    "timestamp": 26049,
    "type": "CODE",
    "kind": "BytecodeHandler"
  },
  {
    "name": "/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libobjc.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/liboah.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libfakelink.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libicucore.A.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libSystem.B.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++abi.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/libc++.1.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcache.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcommonCrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcompiler_rt.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcopyfile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libcorecrypto.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdispatch.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libdyld.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libkeymgr.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libmacho.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libquarantine.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libremovefile.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_asl.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_blocks.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_c.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_collections.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_configuration.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_containermanager.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_coreservices.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_darwin.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_dnssd.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_featureflags.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_info.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_m.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_malloc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_networkextension.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_notify.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_product_info_filter.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_sandbox.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_secinit.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_kernel.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _kdebug_is_enabled",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T _issetugid",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_get",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _task_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_self_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_trap",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_generate_activity_id",
    "type": "CPP"
  },
  {
    "name": "T _task_name_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _pid_for_task",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapon",
    "type": "CPP"
  },
  {
    "name": "T _macx_swapoff",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _macx_triggers",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_suspend",
    "type": "CPP"
  },
  {
    "name": "T _macx_backing_store_recovery",
    "type": "CPP"
  },
  {
    "name": "T _swtch_pri",
    "type": "CPP"
  },
  {
    "name": "T _swtch",
    "type": "CPP"
  },
  {
    "name": "T _syscall_thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep_trap",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type_trap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info_trap",
    "type": "CPP"
  },
  {
    "name": "T _mach_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_create",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_cancel",
    "type": "CPP"
  },
  {
    "name": "T _mk_timer_arm_leeway",
    "type": "CPP"
  },
  {
    "name": "T _debug_control_port_for_pid",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_register",
    "type": "CPP"
  },
  {
    "name": "t _memcpy",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg",
    "type": "CPP"
  },
  {
    "name": "T _mach_timebase_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_absolute_time",
    "type": "CPP"
  },
  {
    "name": "T _getentropy",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_voucher_init",
    "type": "CPP"
  },
  {
    "name": "T _getpid",
    "type": "CPP"
  },
  {
    "name": "T _task_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T _task_info",
    "type": "CPP"
  },
  {
    "name": "T _csops_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _cerror_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___error",
    "type": "CPP"
  },
  {
    "name": "T _getattrlist",
    "type": "CPP"
  },
  {
    "name": "T _access",
    "type": "CPP"
  },
  {
    "name": "T ___open",
    "type": "CPP"
  },
  {
    "name": "T _fstat64",
    "type": "CPP"
  },
  {
    "name": "T _csr_check",
    "type": "CPP"
  },
  {
    "name": "T ___csrctl",
    "type": "CPP"
  },
  {
    "name": "T _fcntl",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl",
    "type": "CPP"
  },
  {
    "name": "T _close",
    "type": "CPP"
  },
  {
    "name": "T _read",
    "type": "CPP"
  },
  {
    "name": "T ___open_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _mmap",
    "type": "CPP"
  },
  {
    "name": "T ___mmap",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_self",
    "type": "CPP"
  },
  {
    "name": "T _host_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_destroy",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_destroy_port",
    "type": "CPP"
  },
  {
    "name": "T _host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_clear",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T _task_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _geteuid",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T ___sysctl",
    "type": "CPP"
  },
  {
    "name": "T _mach_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T _mig_get_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy_zerofill",
    "type": "CPP"
  },
  {
    "name": "T _shm_open",
    "type": "CPP"
  },
  {
    "name": "T _close$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___openat",
    "type": "CPP"
  },
  {
    "name": "T _cerror",
    "type": "CPP"
  },
  {
    "name": "t __pthread_exit_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T _lseek",
    "type": "CPP"
  },
  {
    "name": "T _pread",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___sysctlbyname",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_ms",
    "type": "CPP"
  },
  {
    "name": "T _chdir",
    "type": "CPP"
  },
  {
    "name": "T _stat64",
    "type": "CPP"
  },
  {
    "name": "T _mkdir",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getuid",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getugid_np",
    "type": "CPP"
  },
  {
    "name": "T _getegid",
    "type": "CPP"
  },
  {
    "name": "T _csops",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath",
    "type": "CPP"
  },
  {
    "name": "t _strlen",
    "type": "CPP"
  },
  {
    "name": "T _fstatfs64",
    "type": "CPP"
  },
  {
    "name": "T ___getdirentries64",
    "type": "CPP"
  },
  {
    "name": "T ___workq_kernreturn",
    "type": "CPP"
  },
  {
    "name": "T ___workq_open",
    "type": "CPP"
  },
  {
    "name": "T _kevent_qos",
    "type": "CPP"
  },
  {
    "name": "T _kevent_id",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfid",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wake",
    "type": "CPP"
  },
  {
    "name": "T ___commpage_gettimeofday",
    "type": "CPP"
  },
  {
    "name": "t ___commpage_gettimeofday_internal",
    "type": "CPP"
  },
  {
    "name": "T _read$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_get_times",
    "type": "CPP"
  },
  {
    "name": "t __mach_continuous_time_base",
    "type": "CPP"
  },
  {
    "name": "T _host_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T _vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _getrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___getrlimit",
    "type": "CPP"
  },
  {
    "name": "T _getaudit_addr",
    "type": "CPP"
  },
  {
    "name": "T _syscall",
    "type": "CPP"
  },
  {
    "name": "T _readlink",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T _proc_setpcontrol",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace64",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _posix_madvise",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexwait",
    "type": "CPP"
  },
  {
    "name": "T _setrlimit",
    "type": "CPP"
  },
  {
    "name": "T ___setrlimit",
    "type": "CPP"
  },
  {
    "name": "T _task_restartable_ranges_synchronize",
    "type": "CPP"
  },
  {
    "name": "T ___disable_threadsignal",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_mutexdrop",
    "type": "CPP"
  },
  {
    "name": "T _getfsstat64",
    "type": "CPP"
  },
  {
    "name": "T _statfs64",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T _vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _getxattr",
    "type": "CPP"
  },
  {
    "name": "T _thread_destruct_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_destroy",
    "type": "CPP"
  },
  {
    "name": "T _proc_track_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_dirty",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_refs",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_revert",
    "type": "CPP"
  },
  {
    "name": "T _voucher_mach_msg_adopt",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T _sigprocmask",
    "type": "CPP"
  },
  {
    "name": "T ___sigaltstack",
    "type": "CPP"
  },
  {
    "name": "T _pwrite",
    "type": "CPP"
  },
  {
    "name": "T _ftruncate",
    "type": "CPP"
  },
  {
    "name": "T _setattrlist",
    "type": "CPP"
  },
  {
    "name": "T _getattrlistbulk",
    "type": "CPP"
  },
  {
    "name": "T _listxattr",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvbroad",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_np",
    "type": "CPP"
  },
  {
    "name": "T _guarded_pwrite_np",
    "type": "CPP"
  },
  {
    "name": "T _vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _fsctl",
    "type": "CPP"
  },
  {
    "name": "T _fgetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _munmap",
    "type": "CPP"
  },
  {
    "name": "T ___munmap",
    "type": "CPP"
  },
  {
    "name": "T _fsgetpath",
    "type": "CPP"
  },
  {
    "name": "T _setxattr",
    "type": "CPP"
  },
  {
    "name": "T _mkdirat",
    "type": "CPP"
  },
  {
    "name": "T _fstatat64",
    "type": "CPP"
  },
  {
    "name": "T _guarded_close_np",
    "type": "CPP"
  },
  {
    "name": "T _fsync",
    "type": "CPP"
  },
  {
    "name": "T _host_get_io_master",
    "type": "CPP"
  },
  {
    "name": "T _write",
    "type": "CPP"
  },
  {
    "name": "T _rename",
    "type": "CPP"
  },
  {
    "name": "T ___rename",
    "type": "CPP"
  },
  {
    "name": "T ___inc_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _rmdir",
    "type": "CPP"
  },
  {
    "name": "T ___rmdir",
    "type": "CPP"
  },
  {
    "name": "T _chmod",
    "type": "CPP"
  },
  {
    "name": "T ___chmod",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_create",
    "type": "CPP"
  },
  {
    "name": "T _mprotect",
    "type": "CPP"
  },
  {
    "name": "t ___gettimeofday_with_mach",
    "type": "CPP"
  },
  {
    "name": "T ___gettimeofday",
    "type": "CPP"
  },
  {
    "name": "T _writev",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvclrprepost",
    "type": "CPP"
  },
  {
    "name": "T _write$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_info",
    "type": "CPP"
  },
  {
    "name": "T ___persona",
    "type": "CPP"
  },
  {
    "name": "T _unlink",
    "type": "CPP"
  },
  {
    "name": "T ___unlink",
    "type": "CPP"
  },
  {
    "name": "T _flock",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_request_notification",
    "type": "CPP"
  },
  {
    "name": "T _necp_open",
    "type": "CPP"
  },
  {
    "name": "T _change_fdguard_np",
    "type": "CPP"
  },
  {
    "name": "T _necp_client_action",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_get",
    "type": "CPP"
  },
  {
    "name": "T _getgid",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_self",
    "type": "CPP"
  },
  {
    "name": "T _socket",
    "type": "CPP"
  },
  {
    "name": "T _fcntl$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___fcntl_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _setsockopt",
    "type": "CPP"
  },
  {
    "name": "T _connect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sendto$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _socketpair",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _ioctl",
    "type": "CPP"
  },
  {
    "name": "T ___ioctl",
    "type": "CPP"
  },
  {
    "name": "T _connect",
    "type": "CPP"
  },
  {
    "name": "T _sendto",
    "type": "CPP"
  },
  {
    "name": "T _recvfrom",
    "type": "CPP"
  },
  {
    "name": "T _connectx",
    "type": "CPP"
  },
  {
    "name": "T _getsockopt",
    "type": "CPP"
  },
  {
    "name": "T _shutdown",
    "type": "CPP"
  },
  {
    "name": "T _fgetxattr",
    "type": "CPP"
  },
  {
    "name": "T _dup",
    "type": "CPP"
  },
  {
    "name": "T _select",
    "type": "CPP"
  },
  {
    "name": "T _getpeername",
    "type": "CPP"
  },
  {
    "name": "T _fchmod",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod",
    "type": "CPP"
  },
  {
    "name": "T _getiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T ___iopolicysys",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_send",
    "type": "CPP"
  },
  {
    "name": "T _link",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_release",
    "type": "CPP"
  },
  {
    "name": "T _vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_reply_setup",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_cvsignal",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_attr_command",
    "type": "CPP"
  },
  {
    "name": "T _removexattr",
    "type": "CPP"
  },
  {
    "name": "T _clonefileat",
    "type": "CPP"
  },
  {
    "name": "T _host_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy",
    "type": "CPP"
  },
  {
    "name": "t __pthread_clear_qos_tsd",
    "type": "CPP"
  },
  {
    "name": "T _mig_put_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _select$1050",
    "type": "CPP"
  },
  {
    "name": "T _mig_strncpy",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_wrlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_rdlock",
    "type": "CPP"
  },
  {
    "name": "T _fsetxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_context",
    "type": "CPP"
  },
  {
    "name": "T _fchflags",
    "type": "CPP"
  },
  {
    "name": "T _futimes",
    "type": "CPP"
  },
  {
    "name": "T _umask",
    "type": "CPP"
  },
  {
    "name": "T _utimes",
    "type": "CPP"
  },
  {
    "name": "T _thread_switch",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_time",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T _gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___gethostuuid",
    "type": "CPP"
  },
  {
    "name": "T ___stat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___chmod_extended",
    "type": "CPP"
  },
  {
    "name": "T ___lstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T _open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___fstat64_extended",
    "type": "CPP"
  },
  {
    "name": "T ___fchmod_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsetattrlist",
    "type": "CPP"
  },
  {
    "name": "T _fchown",
    "type": "CPP"
  },
  {
    "name": "T _getgroups",
    "type": "CPP"
  },
  {
    "name": "T _lchown",
    "type": "CPP"
  },
  {
    "name": "T _symlink",
    "type": "CPP"
  },
  {
    "name": "T ___openat_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sendmsg",
    "type": "CPP"
  },
  {
    "name": "T _mig_deallocate",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_typefilter",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_init",
    "type": "CPP"
  },
  {
    "name": "t _mach_init_doit",
    "type": "CPP"
  },
  {
    "name": "T __init_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "T __get_cpu_capabilities",
    "type": "CPP"
  },
  {
    "name": "t __pthread_set_self",
    "type": "CPP"
  },
  {
    "name": "t _strcmp",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcmp",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_platform_init",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_self",
    "type": "CPP"
  },
  {
    "name": "T ___bsdthread_register",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_service",
    "type": "CPP"
  },
  {
    "name": "T _proc_name",
    "type": "CPP"
  },
  {
    "name": "t _bcopy",
    "type": "CPP"
  },
  {
    "name": "T _kqueue",
    "type": "CPP"
  },
  {
    "name": "T _kevent",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T ___pselect",
    "type": "CPP"
  },
  {
    "name": "T _quotactl",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makefd",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_policy_set",
    "type": "CPP"
  },
  {
    "name": "T _msync",
    "type": "CPP"
  },
  {
    "name": "T _pipe",
    "type": "CPP"
  },
  {
    "name": "T _fileport_makeport",
    "type": "CPP"
  },
  {
    "name": "T ___kqueue_workloop_ctl",
    "type": "CPP"
  },
  {
    "name": "T ___sigaction",
    "type": "CPP"
  },
  {
    "name": "T _getppid",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_string",
    "type": "CPP"
  },
  {
    "name": "t _mach_error_string_int",
    "type": "CPP"
  },
  {
    "name": "t _do_compat",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_init",
    "type": "CPP"
  },
  {
    "name": "t _malloc",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_adddup2",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_file_actions_grow",
    "type": "CPP"
  },
  {
    "name": "t _realloc",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "t _posix_spawnattr_macpolicyinfo_lookup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setmacpolicyinfo_np",
    "type": "CPP"
  },
  {
    "name": "t _strlcpy",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_fchdir",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_chdir",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T ___posix_spawn",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_destroy",
    "type": "CPP"
  },
  {
    "name": "t _free",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___wait4",
    "type": "CPP"
  },
  {
    "name": "T _mach_continuous_approximate_time",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T ___semwait_signal_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend_nocancel",
    "type": "CPP"
  },
  {
    "name": "T __exit",
    "type": "CPP"
  },
  {
    "name": "T _thread_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidoriginatorinfo",
    "type": "CPP"
  },
  {
    "name": "T _getrusage",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_register",
    "type": "CPP"
  },
  {
    "name": "T ___fork",
    "type": "CPP"
  },
  {
    "name": "T _setiopolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _ffsctl",
    "type": "CPP"
  },
  {
    "name": "T _getsockname",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T ___process_policy",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _proc_pid_rusage",
    "type": "CPP"
  },
  {
    "name": "T _chown",
    "type": "CPP"
  },
  {
    "name": "T _bind",
    "type": "CPP"
  },
  {
    "name": "T _pselect$1050",
    "type": "CPP"
  },
  {
    "name": "T _guarded_write_np",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_copy",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server",
    "type": "CPP"
  },
  {
    "name": "T _kill",
    "type": "CPP"
  },
  {
    "name": "T ___kill",
    "type": "CPP"
  },
  {
    "name": "T _chflags",
    "type": "CPP"
  },
  {
    "name": "T _pathconf",
    "type": "CPP"
  },
  {
    "name": "T _setpriority",
    "type": "CPP"
  },
  {
    "name": "T ___setpriority",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_64",
    "type": "CPP"
  },
  {
    "name": "T _vm_region_recurse_64",
    "type": "CPP"
  },
  {
    "name": "T _getpriority",
    "type": "CPP"
  },
  {
    "name": "T _proc_rlimit_control",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _setitimer",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_msp",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_list",
    "type": "CPP"
  },
  {
    "name": "T _listen",
    "type": "CPP"
  },
  {
    "name": "T _accept",
    "type": "CPP"
  },
  {
    "name": "T _poll",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setjetsam_ext",
    "type": "CPP"
  },
  {
    "name": "T _getpgrp",
    "type": "CPP"
  },
  {
    "name": "T _execve",
    "type": "CPP"
  },
  {
    "name": "T _setsid",
    "type": "CPP"
  },
  {
    "name": "T _dup2",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _csr_get_active_config",
    "type": "CPP"
  },
  {
    "name": "T _ptrace",
    "type": "CPP"
  },
  {
    "name": "t _mach_msg_server_consume_unsent_message",
    "type": "CPP"
  },
  {
    "name": "T _getdtablesize",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_create",
    "type": "CPP"
  },
  {
    "name": "T ___work_interval_ctl",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_alloc",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_id",
    "type": "CPP"
  },
  {
    "name": "T _memorystatus_control",
    "type": "CPP"
  },
  {
    "name": "T _lstat64",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_type",
    "type": "CPP"
  },
  {
    "name": "T _task_threads",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_state",
    "type": "CPP"
  },
  {
    "name": "T _setgid",
    "type": "CPP"
  },
  {
    "name": "T _setuid",
    "type": "CPP"
  },
  {
    "name": "T _thread_policy_get",
    "type": "CPP"
  },
  {
    "name": "T ___get_remove_counter",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setugid_np",
    "type": "CPP"
  },
  {
    "name": "T _seteuid",
    "type": "CPP"
  },
  {
    "name": "T _setegid",
    "type": "CPP"
  },
  {
    "name": "T _vm_read",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _sem_open",
    "type": "CPP"
  },
  {
    "name": "T _sem_close",
    "type": "CPP"
  },
  {
    "name": "T _auditon",
    "type": "CPP"
  },
  {
    "name": "T _sfi_set_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_ctl",
    "type": "CPP"
  },
  {
    "name": "T _system_set_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _unlinkat",
    "type": "CPP"
  },
  {
    "name": "T ___unlinkat",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_cpumon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_wakemon",
    "type": "CPP"
  },
  {
    "name": "T _mlock",
    "type": "CPP"
  },
  {
    "name": "T _munlock",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_defaults",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics64",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpids",
    "type": "CPP"
  },
  {
    "name": "T _clonefile",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_begin_with_msg",
    "type": "CPP"
  },
  {
    "name": "T _proc_denap_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _proc_importance_assertion_complete",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_right",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _getpgid",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_start",
    "type": "CPP"
  },
  {
    "name": "t _kdebug_signpost_internal",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost_end",
    "type": "CPP"
  },
  {
    "name": "T _host_statistics",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_reason",
    "type": "CPP"
  },
  {
    "name": "T ___terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _task_set_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_attr_content",
    "type": "CPP"
  },
  {
    "name": "T _guarded_kqueue_np",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_region_recurse",
    "type": "CPP"
  },
  {
    "name": "T _necp_match_policy",
    "type": "CPP"
  },
  {
    "name": "T _select$DARWIN_EXTSN",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_once",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_port",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setauditsessionport_np",
    "type": "CPP"
  },
  {
    "name": "t _posix_spawn_appendportaction_np",
    "type": "CPP"
  },
  {
    "name": "T ___sigreturn",
    "type": "CPP"
  },
  {
    "name": "T _audit_session_join",
    "type": "CPP"
  },
  {
    "name": "T ___sigwait",
    "type": "CPP"
  },
  {
    "name": "T _setpgid",
    "type": "CPP"
  },
  {
    "name": "T _lstat",
    "type": "CPP"
  },
  {
    "name": "T _stat",
    "type": "CPP"
  },
  {
    "name": "T _open",
    "type": "CPP"
  },
  {
    "name": "T _fstatfs",
    "type": "CPP"
  },
  {
    "name": "T _mach_ports_lookup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor_default",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setspecialport_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addopen",
    "type": "CPP"
  },
  {
    "name": "T _kevent64",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T ___setlogin",
    "type": "CPP"
  },
  {
    "name": "T ___initgroups",
    "type": "CPP"
  },
  {
    "name": "T ___getlogin",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_context",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_set_status",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_canceled",
    "type": "CPP"
  },
  {
    "name": "T _clock_sleep",
    "type": "CPP"
  },
  {
    "name": "T _vm_map",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_map",
    "type": "CPP"
  },
  {
    "name": "T _flistxattr",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _mount",
    "type": "CPP"
  },
  {
    "name": "T _wait4",
    "type": "CPP"
  },
  {
    "name": "T ___open_extended",
    "type": "CPP"
  },
  {
    "name": "T _exchangedata",
    "type": "CPP"
  },
  {
    "name": "T ___carbon_delete",
    "type": "CPP"
  },
  {
    "name": "T ___delete",
    "type": "CPP"
  },
  {
    "name": "T _unmount",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addinherit_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addclose",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setexceptionports_np",
    "type": "CPP"
  },
  {
    "name": "t _reallocf",
    "type": "CPP"
  },
  {
    "name": "t _pthread_current_stack_contains_np",
    "type": "CPP"
  },
  {
    "name": "t _bzero",
    "type": "CPP"
  },
  {
    "name": "t ___bzero",
    "type": "CPP"
  },
  {
    "name": "t _memchr",
    "type": "CPP"
  },
  {
    "name": "t _memcmp",
    "type": "CPP"
  },
  {
    "name": "t _memmove",
    "type": "CPP"
  },
  {
    "name": "t _strchr",
    "type": "CPP"
  },
  {
    "name": "t _strlcat",
    "type": "CPP"
  },
  {
    "name": "t _strncmp",
    "type": "CPP"
  },
  {
    "name": "t _strnlen",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlen",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_late",
    "type": "CPP"
  },
  {
    "name": "T ___libkernel_init_after_boot_tasks",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strchr",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_bzero",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memset",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_memmove",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_check_path_suffix",
    "type": "CPP"
  },
  {
    "name": "t __system_version_compat_open_shim",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strcpy",
    "type": "CPP"
  },
  {
    "name": "t __posix_spawn_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __execve_with_filter",
    "type": "CPP"
  },
  {
    "name": "t __libkernel_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_host_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "t _port_for_id_internal",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _mach_thread_special_port_for_id",
    "type": "CPP"
  },
  {
    "name": "T _pkt_subtype_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _pkt_type_assert_fail",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_headroom",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_header_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_broadcast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_multicast",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_link_ethfcs",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_background",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_traffic_realtime",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_transport_retransmit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_transport_last_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_service_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_compression_generation_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_traffic_class",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_clear_flow_uuid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_start",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_group_end",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_expire_time",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_token",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_packetid",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_tag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_vlan_priority",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_wake_flag",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_keep_alive",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_truncated",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_buflet_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_next_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_segment_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_finalize",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_add_buflet",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_increment_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_decrement_use_count",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_aggregation_type",
    "type": "CPP"
  },
  {
    "name": "T _os_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_copy_and_inet_checksum",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_offset",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_set_data_length",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_object_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_address",
    "type": "CPP"
  },
  {
    "name": "T _os_buflet_get_data_limit",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_get_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_set_trace_id",
    "type": "CPP"
  },
  {
    "name": "T _os_packet_trace_event",
    "type": "CPP"
  },
  {
    "name": "T _reboot",
    "type": "CPP"
  },
  {
    "name": "T _reboot_np",
    "type": "CPP"
  },
  {
    "name": "t __mach_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _renameat",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t _internal_catch_exception_raise",
    "type": "CPP"
  },
  {
    "name": "t _fprintf_stderr",
    "type": "CPP"
  },
  {
    "name": "T _guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T _host_get_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _host_get_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _host_check_multiuser_mode",
    "type": "CPP"
  },
  {
    "name": "T _mach_error_type",
    "type": "CPP"
  },
  {
    "name": "T _mach_error",
    "type": "CPP"
  },
  {
    "name": "T _host_page_size",
    "type": "CPP"
  },
  {
    "name": "T __mach_fork_child",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_server_importance",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_is_pthread_priority",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_encode",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_overide_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_msg_priority_relpri",
    "type": "CPP"
  },
  {
    "name": "T _mig_allocate",
    "type": "CPP"
  },
  {
    "name": "T _quota",
    "type": "CPP"
  },
  {
    "name": "T _setquota",
    "type": "CPP"
  },
  {
    "name": "T _panic_init",
    "type": "CPP"
  },
  {
    "name": "T _panic",
    "type": "CPP"
  },
  {
    "name": "T _port_obj_init",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_all",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_signal_thread",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_wait_signal",
    "type": "CPP"
  },
  {
    "name": "T _semaphore_timedwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _msg_rpc",
    "type": "CPP"
  },
  {
    "name": "T _msg_send",
    "type": "CPP"
  },
  {
    "name": "T _msg_receive",
    "type": "CPP"
  },
  {
    "name": "T _task_self_",
    "type": "CPP"
  },
  {
    "name": "T _host_self",
    "type": "CPP"
  },
  {
    "name": "T __mach_vsnprintf",
    "type": "CPP"
  },
  {
    "name": "T __mach_snprintf",
    "type": "CPP"
  },
  {
    "name": "T _pselect$DARWIN_EXTSN$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_self",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_construct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_recv_destruct",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_retain",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_right_send_once_consume",
    "type": "CPP"
  },
  {
    "name": "T _os_proc_available_memory",
    "type": "CPP"
  },
  {
    "name": "T _proc_listallpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpgrppids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listchildpids",
    "type": "CPP"
  },
  {
    "name": "T _proc_listcoalitions",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_cpupercent",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfdinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidfileportinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_piddynkqueueinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_udata_info",
    "type": "CPP"
  },
  {
    "name": "T _proc_regionfilename",
    "type": "CPP"
  },
  {
    "name": "T _proc_kmsgbuf",
    "type": "CPP"
  },
  {
    "name": "T _proc_pidpath_audittoken",
    "type": "CPP"
  },
  {
    "name": "T _proc_current_thread_schedinfo",
    "type": "CPP"
  },
  {
    "name": "T _proc_libversion",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_dirty",
    "type": "CPP"
  },
  {
    "name": "T _proc_terminate",
    "type": "CPP"
  },
  {
    "name": "T _proc_resume_cpumon",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_cpumon_params_fatal",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_get_wakemon_params",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_uptrs",
    "type": "CPP"
  },
  {
    "name": "T _proc_list_dynkqueueids",
    "type": "CPP"
  },
  {
    "name": "T _proc_setcpu_percentage",
    "type": "CPP"
  },
  {
    "name": "T _proc_reset_footprint_interval",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_cpulimits",
    "type": "CPP"
  },
  {
    "name": "T _proc_donate_importance_boost",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_owner_vmpressure",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_clear_delayidlesleep",
    "type": "CPP"
  },
  {
    "name": "T _proc_disable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_enable_apptype",
    "type": "CPP"
  },
  {
    "name": "T _proc_suppress",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_no_smt",
    "type": "CPP"
  },
  {
    "name": "T _proc_set_csm",
    "type": "CPP"
  },
  {
    "name": "T _proc_setthread_csm",
    "type": "CPP"
  },
  {
    "name": "T __getprivatesystemidentifier",
    "type": "CPP"
  },
  {
    "name": "T __register_gethostuuid_callback",
    "type": "CPP"
  },
  {
    "name": "T _mach_boottime_usec",
    "type": "CPP"
  },
  {
    "name": "T _mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _open$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _openat$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T _futimens",
    "type": "CPP"
  },
  {
    "name": "t _prepare_times_array_and_attrs",
    "type": "CPP"
  },
  {
    "name": "T _utimensat",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_register_pointer_values",
    "type": "CPP"
  },
  {
    "name": "T _renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _renamex_np",
    "type": "CPP"
  },
  {
    "name": "T _rename_ext",
    "type": "CPP"
  },
  {
    "name": "T _log_data_as_kernel",
    "type": "CPP"
  },
  {
    "name": "t ___posix_spawnattr_init",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getflags",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigdefault",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getsigmask",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getbinpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpgroup",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setarchpref_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setpcontrol_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setprocesstype_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_subsystem_root_path_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_platform_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_disable_ptr_auth_a_keys_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_alt_rosetta_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_add_fileportdup2_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawn_file_actions_addfchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_getcpumonitor",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_threadlimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_importancewatch_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_registered_ports_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_ptrauth_task_port_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setcoalition_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_qos_clamp_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_get_darwin_role_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_persona_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_max_addr_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_setnosmt_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_csm_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_uid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_gid_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_groups_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_login_np",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_portlimits_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_filedesclimit_ext",
    "type": "CPP"
  },
  {
    "name": "T _posix_spawnattr_set_jetsam_ttr_np",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_create",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pid",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_capture_with_config",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_get_stackshot_size",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_size_hint",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_delta_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_set_pagetable_mask",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc_buffer",
    "type": "CPP"
  },
  {
    "name": "T _stackshot_config_dealloc",
    "type": "CPP"
  },
  {
    "name": "T ___darwin_check_fd_set_overflow",
    "type": "CPP"
  },
  {
    "name": "T _terminate_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _system_get_sfi_window",
    "type": "CPP"
  },
  {
    "name": "T _sfi_get_class_offtime",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_set_flags",
    "type": "CPP"
  },
  {
    "name": "T _sfi_process_get_flags",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create_extended",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_info2attr",
    "type": "CPP"
  },
  {
    "name": "t _os_channel_init_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_write_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_read_nexus_extension_info",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_sync",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_is_defunct",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_id",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_tx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_rx_ring",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_pending",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_sync_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_ring_notify_time",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_available_slot_count",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_advance_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_slot",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_set_slot_properties",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_get_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_stats_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_advisory_region",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_flow_admissible",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_attr_get_key",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_attach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_slot_detach_packet",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_packet_pool_purge",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_next_event_handle",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_free",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_get_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_configure_interface_advisory",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_alloc",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_buflet_free",
    "type": "CPP"
  },
  {
    "name": "T _sem_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sem_getvalue",
    "type": "CPP"
  },
  {
    "name": "T _sem_init",
    "type": "CPP"
  },
  {
    "name": "T _pid_shutdown_networking",
    "type": "CPP"
  },
  {
    "name": "T _coalition_create",
    "type": "CPP"
  },
  {
    "name": "T _coalition_terminate",
    "type": "CPP"
  },
  {
    "name": "T _coalition_reap",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_resource_usage",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_name",
    "type": "CPP"
  },
  {
    "name": "T _coalition_info_set_efficiency",
    "type": "CPP"
  },
  {
    "name": "T _coalition_ledger_set_logical_writes_limit",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_create",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_delete",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_rename",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_revert",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_root",
    "type": "CPP"
  },
  {
    "name": "T _fs_snapshot_mount",
    "type": "CPP"
  },
  {
    "name": "T _debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T _pselect",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_using_continuous_time",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_absolute",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_timestamp_from_continuous",
    "type": "CPP"
  },
  {
    "name": "T _kdebug_signpost",
    "type": "CPP"
  },
  {
    "name": "T _pselect$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_clone",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_set",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_get",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_create",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_get_fd",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_register_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_deregister_provider",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_alloc_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_free_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_bind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_unbind_provider_instance",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_read_provider_attr",
    "type": "CPP"
  },
  {
    "name": "T _os_nexus_controller_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifattach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_ifdetach",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_add",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_flow_del",
    "type": "CPP"
  },
  {
    "name": "T ___os_nexus_get_llink_info",
    "type": "CPP"
  },
  {
    "name": "T _sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T _openat",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_get_flags_from_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_notify_simple",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_clear",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_free",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_set_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_deadline",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_get_complexity",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_start",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_update",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_instance_finish",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_destroy",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_join_port",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_leave",
    "type": "CPP"
  },
  {
    "name": "T _work_interval_copy_port",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_copy_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum",
    "type": "CPP"
  },
  {
    "name": "T _os_cpu_in_cksum_mbuf",
    "type": "CPP"
  },
  {
    "name": "T _proc_listpidspath",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_next_event",
    "type": "CPP"
  },
  {
    "name": "T _os_channel_event_get_event_data",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T _task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T _mig_dealloc_special_reply_port",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_start",
    "type": "CPP"
  },
  {
    "name": "T _mach_sync_ipc_link_monitoring_stop",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _getaudit",
    "type": "CPP"
  },
  {
    "name": "T _setaudit",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_alloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_palloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_dealloc",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_getpath",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_pidinfo",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find",
    "type": "CPP"
  },
  {
    "name": "T _kpersona_find_by_type",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_time",
    "type": "CPP"
  },
  {
    "name": "T _clock_set_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm_reply",
    "type": "CPP"
  },
  {
    "name": "T _clock_get_attributes",
    "type": "CPP"
  },
  {
    "name": "T _clock_alarm",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state",
    "type": "CPP"
  },
  {
    "name": "T _exception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server_routine",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state",
    "type": "CPP"
  },
  {
    "name": "t __Xexception_raise_state_identity",
    "type": "CPP"
  },
  {
    "name": "T _exc_server",
    "type": "CPP"
  },
  {
    "name": "T _host_get_boot_info",
    "type": "CPP"
  },
  {
    "name": "T _host_reboot",
    "type": "CPP"
  },
  {
    "name": "T _host_priv_statistics",
    "type": "CPP"
  },
  {
    "name": "T _host_default_memory_manager",
    "type": "CPP"
  },
  {
    "name": "T _vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _thread_wire",
    "type": "CPP"
  },
  {
    "name": "T _vm_allocate_cpm",
    "type": "CPP"
  },
  {
    "name": "T _host_processors",
    "type": "CPP"
  },
  {
    "name": "T _host_get_clock_control",
    "type": "CPP"
  },
  {
    "name": "T _kmod_create",
    "type": "CPP"
  },
  {
    "name": "T _kmod_destroy",
    "type": "CPP"
  },
  {
    "name": "T _kmod_control",
    "type": "CPP"
  },
  {
    "name": "T _host_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _host_set_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_get_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _host_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_wire",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_sets",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_set_priv",
    "type": "CPP"
  },
  {
    "name": "T _host_set_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _host_get_UNDServer",
    "type": "CPP"
  },
  {
    "name": "T _kext_request",
    "type": "CPP"
  },
  {
    "name": "T _host_security_create_task_token",
    "type": "CPP"
  },
  {
    "name": "T _host_security_set_task_token",
    "type": "CPP"
  },
  {
    "name": "T _lock_acquire",
    "type": "CPP"
  },
  {
    "name": "T _lock_release",
    "type": "CPP"
  },
  {
    "name": "T _lock_try",
    "type": "CPP"
  },
  {
    "name": "T _lock_make_stable",
    "type": "CPP"
  },
  {
    "name": "T _lock_handoff",
    "type": "CPP"
  },
  {
    "name": "T _lock_handoff_accept",
    "type": "CPP"
  },
  {
    "name": "T _host_kernel_version",
    "type": "CPP"
  },
  {
    "name": "T __host_page_size",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T _host_processor_info",
    "type": "CPP"
  },
  {
    "name": "T _kmod_get_info",
    "type": "CPP"
  },
  {
    "name": "T _host_virtual_physical_table_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_default",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_object_memory_entry_64",
    "type": "CPP"
  },
  {
    "name": "T _host_lockgroup_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_force_gc",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_host_create_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _host_register_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_register_well_known_mach_voucher_attr_manager",
    "type": "CPP"
  },
  {
    "name": "T _host_set_atm_diagnostic_flag",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_info",
    "type": "CPP"
  },
  {
    "name": "T _host_set_multiuser_config_flags",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_info_for_largest_zone",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_zlog_zones",
    "type": "CPP"
  },
  {
    "name": "T _mach_zone_get_btlog_records",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_names",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_rename",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_name",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destroy",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_mod_refs",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_peek",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_mscount",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_move_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_right",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_set_seqno",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_qos",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_allocate_full",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_task_set_port_space",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_srights",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_dnrequest_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kernel_object",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_insert_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_extract_member",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_construct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_destruct",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_unguard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_space_basic_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_special_reply_port_reset_link",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_guard_with_flags",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_swap_guard",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_kobject_description",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_is_connection_for_service",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_get_service_port_info",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_port_assert_attributes",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_allocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_deallocate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_protect",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_read",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_write",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_query",
    "type": "CPP"
  },
  {
    "name": "T _mach_make_memory_entry",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_info",
    "type": "CPP"
  },
  {
    "name": "T _mach_vm_page_range_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_deleted",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_port_destroyed",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_no_senders",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_send_once",
    "type": "CPP"
  },
  {
    "name": "T _mach_notify_dead_name",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_statistics",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_max_priority",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_enable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_disable",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_threads",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_policy_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_stack_usage",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_set_tasks_with_flavor",
    "type": "CPP"
  },
  {
    "name": "T _processor_start",
    "type": "CPP"
  },
  {
    "name": "T _processor_exit",
    "type": "CPP"
  },
  {
    "name": "T _processor_info",
    "type": "CPP"
  },
  {
    "name": "T _processor_control",
    "type": "CPP"
  },
  {
    "name": "T _processor_assign",
    "type": "CPP"
  },
  {
    "name": "T _processor_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_in",
    "type": "CPP"
  },
  {
    "name": "T _netname_look_up",
    "type": "CPP"
  },
  {
    "name": "T _netname_check_out",
    "type": "CPP"
  },
  {
    "name": "T _netname_version",
    "type": "CPP"
  },
  {
    "name": "T _task_create",
    "type": "CPP"
  },
  {
    "name": "T _task_terminate",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend",
    "type": "CPP"
  },
  {
    "name": "T _task_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_create",
    "type": "CPP"
  },
  {
    "name": "T _thread_create_running",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_create",
    "type": "CPP"
  },
  {
    "name": "T _lock_set_destroy",
    "type": "CPP"
  },
  {
    "name": "T _task_policy_get",
    "type": "CPP"
  },
  {
    "name": "T _task_sample",
    "type": "CPP"
  },
  {
    "name": "T _task_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation",
    "type": "CPP"
  },
  {
    "name": "T _task_get_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_emulation_vector",
    "type": "CPP"
  },
  {
    "name": "T _task_set_ras_pc",
    "type": "CPP"
  },
  {
    "name": "T _task_zone_info",
    "type": "CPP"
  },
  {
    "name": "T _task_assign",
    "type": "CPP"
  },
  {
    "name": "T _task_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _task_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T _task_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _task_get_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_state",
    "type": "CPP"
  },
  {
    "name": "T _task_set_phys_footprint_limit",
    "type": "CPP"
  },
  {
    "name": "T _task_suspend2",
    "type": "CPP"
  },
  {
    "name": "T _task_resume2",
    "type": "CPP"
  },
  {
    "name": "T _task_purgable_info",
    "type": "CPP"
  },
  {
    "name": "T _task_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _task_generate_corpse",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_unregister_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_get_dyld_image_infos",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_shared_cache_image_info",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_set_dyld_state",
    "type": "CPP"
  },
  {
    "name": "T _task_register_dyld_get_process_state",
    "type": "CPP"
  },
  {
    "name": "T _task_map_corpse_info_64",
    "type": "CPP"
  },
  {
    "name": "T _task_inspect",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_set_exc_guard_behavior",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_task_is_self",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_register",
    "type": "CPP"
  },
  {
    "name": "T _task_create_identity_token",
    "type": "CPP"
  },
  {
    "name": "T _task_identity_token_get_task_port",
    "type": "CPP"
  },
  {
    "name": "T _task_dyld_process_info_notify_deregister",
    "type": "CPP"
  },
  {
    "name": "T _task_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _task_test_sync_upcall",
    "type": "CPP"
  },
  {
    "name": "T _task_set_corpse_forking_behavior",
    "type": "CPP"
  },
  {
    "name": "T _task_test_async_upcall_propagation",
    "type": "CPP"
  },
  {
    "name": "T _thread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _act_get_state",
    "type": "CPP"
  },
  {
    "name": "T _act_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_suspend",
    "type": "CPP"
  },
  {
    "name": "T _thread_resume",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_abort_safely",
    "type": "CPP"
  },
  {
    "name": "T _thread_depress_abort",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_special_port",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_exception_ports",
    "type": "CPP"
  },
  {
    "name": "T _thread_sample",
    "type": "CPP"
  },
  {
    "name": "T _etap_trace_thread",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign",
    "type": "CPP"
  },
  {
    "name": "T _thread_assign_default",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_assignment",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_thread_set_policy",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_set_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_swap_mach_voucher",
    "type": "CPP"
  },
  {
    "name": "T _thread_convert_thread_state",
    "type": "CPP"
  },
  {
    "name": "T _thread_get_exception_ports_info",
    "type": "CPP"
  },
  {
    "name": "T _vm_inherit",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_list",
    "type": "CPP"
  },
  {
    "name": "T _vm_write",
    "type": "CPP"
  },
  {
    "name": "T _vm_read_overwrite",
    "type": "CPP"
  },
  {
    "name": "T _vm_msync",
    "type": "CPP"
  },
  {
    "name": "T _vm_behavior_set",
    "type": "CPP"
  },
  {
    "name": "T _vm_machine_attribute",
    "type": "CPP"
  },
  {
    "name": "T _vm_map_page_query",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_vm_remap_new",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_purgable_control",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_access_tracking",
    "type": "CPP"
  },
  {
    "name": "T _mach_memory_entry_ownership",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_create",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_destroy",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_associate",
    "type": "CPP"
  },
  {
    "name": "T _mach_eventlink_disassociate",
    "type": "CPP"
  },
  {
    "name": "T __kernelrpc_mach_voucher_extract_attr_recipe",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_extract_all_attr_recipes",
    "type": "CPP"
  },
  {
    "name": "T _mach_voucher_debug_info",
    "type": "CPP"
  },
  {
    "name": "T _____old_semwait_signal_nocancel",
    "type": "CPP"
  },
  {
    "name": "T _____sigwait_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___abort_with_payload",
    "type": "CPP"
  },
  {
    "name": "T _accept$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _accessx_np",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_info",
    "type": "CPP"
  },
  {
    "name": "T ___channel_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_open",
    "type": "CPP"
  },
  {
    "name": "T ___channel_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___channel_sync",
    "type": "CPP"
  },
  {
    "name": "T ___coalition",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_info",
    "type": "CPP"
  },
  {
    "name": "T ___coalition_ledger",
    "type": "CPP"
  },
  {
    "name": "T ___copyfile",
    "type": "CPP"
  },
  {
    "name": "T ___debug_syscall_reject",
    "type": "CPP"
  },
  {
    "name": "T ___execve",
    "type": "CPP"
  },
  {
    "name": "T ___fs_snapshot",
    "type": "CPP"
  },
  {
    "name": "T ___fstat_extended",
    "type": "CPP"
  },
  {
    "name": "T _fsync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _getsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T _getwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___guarded_open_dprotected_np",
    "type": "CPP"
  },
  {
    "name": "T ___identitysvc",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace",
    "type": "CPP"
  },
  {
    "name": "T ___kdebug_trace_string",
    "type": "CPP"
  },
  {
    "name": "T ___log_data",
    "type": "CPP"
  },
  {
    "name": "T ___lstat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_me",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_link",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_mount",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_pid",
    "type": "CPP"
  },
  {
    "name": "T ___mac_get_proc",
    "type": "CPP"
  },
  {
    "name": "T ___mac_getfsstat",
    "type": "CPP"
  },
  {
    "name": "T ___sandbox_mm",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_fd",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_file",
    "type": "CPP"
  },
  {
    "name": "T ___mac_set_link",
    "type": "CPP"
  },
  {
    "name": "T ___mach_bridge_remote_time",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_signal_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___mach_eventlink_wait_until",
    "type": "CPP"
  },
  {
    "name": "T ___memorystatus_available_memory",
    "type": "CPP"
  },
  {
    "name": "T ___microstackshot",
    "type": "CPP"
  },
  {
    "name": "T ___mkdir_extended",
    "type": "CPP"
  },
  {
    "name": "T ___mkfifo_extended",
    "type": "CPP"
  },
  {
    "name": "T _msgctl",
    "type": "CPP"
  },
  {
    "name": "T _msgrcv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _msgsnd$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _msgsys",
    "type": "CPP"
  },
  {
    "name": "T _msync$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_create",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_deregister",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_destroy",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_get_opt",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_open",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_register",
    "type": "CPP"
  },
  {
    "name": "T ___nexus_set_opt",
    "type": "CPP"
  },
  {
    "name": "T ___old_semwait_signal",
    "type": "CPP"
  },
  {
    "name": "T _poll$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pread$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _preadv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___proc_info_extended_id",
    "type": "CPP"
  },
  {
    "name": "T ___pselect_nocancel",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_downgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_longrdlock",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_unlock2",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_upgrade",
    "type": "CPP"
  },
  {
    "name": "T ___psynch_rw_yieldwrlock",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_markcancel",
    "type": "CPP"
  },
  {
    "name": "T _pwrite$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pwritev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _readv$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___reboot",
    "type": "CPP"
  },
  {
    "name": "T _recvmsg$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T ___renameat",
    "type": "CPP"
  },
  {
    "name": "T ___renameatx_np",
    "type": "CPP"
  },
  {
    "name": "T _sem_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _semctl",
    "type": "CPP"
  },
  {
    "name": "T _semsys",
    "type": "CPP"
  },
  {
    "name": "T _setregid",
    "type": "CPP"
  },
  {
    "name": "T _setreuid",
    "type": "CPP"
  },
  {
    "name": "T _setsgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___settid_with_pid",
    "type": "CPP"
  },
  {
    "name": "T ___settimeofday",
    "type": "CPP"
  },
  {
    "name": "T _setwgroups_np",
    "type": "CPP"
  },
  {
    "name": "T ___sfi_pidctl",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_check_np",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_map_and_slide_2_np",
    "type": "CPP"
  },
  {
    "name": "T ___shared_region_map_and_slide_np",
    "type": "CPP"
  },
  {
    "name": "T _shmctl",
    "type": "CPP"
  },
  {
    "name": "T _shmsys",
    "type": "CPP"
  },
  {
    "name": "T ___sigsuspend",
    "type": "CPP"
  },
  {
    "name": "T ___stack_snapshot_with_config",
    "type": "CPP"
  },
  {
    "name": "T ___stat_extended",
    "type": "CPP"
  },
  {
    "name": "T ___telemetry",
    "type": "CPP"
  },
  {
    "name": "T ___thread_selfusage",
    "type": "CPP"
  },
  {
    "name": "T ___ulock_wait2",
    "type": "CPP"
  },
  {
    "name": "T ___umask_extended",
    "type": "CPP"
  },
  {
    "name": "T ___vfork",
    "type": "CPP"
  },
  {
    "name": "T _waitid$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _writev$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _acct",
    "type": "CPP"
  },
  {
    "name": "T _adjtime",
    "type": "CPP"
  },
  {
    "name": "T _aio_cancel",
    "type": "CPP"
  },
  {
    "name": "T _aio_error",
    "type": "CPP"
  },
  {
    "name": "T _aio_fsync",
    "type": "CPP"
  },
  {
    "name": "T _aio_read",
    "type": "CPP"
  },
  {
    "name": "T _aio_return",
    "type": "CPP"
  },
  {
    "name": "T _aio_suspend",
    "type": "CPP"
  },
  {
    "name": "T _aio_write",
    "type": "CPP"
  },
  {
    "name": "T _audit",
    "type": "CPP"
  },
  {
    "name": "T _auditctl",
    "type": "CPP"
  },
  {
    "name": "T _chroot",
    "type": "CPP"
  },
  {
    "name": "T _disconnectx",
    "type": "CPP"
  },
  {
    "name": "T _faccessat",
    "type": "CPP"
  },
  {
    "name": "T _fchdir",
    "type": "CPP"
  },
  {
    "name": "T _fchmodat",
    "type": "CPP"
  },
  {
    "name": "T _fchownat",
    "type": "CPP"
  },
  {
    "name": "T _fclonefileat",
    "type": "CPP"
  },
  {
    "name": "T _fdatasync",
    "type": "CPP"
  },
  {
    "name": "T _fhopen",
    "type": "CPP"
  },
  {
    "name": "T _fmount",
    "type": "CPP"
  },
  {
    "name": "T _fpathconf",
    "type": "CPP"
  },
  {
    "name": "T _freadlink",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_platform.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T _os_unfair_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_lock_with_options",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcmp",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncmp",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlen",
    "type": "CPP"
  },
  {
    "name": "T __os_once",
    "type": "CPP"
  },
  {
    "name": "t __os_once_callout",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_owner",
    "type": "CPP"
  },
  {
    "name": "T _ffs",
    "type": "CPP"
  },
  {
    "name": "T _ffsll",
    "type": "CPP"
  },
  {
    "name": "T _fls",
    "type": "CPP"
  },
  {
    "name": "T _flsll",
    "type": "CPP"
  },
  {
    "name": "T __os_alloc_once",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc",
    "type": "CPP"
  },
  {
    "name": "T __platform_strcpy",
    "type": "CPP"
  },
  {
    "name": "t __platform_memchr$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "t __platform_memchr$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_memchr",
    "type": "CPP"
  },
  {
    "name": "t __platform_strchr$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "t __platform_strchr$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T __platform_strchr",
    "type": "CPP"
  },
  {
    "name": "t __platform_memcmp$VARIANT$Base",
    "type": "CPP"
  },
  {
    "name": "T __platform_memcmp",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicXor32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAnd32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicOr32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicXor32OrigBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapIntBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicCompareAndSwapPtrBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement32Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicAdd64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicIncrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDecrement64Barrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndSetBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicTestAndClearBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSMemoryBarrier",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicEnqueue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicDequeue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue$VARIANT$PFZ",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue$VARIANT$PFZ",
    "type": "CPP"
  },
  {
    "name": "T __platform_strnlen",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcpy",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern16",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern16$VARIANT$Haswell",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_assert_not_owner",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_unfair_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T __platform_strstr",
    "type": "CPP"
  },
  {
    "name": "T __platform_strncpy",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_lock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "T __os_nospin_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_tryunlock4objc",
    "type": "CPP"
  },
  {
    "name": "T _sigsetjmp",
    "type": "CPP"
  },
  {
    "name": "T _setjmp",
    "type": "CPP"
  },
  {
    "name": "T _siglongjmp",
    "type": "CPP"
  },
  {
    "name": "T _longjmp",
    "type": "CPP"
  },
  {
    "name": "T __platform_strlcat",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern8",
    "type": "CPP"
  },
  {
    "name": "T __simple_salloc",
    "type": "CPP"
  },
  {
    "name": "T __simple_vsprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_sprintf",
    "type": "CPP"
  },
  {
    "name": "t _hex",
    "type": "CPP"
  },
  {
    "name": "T __simple_string",
    "type": "CPP"
  },
  {
    "name": "T __simple_sfree",
    "type": "CPP"
  },
  {
    "name": "t _dec",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_log_prog",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_new",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_msg_set",
    "type": "CPP"
  },
  {
    "name": "T __simple_esprintf",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_key",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_escape_val",
    "type": "CPP"
  },
  {
    "name": "T __simple_sappend",
    "type": "CPP"
  },
  {
    "name": "T __simple_sresize",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_send",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_connect_once",
    "type": "CPP"
  },
  {
    "name": "t _udec",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset_pattern4",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_create",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_dispose",
    "type": "CPP"
  },
  {
    "name": "T ___platform_sigaction",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_wait",
    "type": "CPP"
  },
  {
    "name": "t __os_once_gate_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_nospin_lock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T ___libplatform_init",
    "type": "CPP"
  },
  {
    "name": "t ___pfz_setup",
    "type": "CPP"
  },
  {
    "name": "T __simple_getenv",
    "type": "CPP"
  },
  {
    "name": "T __platform_bzero",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init",
    "type": "CPP"
  },
  {
    "name": "t __os_alloc_slow",
    "type": "CPP"
  },
  {
    "name": "t __simple_asl_init_context",
    "type": "CPP"
  },
  {
    "name": "T __platform_memmove",
    "type": "CPP"
  },
  {
    "name": "T __platform_memset",
    "type": "CPP"
  },
  {
    "name": "T _spin_lock",
    "type": "CPP"
  },
  {
    "name": "T _spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T __sigtramp",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_lock",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "T _memmove_sse_np",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_unlock",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_signal",
    "type": "CPP"
  },
  {
    "name": "T __os_semaphore_wait",
    "type": "CPP"
  },
  {
    "name": "T __OSSpinLockLockSlow",
    "type": "CPP"
  },
  {
    "name": "T _OSSpinLockTry",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern4$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern8$VARIANT$Ivybridge",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset_pattern16$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "T _os_lock_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_handoff_trylock",
    "type": "CPP"
  },
  {
    "name": "T __setjmp",
    "type": "CPP"
  },
  {
    "name": "T __longjmp",
    "type": "CPP"
  },
  {
    "name": "t __sigunaltstack",
    "type": "CPP"
  },
  {
    "name": "T __simple_vesprintf",
    "type": "CPP"
  },
  {
    "name": "t ___simple_bprintf",
    "type": "CPP"
  },
  {
    "name": "T __simple_esappend",
    "type": "CPP"
  },
  {
    "name": "T ___no_overread_variant_setup",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_attach",
    "type": "CPP"
  },
  {
    "name": "t __platform_task_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_detach",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_is_64_bit",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_suspend_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_resume_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_perform",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_update_threads",
    "type": "CPP"
  },
  {
    "name": "T _platform_task_copy_next_thread",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_unique_id",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_release",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_abort_safely",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_suspend",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_resume",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_info",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_state",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_set_state",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_perform",
    "type": "CPP"
  },
  {
    "name": "T _platform_thread_get_pthread",
    "type": "CPP"
  },
  {
    "name": "t __platform_thread_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_now",
    "type": "CPP"
  },
  {
    "name": "T _os_log_simple_type_from_asl",
    "type": "CPP"
  },
  {
    "name": "T ___os_log_simple_offset",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_send",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_shim",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_type",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_subsystem",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_message",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_timestamp",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse_identifiers",
    "type": "CPP"
  },
  {
    "name": "T __os_log_simple_parse",
    "type": "CPP"
  },
  {
    "name": "T __simple_memcmp",
    "type": "CPP"
  },
  {
    "name": "T __simple_asl_get_fd",
    "type": "CPP"
  },
  {
    "name": "T __simple_vdprintf",
    "type": "CPP"
  },
  {
    "name": "t __flush_reset",
    "type": "CPP"
  },
  {
    "name": "t __flush",
    "type": "CPP"
  },
  {
    "name": "T __simple_dprintf",
    "type": "CPP"
  },
  {
    "name": "t __enlarge",
    "type": "CPP"
  },
  {
    "name": "T __simple_put",
    "type": "CPP"
  },
  {
    "name": "T __simple_putline",
    "type": "CPP"
  },
  {
    "name": "t _oct",
    "type": "CPP"
  },
  {
    "name": "t _ydec",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue$VARIANT$UnfairLock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue$VARIANT$UnfairLock",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoEnqueue",
    "type": "CPP"
  },
  {
    "name": "T _OSAtomicFifoDequeue",
    "type": "CPP"
  },
  {
    "name": "t _preempt",
    "type": "CPP"
  },
  {
    "name": "t _backoff",
    "type": "CPP"
  },
  {
    "name": "T _sys_cache_control",
    "type": "CPP"
  },
  {
    "name": "T _sys_icache_invalidate",
    "type": "CPP"
  },
  {
    "name": "T _sys_dcache_flush",
    "type": "CPP"
  },
  {
    "name": "t __OSSpinLockLockYield",
    "type": "CPP"
  },
  {
    "name": "T _spin_lock_try",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_spin_trylock",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_lock_no_tsd",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_lock_unlock_no_tsd",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_owned",
    "type": "CPP"
  },
  {
    "name": "T _os_unfair_recursive_lock_unlock_forked_child",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_unfair_unlock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_lock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_trylock",
    "type": "CPP"
  },
  {
    "name": "t __os_lock_nospin_unlock",
    "type": "CPP"
  },
  {
    "name": "T ___os_once_reset",
    "type": "CPP"
  },
  {
    "name": "T _longjmperror",
    "type": "CPP"
  },
  {
    "name": "t _memset",
    "type": "CPP"
  },
  {
    "name": "T __platform_memccpy",
    "type": "CPP"
  },
  {
    "name": "t __platform_memmove$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_memcmp$VARIANT$NoOverread",
    "type": "CPP"
  },
  {
    "name": "t __platform_memset$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "t __platform_bzero$VARIANT$Rosetta",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_pthread.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "T __pthread_exit_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_strtoul",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_bsdthread_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_set_main_qos",
    "type": "CPP"
  },
  {
    "name": "t __pthread_key_global_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_global_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_init_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_lock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_lock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_unlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_unlock_init_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_main",
    "type": "CPP"
  },
  {
    "name": "T _start_wqthread",
    "type": "CPP"
  },
  {
    "name": "T _thread_start",
    "type": "CPP"
  },
  {
    "name": "T _thread_chkstk_darwin",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setspecific",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_broadcast",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_atfork",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_settype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_equal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_main_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_supported",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_set_event_manager_priority",
    "type": "CPP"
  },
  {
    "name": "T _pthread_once",
    "type": "CPP"
  },
  {
    "name": "t ___pthread_once_handler",
    "type": "CPP"
  },
  {
    "name": "T _pthread_qos_max_parallelism",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_addthreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_wqthread",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_setup",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_rdlock",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_check_init_slow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_unlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_wrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_markcancel_if_canceled",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_self_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_properties_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_testcancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_droplock",
    "type": "CPP"
  },
  {
    "name": "T _sched_yield",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_updateval",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stackaddr_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_firstfit_wake",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_reset",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_should_narrow",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_stacksize_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_trylock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_decode",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_setcancelstate_exit",
    "type": "CPP"
  },
  {
    "name": "t __pthread_tsd_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate_invoke",
    "type": "CPP"
  },
  {
    "name": "t __pthread_terminate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstacksize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T __pthread_clear_qos_tsd",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_destroy",
    "type": "CPP"
  },
  {
    "name": "T _qos_class_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_stack_frame_decode_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_override_start_direct_check_owner",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_trywrlock",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_lock_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_slow",
    "type": "CPP"
  },
  {
    "name": "t __pthread_rwlock_unlock_drop",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_end_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait_relative_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlock_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getname_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedpolicy",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_threadid_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_start_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcanceltype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_fixedpriority_self",
    "type": "CPP"
  },
  {
    "name": "T _pthread_sigmask",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setschedparam",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_get_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_override_qos_class_end_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_detach",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare_handlers",
    "type": "CPP"
  },
  {
    "name": "T _pthread_is_threaded_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent",
    "type": "CPP"
  },
  {
    "name": "T __pthread_atfork_parent_handlers",
    "type": "CPP"
  },
  {
    "name": "t __pthread_current_stack_address",
    "type": "CPP"
  },
  {
    "name": "T _pthread_key_delete",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_override_start_direct",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_prepost_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_joiner_wake",
    "type": "CPP"
  },
  {
    "name": "t __pthread_deallocate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_kill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_timeshare_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_workloop",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_fchdir_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_rwlockattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_max",
    "type": "CPP"
  },
  {
    "name": "T __pthread_set_self",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_qos_class_encode_workqueue",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_start_direct",
    "type": "CPP"
  },
  {
    "name": "T __pthread_start",
    "type": "CPP"
  },
  {
    "name": "T __pthread_override_qos_class_end_direct",
    "type": "CPP"
  },
  {
    "name": "t __pthread_cond_wait",
    "type": "CPP"
  },
  {
    "name": "t __pthread_exit",
    "type": "CPP"
  },
  {
    "name": "T _pthread_join$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_prepare",
    "type": "CPP"
  },
  {
    "name": "T __pthread_fork_parent",
    "type": "CPP"
  },
  {
    "name": "T _sigwait",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatch_np",
    "type": "CPP"
  },
  {
    "name": "T _sched_get_priority_min",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setcancelstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_set_qos_class_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getdetachstate",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getinheritsched",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getscope",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstackaddr",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setstack",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_getguardsize",
    "type": "CPP"
  },
  {
    "name": "T _pthread_attr_setcpupercent_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_from_mach_thread_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cpu_number_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_protect_supported_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_with_callback_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_jit_write_freeze_callbacks_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_create",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_from_mach_thread",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_suspended_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_install_workgroup_functions_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_create_with_workgroup_np",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_workqueue_setkill",
    "type": "CPP"
  },
  {
    "name": "T _pthread_self_is_exiting_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_getconcurrency",
    "type": "CPP"
  },
  {
    "name": "T _pthread_setconcurrency",
    "type": "CPP"
  },
  {
    "name": "T ___pthread_late_init",
    "type": "CPP"
  },
  {
    "name": "t __pthread_main_thread_postfork_init",
    "type": "CPP"
  },
  {
    "name": "T __pthread_yield_to_enqueuer_4dispatch",
    "type": "CPP"
  },
  {
    "name": "T _pthread_current_stack_contains_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_wqthread_legacy_worker_wrap",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_setdispatchoffset_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_init_with_kevent",
    "type": "CPP"
  },
  {
    "name": "T _pthread_workqueue_addthreads_np",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workqueue_add_cooperativethreads",
    "type": "CPP"
  },
  {
    "name": "T __pthread_workloop_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_introspection_hook_install",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_create",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_terminate",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_start",
    "type": "CPP"
  },
  {
    "name": "t __pthread_introspection_hook_callout_thread_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cancel",
    "type": "CPP"
  },
  {
    "name": "t __pthread_join",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_wait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_timedwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _sigwait$NOCANCEL",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_init",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_destroy",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_condattr_setpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_cond_signal_thread_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_wait_complete",
    "type": "CPP"
  },
  {
    "name": "t __pthread_ulock_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t __pthread_psynch_cond_cleanup",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_relaxed",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_acquire",
    "type": "CPP"
  },
  {
    "name": "t _mutex_seq_atomic_cmpxchgv_release",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutex_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpolicy_np",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_gettype",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_getpshared",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprioceiling",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setprotocol",
    "type": "CPP"
  },
  {
    "name": "T _pthread_mutexattr_setpolicy_np",
    "type": "CPP"
  },
  {
    "name": "t __pthread_mutex_fairshare_lock_slow",
    "type": "CPP"
  },
  {
    "name": "/usr/lib/system/libsystem_symptoms.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libsystem_trace.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libunwind.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": "/usr/lib/system/libxpc.dylib",
    "type": "SHARED_LIB"
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 0,
    "tm": 31882,
    "source": {
      "script": 99,
      "start": 0,
      "end": 632,
      "positions": "C0O0C4O632",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 1,
    "tm": 32034,
    "source": {
      "script": 99,
      "start": 0,
      "end": 632,
      "positions": "C0O56C3O56C8O25C13O102C15O102C19O137C22O560C25O560C30O598C35O605C40O622C47O626C51O606C57O631",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:349:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 2,
    "tm": 32393,
    "source": {
      "script": 9,
      "start": 10778,
      "end": 11121,
      "positions": "C0O10787C2O10798C4O10794C9O10814C13O10835C14O10855C19O10868C24O10872C29O10872C35O11013C37O11023C47O11071C60O11029C65O11023C66O11092C71O11092C75O11119",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:316:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 3,
    "tm": 33405,
    "source": {
      "script": 9,
      "start": 9991,
      "end": 10552,
      "positions": "C0O10009C6O10024C12O10053C16O10061C17O10089C22O10097C23O10110C30O10153C37O10184C45O10153C63O10283C70O10283C75O10318C89O10353C103O10310C108O10391C109O10403C124O10433C126O10446C141O10466C152O10485C160O10517C165O10466C170O10540C174O10548",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 4,
    "tm": 33866,
    "source": {
      "script": 100,
      "start": 0,
      "end": 19111,
      "positions": "C0O0C4O19111",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 5,
    "tm": 35356,
    "source": {
      "script": 100,
      "start": 0,
      "end": 19111,
      "positions": "C0O0C229O25C235O43C241O67C247O101C253O112C259O127C265O156C271O256C277O256C282O196C288O214C294O236C300O321C306O321C311O293C317O426C323O426C328O359C334O378C340O405C346O472C352O472C357O461C363O533C369O533C374O559C379O499C385O582C391O582C395O582C397O18637C404O18658C410O18683C416O18705C422O18727C428O18750C434O18764C440O18782C446O18802C452O18819C458O18837C464O18867C470O18893C476O18916C482O18946C488O18978C494O19000C500O19027C506O19050C512O19070C518O19093C524O18652C529O19110",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 6,
    "tm": 35629,
    "source": {
      "script": 100,
      "start": 646,
      "end": 2795,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 7,
    "tm": 35704,
    "source": {
      "script": 100,
      "start": 2827,
      "end": 2853,
      "positions": "C0O2834C5O2834C9O2852",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 8,
    "tm": 35741,
    "source": {
      "script": 95,
      "start": 902,
      "end": 960,
      "positions": "C0O909C4O920C10O935C14O946C21O959",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1072:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 9,
    "tm": 35978,
    "source": {
      "script": 25,
      "start": 30717,
      "end": 30757,
      "positions": "C0O30724C5O30735C11O30733C18O30756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "patchProcessObject node:internal/bootstrap/pre_execution:103:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 10,
    "tm": 38550,
    "source": {
      "script": 100,
      "start": 2882,
      "end": 4965,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:171:45",
    "type": "JS",
    "kind": "Unopt",
    "func": 11,
    "tm": 38655,
    "source": {
      "script": 9,
      "start": 5263,
      "end": 5501,
      "positions": "C0O5288C7O5298C11O5312C15O5349C25O5376C30O5374C37O5410C48O5429C56O5465C61O5410C66O5486C68O5497",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshHrtimeBuffer node:internal/process/per_thread:67:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 12,
    "tm": 38762,
    "source": {
      "script": 30,
      "start": 1436,
      "end": 1876,
      "positions": "C0O1623C7O1650C10O1658C17O1634C25O1632C31O1810C38O1846C41O1854C53O1827C61O1825C68O1875",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 13,
    "tm": 39699,
    "source": {
      "script": 95,
      "start": 985,
      "end": 1228,
      "positions": "C0O1018C3O1018C7O1063C15O1063C22O1113C30O1135C38O1135C43O1122C47O1113C53O1150C55O1175C60O1181C61O1203C66O1203C74O1218C81O1226",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 14,
    "tm": 39745,
    "source": {
      "script": 95,
      "start": 497,
      "end": 598,
      "positions": "C0O504C6O527C11O554C15O539C28O578C32O596",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1091:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 15,
    "tm": 40182,
    "source": {
      "script": 41,
      "start": 33781,
      "end": 34691,
      "positions": "C0O33781C3O33816C6O33847C8O33877C12O33884C16O33897C18O33891C25O33901C27O33945C28O33947C35O33958C42O33964C45O33964C49O33983C57O33983C62O34057C68O34064C73O34081C75O34106C87O34132C92O34154C99O34181C107O34220C109O34216C113O33920C118O33859C121O34436C126O34482C137O34451C143O34568C147O34598C152O34609C156O34624C157O34655C163O34662C174O34687",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:119:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 16,
    "tm": 43836,
    "source": {
      "script": 16,
      "start": 3428,
      "end": 3537,
      "positions": "C0O3446C6O3481C22O3487C27O3481C29O3536",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:path:1082:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 17,
    "tm": 44558,
    "source": {
      "script": 41,
      "start": 33630,
      "end": 33649,
      "positions": "C0O33644C3O33644C8O33644C12O33649",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 18,
    "tm": 44607,
    "source": {
      "script": 98,
      "start": 3341,
      "end": 3425,
      "positions": "C0O3348C7O3362C12O3374C17O3397C22O3397C29O3384C35O3406C39O3423",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 19,
    "tm": 45274,
    "source": {
      "script": 41,
      "start": 2161,
      "end": 4085,
      "positions": "C0O2226C3O2256C5O2277C8O2294C10O2310C12O2328C14O2341C18O2333C23O2373C27O2366C32O2387C37O2394C45O2443C51O2472C53O2494C58O2530C64O2561C66O2581C69O2575C76O2593C83O2631C85O2640C90O2665C97O2672C104O2697C111O2718C114O2753C118O2760C122O2718C130O2769C132O2765C139O2793C142O2828C146O2835C150O2793C158O2844C160O2840C165O2874C172O2881C177O2923C182O2923C188O2979C190O2998C195O3022C198O3046C202O3104C215O3110C221O3210C225O3217C231O3223C234O3223C239O3221C243O3293C246O3320C248O3342C250O3377C256O3384C261O3405C264O3427C266O3462C269O3489C271O3511C273O3551C277O3594C283O3601C293O3610C308O3642C313O3706C319O3713C324O3728C326O3738C330O3750C335O3787C345O3750C363O3821C370O3864C380O3827C386O3881C388O3903C391O3915C395O3934C398O3955C402O3976C404O3989C406O3985C413O4006C418O4022C425O4049C428O2351C433O2315C439O4072C441O4083",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 20,
    "tm": 45382,
    "source": {
      "script": 41,
      "start": 1854,
      "end": 1902,
      "positions": "C0O1865C2O1881C4O1877C7O1900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:687:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 21,
    "tm": 45515,
    "source": {
      "script": 37,
      "start": 20398,
      "end": 20509,
      "positions": "C0O20418C2O20432C4O20431C11O20449C16O20462C18O20476C20O20475C29O20492C36O20508",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:200:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 22,
    "tm": 47211,
    "source": {
      "script": 37,
      "start": 5722,
      "end": 6356,
      "positions": "C0O5722C15O5743C16O5743C18O5761C19O5761C21O5775C33O5825C38O5923C46O6030C60O6091C65O6189C73O6300C87O5775C93O6355",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "value node:internal/console/constructor:230:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 23,
    "tm": 47352,
    "source": {
      "script": 37,
      "start": 6455,
      "end": 7849,
      "positions": "C17O6511C27O6573C34O6615C52O6685C55O6655C73O6754C86O6851C89O6821C104O6899C111O6941C126O6981C129O6981C144O7032C151O7054C166O7088C169O7084C187O7179C191O7189C198O7211C213O7245C216O7241C235O7267C239O7280C246O7302C261O7332C275O7354C279O7367C286O7389C300O7419C314O7436C318O7451C325O7473C340O7503C354O7518C358O7543C365O7585C380O7625C394O7662C398O7682C407O6511C413O7848",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:354:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 24,
    "tm": 47435,
    "source": {
      "script": 37,
      "start": 10641,
      "end": 11498,
      "positions": "C0O10641C13O10670C17O11496",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:366:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 25,
    "tm": 47524,
    "source": {
      "script": 6,
      "start": 10601,
      "end": 10618,
      "positions": "C3O10607C7O10613C11O10607C26O10617",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 26,
    "tm": 49020,
    "source": {
      "script": 100,
      "start": 4999,
      "end": 5247,
      "positions": "C16O5051C21O5051C26O5077C28O5094C36O5124C43O5210C49O5228C56O5094C62O5246",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 27,
    "tm": 49117,
    "source": {
      "script": 100,
      "start": 9736,
      "end": 9963,
      "positions": "C0O9778C6O9778C11O9751C16O9850C22O9850C27O9821C32O9892C35O9917C40O9892C45O9962",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:397:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 28,
    "tm": 49239,
    "source": {
      "script": 30,
      "start": 11365,
      "end": 11662,
      "positions": "C0O11389C4O11418C10O11453C16O11484C21O11528C26O11529C33O11474C39O11553C44O11574C49O11574C55O11593C61O11625C66O11646C71O11646C76O11661",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupPerfHooks node:internal/bootstrap/pre_execution:324:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 29,
    "tm": 49312,
    "source": {
      "script": 100,
      "start": 9988,
      "end": 10108,
      "positions": "C0O9995C6O9995C11O10031C16O10032C20O10055C26O10055C31O10085C36O10086C41O10107",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:217:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 30,
    "tm": 49405,
    "source": {
      "script": 76,
      "start": 4753,
      "end": 4931,
      "positions": "C0O4760C7O4781C10O4793C25O4898C28O4898C35O4760C41O4930",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 31,
    "tm": 50340,
    "source": {
      "script": 48,
      "start": 525,
      "end": 563,
      "positions": "C0O532C5O545C11O543C18O562",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupInspectorHooks node:internal/bootstrap/pre_execution:329:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 32,
    "tm": 50506,
    "source": {
      "script": 100,
      "start": 10138,
      "end": 10691,
      "positions": "C0O10481C6O10485C11O10510C17O10575C23O10575C28O10545C33O10559C38O10621C44O10621C49O10649C54O10650C61O10690",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 33,
    "tm": 51018,
    "source": {
      "script": 101,
      "start": 0,
      "end": 1972,
      "positions": "C0O0C4O1972",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 34,
    "tm": 51197,
    "source": {
      "script": 101,
      "start": 0,
      "end": 1972,
      "positions": "C0O0C42O19C43O19C45O29C46O29C48O48C54O1930C61O1951C67O1961C73O1945C78O1971",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:349:29",
    "type": "JS",
    "kind": "Baseline",
    "func": 2,
    "tm": 51411,
    "source": {
      "script": 9,
      "start": 10778,
      "end": 11121,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "type": "JS",
    "kind": "Baseline",
    "func": 20,
    "tm": 51440,
    "source": {
      "script": 41,
      "start": 1854,
      "end": 1902,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeString node:path:66:25",
    "type": "JS",
    "kind": "Baseline",
    "func": 19,
    "tm": 51498,
    "source": {
      "script": 41,
      "start": 2161,
      "end": 4085,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWarningHandler node:internal/bootstrap/pre_execution:168:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 35,
    "tm": 51558,
    "source": {
      "script": 100,
      "start": 5277,
      "end": 5474,
      "positions": "C0O5312C6O5312C11O5296C16O5351C24O5355C33O5399C38O5403C45O5420C50O5435C53O5443C61O5443C68O5473",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addListener node:events:604:58",
    "type": "JS",
    "kind": "Unopt",
    "func": 36,
    "tm": 51686,
    "source": {
      "script": 23,
      "start": 17710,
      "end": 17782,
      "positions": "C0O17731C14O17738C19O17780",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "_addListener node:events:541:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 37,
    "tm": 54248,
    "source": {
      "script": 23,
      "start": 15640,
      "end": 17512,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "checkListener node:events:265:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 38,
    "tm": 54318,
    "source": {
      "script": 23,
      "start": 7730,
      "end": 7786,
      "positions": "C0O7745C8O7745C14O7785",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:245:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 39,
    "tm": 54355,
    "source": {
      "script": 16,
      "start": 7573,
      "end": 7689,
      "positions": "C0O7594C6O7631C22O7637C27O7631C29O7688",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "emit node:events:460:44",
    "type": "JS",
    "kind": "Unopt",
    "func": 40,
    "tm": 54481,
    "source": {
      "script": 23,
      "start": 13327,
      "end": 15616,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "startListeningIfSignal node:internal/process/signal:22:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 41,
    "tm": 54589,
    "source": {
      "script": 97,
      "start": 429,
      "end": 904,
      "positions": "C0O440C3O444C11O463C14O475C19O475C26O492C32O524C38O533C43O563C50O531C56O589C61O589C67O613C72O613C76O627C78O643C84O673C98O643C103O641C107O721C114O728C118O757C123O757C129O776C131O798C136O798C140O813C148O819C153O813C154O870C159O882C164O882C171O903",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSignal node:internal/process/signal:17:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 42,
    "tm": 54732,
    "source": {
      "script": 97,
      "start": 255,
      "end": 334,
      "positions": "C0O267C8O303C13O310C17O318C18O332",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupFetch node:internal/bootstrap/pre_execution:179:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 43,
    "tm": 54808,
    "source": {
      "script": 100,
      "start": 5529,
      "end": 5985,
      "positions": "C0O5536C8O5541C14O5587C15O5594C16O5602C24O5602C28O5654C34O5654C39O5696C46O5712C52O5740C57O5696C62O5750C69O5766C75O5797C80O5750C85O5810C92O5826C98O5856C103O5810C108O5868C115O5884C121O5914C126O5868C131O5926C138O5942C144O5973C149O5926C155O5984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupWebCrypto node:internal/bootstrap/pre_execution:196:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 44,
    "tm": 54903,
    "source": {
      "script": 100,
      "start": 6114,
      "end": 7306,
      "positions": "C0O6114C8O6121C13O6133C18O6140C23O6150C33O6184C39O6184C45O6241C46O6248C47O6260C48O6260C50O6273C61O6294C76O6361C107O6361C120O6273C125O6634C133O6638C138O6663C144O6682C158O6696C162O6692C164O6738C175O6759C189O6902C197O6738C202O6921C213O6942C227O7088C235O6921C240O7110C251O7131C265O7280C273O7110C279O7305",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:136:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 45,
    "tm": 54982,
    "source": {
      "script": 10,
      "start": 4152,
      "end": 4180,
      "positions": "C0O4157C4O4178",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/node:112:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 46,
    "tm": 56330,
    "source": {
      "script": 10,
      "start": 3519,
      "end": 3783,
      "positions": "C0O3561C14O3561C20O3600C29O3715C35O3737C43O3722C48O3757C49O3768C51O3779",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupCustomEvent node:internal/bootstrap/pre_execution:238:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 47,
    "tm": 56435,
    "source": {
      "script": 100,
      "start": 7439,
      "end": 7700,
      "positions": "C0O7446C3O7458C8O7465C13O7475C21O7509C27O7509C33O7568C34O7575C35O7606C41O7606C46O7590C51O7642C58O7658C67O7642C73O7699",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupDebugEnv node:internal/bootstrap/pre_execution:290:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 48,
    "tm": 56494,
    "source": {
      "script": 100,
      "start": 8986,
      "end": 9196,
      "positions": "C0O8993C6O8993C11O9026C19O9054C24O9058C29O9027C34O9073C42O9077C48O9121C54O9121C59O9158C64O9171C69O9172C74O9195",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 49,
    "tm": 56570,
    "source": {
      "script": 22,
      "start": 546,
      "end": 991,
      "positions": "C0O561C7O574C14O572C20O596C31O709C44O709C51O753C62O754C69O782C80O783C88O833C100O848C116O833C121O833C123O871C132O883C144O959C151O971C158O990",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 50,
    "tm": 56881,
    "source": {
      "script": 100,
      "start": 8530,
      "end": 8716,
      "positions": "C0O8537C8O8542C14O8582C15O8589C16O8623C22O8623C27O8604C32O8673C38O8706C43O8706C48O8715",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReport node:internal/bootstrap/pre_execution:278:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 51,
    "tm": 56936,
    "source": {
      "script": 100,
      "start": 8743,
      "end": 8962,
      "positions": "C0O8743C8O8769C16O8769C21O8758C27O8807C42O8828C47O8920C55O8807C61O8961",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 52,
    "tm": 57087,
    "source": {
      "script": 102,
      "start": 0,
      "end": 2545,
      "positions": "C0O0C4O2545",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/report:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 53,
    "tm": 57319,
    "source": {
      "script": 102,
      "start": 0,
      "end": 2545,
      "positions": "C0O0C48O42C51O42C56O68C61O24C67O165C70O165C75O86C81O105C87O123C93O145C99O208C102O208C106O208C108O245C114O288C119O292C127O678C281O2494C288O2515C294O2535C300O2509C305O2544",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 54,
    "tm": 57531,
    "source": {
      "script": 100,
      "start": 9297,
      "end": 9393,
      "positions": "C0O9333C6O9333C11O9312C16O9372C20O9392",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addSignalHandler node:internal/process/report:98:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 55,
    "tm": 57586,
    "source": {
      "script": 102,
      "start": 2144,
      "end": 2290,
      "positions": "C0O2154C5O2161C10O2161C16O2191C22O2226C27O2235C32O2235C38O2253C41O2261C49O2261C56O2289",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 56,
    "tm": 57640,
    "source": {
      "script": 100,
      "start": 9440,
      "end": 9702,
      "positions": "C0O9440C8O9462C18O9462C23O9506C25O9523C26O9530C27O9534C35O9534C40O9564C45O9565C50O9625C58O9625C63O9603C69O9643C74O9651C79O9654C84O9651C91O9701",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 57,
    "tm": 57703,
    "source": {
      "script": 100,
      "start": 13519,
      "end": 14048,
      "positions": "C0O13526C3O13538C8O13542C14O13580C20O13580C25O13624C33O13647C38O13651C46O13624C52O13677C53O13687C57O13677C61O13768C64O13783C73O13841C76O13849C81O13853C90O13900C93O13915C102O13957C108O13957C113O13981C118O13982C124O14021C127O14036C132O14021C137O14047",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializePolicy node:internal/bootstrap/pre_execution:465:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 58,
    "tm": 57823,
    "source": {
      "script": 100,
      "start": 14347,
      "end": 16145,
      "positions": "C0O14381C10O14381C15O14424C17O14454C21O14462C35O14462C41O14587C49O14587C55O14564C60O14579C65O14706C67O14723C75O14727C81O14742C87O14743C94O14783C100O14815C108O14797C116O14872C120O14894C126O14894C132O14872C138O14908C149O14924C153O14938C161O14952C167O15010C175O15010C180O15044C190O15044C197O15119C207O15119C212O15161C214O15214C222O15214C227O15292C235O15292C241O15260C246O15272C251O15341C257O15341C263O15391C269O15391C275O15450C277O15476C279O15500C283O15481C288O15590C290O15606C295O15541C300O15569C305O15632C311O15668C317O15668C322O15709C328O15709C334O15738C340O15758C344O15745C349O15778C356O15825C358O15854C360O15895C366O15917C376O15917C383O15895C389O15509C394O15463C397O15952C401O15979C415O15985C420O15979C421O16068C429O16068C435O16109C441O16133C447O16110C454O16144",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeClusterIPC node:internal/bootstrap/pre_execution:456:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 59,
    "tm": 57922,
    "source": {
      "script": 100,
      "start": 14079,
      "end": 14320,
      "positions": "C0O14086C3O14098C10O14102C18O14117C23O14121C29O14159C35O14159C40O14191C45O14191C49O14280C52O14295C62O14319",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 60,
    "tm": 57968,
    "source": {
      "script": 100,
      "start": 17878,
      "end": 18027,
      "positions": "C0O17922C6O17922C11O17893C16O17973C21O18002C26O18026",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 61,
    "tm": 58236,
    "source": {
      "script": 103,
      "start": 0,
      "end": 9046,
      "positions": "C0O0C4O9046",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 62,
    "tm": 58985,
    "source": {
      "script": 103,
      "start": 0,
      "end": 9046,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 63,
    "tm": 59145,
    "source": {
      "script": 22,
      "start": 2232,
      "end": 3240,
      "positions": "C0O2232C28O2357C32O2357C34O2759C35O2759C37O2781C41O2781C43O2869C48O3068C58O3089C63O3135C74O3068C79O3224C81O3238",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 64,
    "tm": 59628,
    "source": {
      "script": 104,
      "start": 0,
      "end": 1958,
      "positions": "C0O0C4O1958",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 65,
    "tm": 59845,
    "source": {
      "script": 104,
      "start": 0,
      "end": 1958,
      "positions": "C0O0C26O25C31O41C37O69C43O80C49O95C55O110C134O1392C168O1904C173O1875C177O1917C184O1938C190O1932C195O1957",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:17:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 66,
    "tm": 59874,
    "source": {
      "script": 104,
      "start": 399,
      "end": 516,
      "positions": "C3O410C10O410C27O441C34O441C48O479C62O479C74O516",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 67,
    "tm": 60414,
    "source": {
      "script": 105,
      "start": 0,
      "end": 6862,
      "positions": "C0O0C4O6862",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 68,
    "tm": 61202,
    "source": {
      "script": 105,
      "start": 0,
      "end": 6862,
      "positions": "C0O0C104O25C110O50C116O72C122O94C128O118C134O151C139O162C144O173C150O202C156O229C162O253C168O373C174O373C179O399C184O307C190O342C196O432C202O432C207O415C213O499C219O499C224O480C230O544C236O544C240O544C242O607C248O607C253O569C259O584C265O599C271O660C277O660C282O641C287O712C290O712C295O757C301O757C306O790C319O791C325O757C327O856C330O856C335O911C346O1041C353O1083C354O1083C410O1105C465O1041C470O1041C472O1665C474O1665C479O1665C481O6702C488O6723C494O6749C500O6766C506O6782C512O6802C518O6825C524O6849C530O6717C535O6861",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:379:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 69,
    "tm": 61557,
    "source": {
      "script": 6,
      "start": 10928,
      "end": 10945,
      "positions": "C3O10934C7O10940C11O10934C26O10944",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 70,
    "tm": 61635,
    "source": {
      "script": 104,
      "start": 373,
      "end": 373,
      "positions": "C0O373C15O373",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:372:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 71,
    "tm": 61675,
    "source": {
      "script": 6,
      "start": 10772,
      "end": 10789,
      "positions": "C3O10778C7O10784C11O10778C26O10788",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:393:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 72,
    "tm": 61721,
    "source": {
      "script": 6,
      "start": 11378,
      "end": 11423,
      "positions": "C3O11398C7O11404C11O11398C26O11422",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeDeprecations node:internal/bootstrap/pre_execution:347:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 73,
    "tm": 61915,
    "source": {
      "script": 100,
      "start": 10917,
      "end": 13481,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeWASI node:internal/bootstrap/pre_execution:514:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 74,
    "tm": 62025,
    "source": {
      "script": 100,
      "start": 16170,
      "end": 16376,
      "positions": "C0O16202C6O16202C11O16185C16O16268C21O16272C29O16272C35O16287C37O16318C43O16318C47O16312C52O16375",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 75,
    "tm": 62090,
    "source": {
      "script": 89,
      "start": 760,
      "end": 901,
      "positions": "C0O802C5O795C11O802C16O846C21O867C26O867C31O824C37O837C44O880C48O767C52O900",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeCJSLoader node:internal/bootstrap/pre_execution:521:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 76,
    "tm": 62424,
    "source": {
      "script": 100,
      "start": 16406,
      "end": 16721,
      "positions": "C0O16431C6O16431C11O16473C16O16478C20O16498C26O16536C31O16543C36O16543C40O16639C51O16660C56O16696C60O16654C65O16720",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 77,
    "tm": 63373,
    "source": {
      "script": 106,
      "start": 0,
      "end": 41236,
      "positions": "C0O0C4O41236",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 78,
    "tm": 66722
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 79,
    "tm": 67187,
    "source": {
      "script": 107,
      "start": 0,
      "end": 983,
      "positions": "C0O0C4O983",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 80,
    "tm": 67306,
    "source": {
      "script": 107,
      "start": 0,
      "end": 983,
      "positions": "C0O0C29O23C34O83C37O83C42O56C48O132C54O132C59O114C65O177C71O177C76O156C82O209C84O209C89O209C91O229C92O229C94O956C101O975C107O971C112O982",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 81,
    "tm": 67500,
    "source": {
      "script": 108,
      "start": 0,
      "end": 2985,
      "positions": "C0O0C4O2985",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 82,
    "tm": 67753,
    "source": {
      "script": 108,
      "start": 0,
      "end": 2985,
      "positions": "C0O0C47O25C53O111C59O111C64O137C69O67C75O167C81O167C86O153C92O258C98O258C103O217C109O323C115O323C120O305C126O381C132O381C137O358C143O413C147O448C151O749C155O789C159O1259C162O1259C167O1259C169O1276C171O1294C175O1541C176O1541C178O2630C182O2646C187O2984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 83,
    "tm": 68280,
    "source": {
      "script": 109,
      "start": 0,
      "end": 26217,
      "positions": "C0O0C4O26217",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 84,
    "tm": 70296,
    "source": {
      "script": 109,
      "start": 0,
      "end": 26217,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:190:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 85,
    "tm": 70357,
    "source": {
      "script": 109,
      "start": 5870,
      "end": 6869,
      "positions": "C3O5890C17O6057C33O6075C56O6314C72O6332C95O6436C110O6530C117O6530C131O6648C141O6735C148O6735C162O6858C175O6869",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 86,
    "tm": 70539,
    "source": {
      "script": 110,
      "start": 0,
      "end": 1444,
      "positions": "C0O0C4O1444",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 87,
    "tm": 70675,
    "source": {
      "script": 110,
      "start": 0,
      "end": 1444,
      "positions": "C0O0C23O33C26O33C30O33C32O109C35O109C40O85C46O159C52O175C57O213C60O213C65O246C78O247C84O213C86O324C89O324C94O350C99O299C105O385C108O385C113O366C123O495C167O1416C169O1431C174O1443",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 88,
    "tm": 70991,
    "source": {
      "script": 111,
      "start": 0,
      "end": 8059,
      "positions": "C0O0C4O8059",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 89,
    "tm": 71780,
    "source": {
      "script": 111,
      "start": 0,
      "end": 8059,
      "positions": "C0O0C79O25C85O47C91O69C97O91C102O112C108O128C113O152C118O170C124O195C130O211C136O234C142O266C148O284C154O295C160O322C166O346C172O414C178O414C183O399C189O478C195O478C200O455C206O540C212O540C217O514C223O604C229O604C233O604C235O656C238O656C240O688C242O688C244O729C245O729C247O759C251O759C253O877C257O877C296O8013C303O7982C308O8031C310O8046C315O8058",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 90,
    "tm": 72323,
    "source": {
      "script": 112,
      "start": 0,
      "end": 3624,
      "positions": "C0O0C4O3624",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 91,
    "tm": 72848,
    "source": {
      "script": 112,
      "start": 0,
      "end": 3624,
      "positions": "C0O0C46O25C51O49C57O75C63O91C68O107C74O182C77O182C82O163C88O341C91O341C96O367C101O225C107O261C113O298C119O468C121O468C123O659C130O695C136O730C142O781C148O812C154O659C156O1240C159O1264C169O1240C174O1240C176O3557C183O3578C189O3601C195O3572C200O3623",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 92,
    "tm": 72999,
    "source": {
      "script": 112,
      "start": 1295,
      "end": 1333,
      "positions": "C0O1310C2O1314C4O1310C8O1333",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 93,
    "tm": 74425,
    "source": {
      "script": 113,
      "start": 0,
      "end": 40878,
      "positions": "C0O0C4O40878",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 94,
    "tm": 77640
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 95,
    "tm": 78086,
    "source": {
      "script": 114,
      "start": 0,
      "end": 4134,
      "positions": "C0O0C4O4134",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 96,
    "tm": 78431,
    "source": {
      "script": 114,
      "start": 0,
      "end": 4134,
      "positions": "C0O0C90O24C95O40C100O56C106O89C112O113C118O131C124O154C130O233C133O233C138O201C144O211C150O220C156O277C159O277C164O258C169O330C172O330C177O314C183O454C186O454C191O386C197O408C203O436C209O533C212O533C216O533C218O625C221O625C225O625C227O730C230O730C235O688C241O704C247O802C250O802C255O779C261O784C267O866C270O866C275O892C280O835C286O926C288O939C300O972C306O1012C312O1052C318O1093C322O1124C330O926C335O926C337O4037C344O4058C350O4078C356O4111C362O4052C367O4133",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 97,
    "tm": 78748,
    "source": {
      "script": 115,
      "start": 0,
      "end": 7752,
      "positions": "C0O0C4O7752",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 98,
    "tm": 79354,
    "source": {
      "script": 115,
      "start": 0,
      "end": 7752,
      "positions": "C0O0C113O24C119O57C125O81C130O92C136O119C142O143C148O235C154O235C159O235C164O215C170O358C176O358C181O384C186O264C192O297C198O332C204O408C210O408C215O400C221O445C227O445C232O478C238O478C243O469C249O517C255O517C260O505C266O1093C268O1093C273O1093C275O1383C276O1383C278O1611C279O1611C281O1990C282O1990C284O5892C289O5884C294O5884C296O5905C299O5915C310O5915C316O5942C319O5952C330O5952C336O7715C343O7736C349O7730C354O7751",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 99,
    "tm": 80785,
    "source": {
      "script": 116,
      "start": 0,
      "end": 51955,
      "positions": "C0O0C4O51955",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 100,
    "tm": 85353
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 101,
    "tm": 86395,
    "source": {
      "script": 117,
      "start": 0,
      "end": 1749,
      "positions": "C0O0C4O1749",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/net:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 102,
    "tm": 86624,
    "source": {
      "script": 117,
      "start": 0,
      "end": 1749,
      "positions": "C0O0C45O25C50O35C56O58C61O99C64O99C69O116C73O99C75O149C78O149C83O133C89O187C92O187C96O187C98O246C101O316C106O320C119O335C124O360C129O375C142O360C147O360C149O417C152O457C160O483C173O499C183O473C192O521C205O537C218O547C228O511C237O569C250O586C263O597C273O559C282O625C295O643C308O658C321O669C331O615C340O697C353O715C366O730C379O741C389O687C398O769C411O787C424O802C437O813C447O759C456O841C469O859C482O874C495O885C505O831C514O919C527O934C540O947C550O903C556O965C562O457C567O457C569O1633C576O1654C582O1662C588O1672C594O1682C601O1721C611O1648C616O1748",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 103,
    "tm": 87266,
    "source": {
      "script": 118,
      "start": 0,
      "end": 568,
      "positions": "C0O0C4O568",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dtrace:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 104,
    "tm": 87347,
    "source": {
      "script": 118,
      "start": 0,
      "end": 568,
      "positions": "C0O30C3O30C8O322C17O334C25O68C36O109C47O151C58O192C69O234C80O277C91O368C98O389C104O419C110O450C116O480C122O511C128O543C134O383C139O567",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "protoGetter node:net:796:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 105,
    "tm": 87611,
    "source": {
      "script": 116,
      "start": 20540,
      "end": 20701,
      "positions": "C0O20561C8O20589C13O20600C20O20685C27O20561C33O20700",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:366:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 25,
    "tm": 87728,
    "source": {
      "script": 6,
      "start": 10601,
      "end": 10618,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 13,
    "tm": 87767,
    "source": {
      "script": 95,
      "start": 985,
      "end": 1228,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "type": "JS",
    "kind": "Baseline",
    "func": 14,
    "tm": 87795,
    "source": {
      "script": 95,
      "start": 497,
      "end": 598,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:316:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 3,
    "tm": 87829,
    "source": {
      "script": 9,
      "start": 9991,
      "end": 10552,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:171:45",
    "type": "JS",
    "kind": "Baseline",
    "func": 11,
    "tm": 87857,
    "source": {
      "script": 9,
      "start": 5263,
      "end": 5501,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get BlockList node:net:1920:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 106,
    "tm": 87902,
    "source": {
      "script": 116,
      "start": 51574,
      "end": 51663,
      "positions": "C0O51583C14O51597C19O51626C26O51593C32O51642C36O51659",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 107,
    "tm": 88100,
    "source": {
      "script": 119,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C4O3877",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/blocklist:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 108,
    "tm": 88431,
    "source": {
      "script": 119,
      "start": 0,
      "end": 3877,
      "positions": "C0O0C35O25C41O36C46O60C51O127C54O127C59O106C65O204C68O204C73O190C78O293C81O293C86O241C92O267C98O385C101O385C106O339C111O357C116O367C121O450C124O450C129O438C135O501C138O501C142O501C144O545C147O545C152O528C158O611C161O611C166O637C171O584C177O688C180O688C185O654C191O669C197O745C204O884C241O3223C251O3384C278O3519C301O3691C306O3725C311O3735C315O3713C319O3787C324O3808C329O3748C334O3821C341O3842C347O3855C353O3836C358O3876",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 109,
    "tm": 88728,
    "source": {
      "script": 120,
      "start": 0,
      "end": 3207,
      "positions": "C0O0C4O3207",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 110,
    "tm": 89034,
    "source": {
      "script": 120,
      "start": 0,
      "end": 3207,
      "positions": "C0O0C38O25C43O49C48O143C51O143C56O100C62O118C68O129C74O257C77O257C82O185C88O203C94O221C100O237C106O345C109O345C114O345C119O313C125O419C128O419C133O405C138O466C141O466C146O454C152O557C155O557C160O511C165O529C170O539C175O618C178O618C182O618C184O653C187O653C191O653C193O701C226O2071C236O2313C246O2482C279O2877C302O2988C307O3028C312O3038C316O3010C320O3094C325O3119C330O3051C335O3132C342O3153C348O3170C354O3195C360O3147C365O3206",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BlockList node:internal/blocklist:40:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 111,
    "tm": 89210,
    "source": {
      "script": 119,
      "start": 775,
      "end": 879,
      "positions": "C3O784C11O784C23O797C28O802C33O817C36O813C41O811C45O840C50O845C52O844C58O854C64O868C71O878",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addAddress node:internal/blocklist:60:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 112,
    "tm": 89287,
    "source": {
      "script": 119,
      "start": 1149,
      "end": 1460,
      "positions": "C14O1182C19O1201C24O1201C31O1235C39O1235C44O1277C52O1277C57O1317C69O1355C75O1372C81O1327C87O1400C89O1405C91O1404C95O1414C102O1433C104O1432C108O1414C114O1459",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isSocketAddress node:internal/socketaddress:43:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 113,
    "tm": 89340,
    "source": {
      "script": 120,
      "start": 742,
      "end": 798,
      "positions": "C0O756C9O771C11O770C18O780C19O794",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SocketAddress node:internal/socketaddress:47:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 114,
    "tm": 89439,
    "source": {
      "script": 120,
      "start": 813,
      "end": 1761,
      "positions": "C7O813C13O834C21O834C33O847C41O847C46O893C58O940C69O958C81O998C89O1014C97O1055C99O1065C106O1082C117O1134C122O1134C127O1153C146O1198C151O1222C153O1256C158O1281C160O1311C168O1369C175O1317C180O1311C181O1389C189O1389C194O1437C202O1437C207O1477C220O1477C225O1537C230O1542C235O1557C252O1553C257O1551C261O1609C266O1614C274O1630C276O1629C280O1639C291O1663C296O1686C301O1711C306O1739C310O1639C315O1623C322O1760",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:163:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 115,
    "tm": 89523,
    "source": {
      "script": 16,
      "start": 4731,
      "end": 5290,
      "positions": "C0O4789C4O4829C9O4865C14O4903C21O4939C26O4975C33O5011C38O5025C46O5072C50O5086C53O5086C67O5161C75O5226C91O5232C96O5226C98O5289",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validatePort node:internal/validators:220:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 116,
    "tm": 89592,
    "source": {
      "script": 16,
      "start": 6761,
      "end": 7119,
      "positions": "C24O6805C44O6902C47O6902C52O6927C58O6935C65O6951C70O6962C72O6968C75O6957C86O6989C92O7013C99O7023C101O7041C117O7047C122O7041C123O7101C125O7113C128O7117",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:102:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 117,
    "tm": 89660,
    "source": {
      "script": 16,
      "start": 2897,
      "end": 3401,
      "positions": "C0O2928C6O2965C22O2971C27O2965C28O3026C31O3031C37O3054C42O3059C48O3091C64O3097C69O3091C70O3168C80O3220C90O3259C109O3226C114O3220C115O3296C120O3318C125O3331C141O3337C146O3331C148O3400",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:41:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 118,
    "tm": 89705,
    "source": {
      "script": 16,
      "start": 811,
      "end": 856,
      "positions": "C0O823C2O847C5O836C8O854",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addRange node:internal/blocklist:72:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 119,
    "tm": 89797,
    "source": {
      "script": 119,
      "start": 1472,
      "end": 2142,
      "positions": "C17O1508C22O1527C27O1527C34O1559C42O1559C47O1597C55O1597C60O1637C72O1682C78O1697C84O1645C90O1725C95O1744C100O1744C107O1774C115O1774C120O1808C128O1808C133O1848C145O1891C151O1904C157O1854C163O1944C165O1949C167O1948C171O1958C178O1980C180O1979C186O2013C188O2012C192O1958C199O2041C200O2049C205O2066C221O2072C226O2066C228O2141",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 120,
    "tm": 89939,
    "source": {
      "script": 121,
      "start": 0,
      "end": 1199,
      "positions": "C0O0C4O1199",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 121,
    "tm": 90090,
    "source": {
      "script": 121,
      "start": 0,
      "end": 1199,
      "positions": "C0O0C24O25C30O90C33O90C38O71C43O153C46O153C50O153C52O228C57O368C61O368C63O504C67O537C73O601C79O565C83O1083C90O1104C96O1126C102O1154C108O1182C114O1098C119O1198",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 122,
    "tm": 90253,
    "source": {
      "script": 122,
      "start": 0,
      "end": 980,
      "positions": "C0O0C4O980",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 123,
    "tm": 90358,
    "source": {
      "script": 122,
      "start": 0,
      "end": 980,
      "positions": "C0O0C28O42C31O42C36O23C41O111C44O111C48O111C50O175C56O199C62O248C65O248C69O248C71O935C78O956C84O950C89O979",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 124,
    "tm": 90519,
    "source": {
      "script": 123,
      "start": 0,
      "end": 2745,
      "positions": "C0O0C4O2745",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 125,
    "tm": 90762,
    "source": {
      "script": 123,
      "start": 0,
      "end": 2745,
      "positions": "C0O0C58O25C64O47C70O70C76O137C79O137C84O116C90O212C93O212C98O189C104O279C107O279C112O260C117O332C120O332C125O316C131O445C134O445C143O489C150O445C152O571C155O571C159O571C161O663C164O663C169O663C174O646C180O719C183O719C188O750C193O701C199O776C202O776C207O768C213O866C216O866C221O892C226O811C232O830C238O926C242O926C244O2708C251O2729C257O2723C262O2744",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 126,
    "tm": 92309,
    "source": {
      "script": 124,
      "start": 0,
      "end": 23391,
      "positions": "C0O0C4O23391",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 127,
    "tm": 94170
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:195:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 128,
    "tm": 94357,
    "source": {
      "script": 124,
      "start": 4267,
      "end": 5065,
      "positions": "C0O4267C12O4275C26O5065",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 129,
    "tm": 94870,
    "source": {
      "script": 125,
      "start": 0,
      "end": 7095,
      "positions": "C0O0C4O7095",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 130,
    "tm": 95618,
    "source": {
      "script": 125,
      "start": 0,
      "end": 7095,
      "positions": "C0O0C139O368C145O393C151O404C156O450C159O450C164O439C170O480C173O480C177O480C179O642C182O505C188O514C194O527C200O536C206O549C212O560C218O575C224O584C230O597C236O605C242O617C248O627C254O662C257O662C262O654C267O702C270O702C275O687C281O739C284O739C289O729C295O792C302O792C307O792C309O863C316O863C321O863C323O958C330O967C333O950C335O1001C345O1001C347O1060C357O1060C359O1126C361O1126C363O1154C366O1161C371O1161C376O1154C378O7038C385O7057C391O7065C397O7081C403O7053C408O7094",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "from node:buffer:301:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 131,
    "tm": 95911,
    "source": {
      "script": 24,
      "start": 8546,
      "end": 9497,
      "positions": "C3O8584C9O8619C12O8626C17O8662C18O8666C28O8721C33O8725C39O8756C51O8763C56O8812C57O8840C63O8857C68O8857C73O8872C78O8911C95O9002C104O9009C109O9049C110O9071C113O9071C118O9094C120O9107C122O9116C123O9122C125O9139C127O9138C134O9200C136O9206C138O9205C145O9224C151O9242C155O9287C158O9294C163O9334C164O9356C182O9362C187O9356",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fromString node:buffer:437:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 132,
    "tm": 98885,
    "source": {
      "script": 24,
      "start": 12597,
      "end": 13031,
      "positions": "C0O12624C2O12631C8O12676C14O12683C19O12707C25O12714C30O12727C35O12734C40O12751C41O12756C46O12774C51O12784C56O12821C59O12827C64O12857C66O12886C73O12892C78O12886C79O12943C85O12950C90O12963C95O12970C100O12987C101O12994C104O13001C109O13029",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "fromStringFast node:buffer:418:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 133,
    "tm": 98995,
    "source": {
      "script": 24,
      "start": 12053,
      "end": 12576,
      "positions": "C0O12090C5O12090C11O12113C14O12135C18O12144C21O12124C26O12156C31O12192C36O12163C41O12205C42O12209C44O12223C49O12234C51O12232C54O12220C59O12251C62O12251C65O12275C72O12290C77O12301C85O12275C91O12343C110O12343C116O12374C118O12385C123O12469C130O12488C135O12499C143O12473C149O12526C156O12540C162O12537C168O12550C171O12550C174O12565C176O12574",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "FastBuffer node:internal/buffer:958:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 134,
    "tm": 99056,
    "source": {
      "script": 25,
      "start": 26364,
      "end": 26453,
      "positions": "C3O26407C7O26441C20O26407C35O26452",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "write node:buffer:598:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 135,
    "tm": 99095,
    "source": {
      "script": 24,
      "start": 16665,
      "end": 16729,
      "positions": "C0O16699C17O16699C22O16729",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "alignPool node:buffer:163:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 136,
    "tm": 99143,
    "source": {
      "script": 24,
      "start": 4119,
      "end": 4223,
      "positions": "C0O4153C4O4168C9O4181C19O4192C25O4204C34O4214C41O4222",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "promisify node:internal/util:324:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 137,
    "tm": 99295,
    "source": {
      "script": 15,
      "start": 8873,
      "end": 10421,
      "positions": "C0O8873C17O8935C25O8975C33O8999C38O8978C55O9035C68O9035C73O9078C80O9091C82O9090C87O9135C94O9144C96O9143C100O9176C110O9176C115O9228C126O9260C136O9324C143O9235C148O9390C149O9553C156O9562C158O9561C161O9553C163O10117C174O10142C180O10142C185O10117C190O10178C201O10203C211O10263C218O10178C223O10330C234O10373C240O10373C245O10337C250O10419",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:1020:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 138,
    "tm": 100615,
    "source": {
      "script": 44,
      "start": 26886,
      "end": 27308,
      "positions": "C0O26938C23O27122C30O27154C33O27167C38O27122C43O27181C47O27214C52O27255C57O27214C62O27281C64O27306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 139,
    "tm": 103299,
    "source": {
      "script": 126,
      "start": 0,
      "end": 10763,
      "positions": "C0O0C4O10763",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 140,
    "tm": 104213,
    "source": {
      "script": 126,
      "start": 0,
      "end": 10763,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 141,
    "tm": 104447,
    "source": {
      "script": 127,
      "start": 0,
      "end": 1756,
      "positions": "C0O0C4O1756",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 142,
    "tm": 104612,
    "source": {
      "script": 127,
      "start": 0,
      "end": 1756,
      "positions": "C0O0C39O25C45O47C51O68C57O85C63O101C69O140C72O140C77O173C90O174C96O140C98O642C103O1718C105O1733C110O1755",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 143,
    "tm": 105043,
    "source": {
      "script": 128,
      "start": 0,
      "end": 12372,
      "positions": "C0O0C4O12372",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/vm/module:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 144,
    "tm": 106475,
    "source": {
      "script": 128,
      "start": 0,
      "end": 12372,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:259:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 145,
    "tm": 106571,
    "source": {
      "script": 128,
      "start": 6871,
      "end": 6907,
      "positions": "C3O6880C29O6907",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:240:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 146,
    "tm": 106866,
    "source": {
      "script": 109,
      "start": 6885,
      "end": 7491,
      "positions": "C9O6885C28O6894C38O6898C43O6937C49O6945C54O6958C64O6958C68O7015C78O7019C84O7077C94O7077C98O7131C110O7186C116O7186C123O7240C128O7265C133O7273C144O7273C150O7440C156O7474C165O7490",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:17:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 147,
    "tm": 106958,
    "source": {
      "script": 110,
      "start": 518,
      "end": 535,
      "positions": "C3O524C7O530C11O524C26O534",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "desc.value node:internal/per_context/primordials:340:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 148,
    "tm": 107019,
    "source": {
      "script": 6,
      "start": 9873,
      "end": 9932,
      "positions": "C0O9890C7O9897C12O9920",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:285:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 149,
    "tm": 107059,
    "source": {
      "script": 6,
      "start": 8138,
      "end": 8198,
      "positions": "C0O8157C3O8174C7O8172C12O8197",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:288:9",
    "type": "JS",
    "kind": "Unopt",
    "func": 150,
    "tm": 107100,
    "source": {
      "script": 6,
      "start": 8207,
      "end": 8252,
      "positions": "C0O8218C3O8235C8O8225C12O8246",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 151,
    "tm": 107140,
    "source": {
      "script": 9,
      "start": 7775,
      "end": 7826,
      "positions": "C0O7786C7O7814C12O7814C18O7822",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:192:41",
    "type": "JS",
    "kind": "Unopt",
    "func": 152,
    "tm": 107384,
    "source": {
      "script": 106,
      "start": 5814,
      "end": 5840,
      "positions": "C0O5822C9O5823C21O5835C31O5840",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 153,
    "tm": 107508,
    "source": {
      "script": 9,
      "start": 7861,
      "end": 7912,
      "positions": "C0O7870C11O7887C14O7877C18O7908",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:194:49",
    "type": "JS",
    "kind": "Unopt",
    "func": 154,
    "tm": 107574,
    "source": {
      "script": 106,
      "start": 5893,
      "end": 5940,
      "positions": "C0O5918C5O5918C15O5930C20O5918C25O5940",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 155,
    "tm": 107726,
    "source": {
      "script": 15,
      "start": 2401,
      "end": 3577,
      "positions": "C0O2401C26O2421C31O2433C37O2447C42O2463C44O2473C45O2528C53O2566C61O2588C66O2569C83O2624C87O2652C100O2652C105O2698C106O2698C108O3273C121O3273C126O3313C129O3320C135O3513C141O3539C145O3534C149O3557C151O3575",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 156,
    "tm": 107823,
    "source": {
      "script": 95,
      "start": 760,
      "end": 877,
      "positions": "C0O767C6O795C11O813C17O811C23O852C27O875",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1254:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 157,
    "tm": 107909,
    "source": {
      "script": 106,
      "start": 39273,
      "end": 40229,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 158,
    "tm": 108128,
    "source": {
      "script": 129,
      "start": 0,
      "end": 2700,
      "positions": "C0O0C4O2700",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 159,
    "tm": 108364,
    "source": {
      "script": 129,
      "start": 0,
      "end": 2700,
      "positions": "C0O0C66O25C72O41C78O101C84O101C89O149C95O157C101O169C107O228C113O228C118O209C124O270C130O270C134O270C136O320C142O320C147O297C153O2632C160O2653C166O2678C172O2647C177O2699",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeESMLoader node:internal/bootstrap/pre_execution:531:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 160,
    "tm": 108479,
    "source": {
      "script": 100,
      "start": 16751,
      "end": 17839,
      "positions": "C0O16833C6O16833C13O16882C16O16878C21O16876C25O16900C30O16904C34O16924C40O16953C41O16960C42O17060C48O17060C53O16976C58O17016C63O17106C69O17106C74O17307C79O17265C83O17377C88O17338C92O17543C100O17547C106O17663C112O17663C117O17612C122O17620C127O17638C132O17709C138O17709C143O17728C145O17738C149O17752C151O17772C155O17796C157O17815C162O17838",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 161,
    "tm": 108545,
    "source": {
      "script": 106,
      "start": 2295,
      "end": 2335,
      "positions": "C0O2300C4O2333",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assert node:internal/assert:11:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 162,
    "tm": 108586,
    "source": {
      "script": 21,
      "start": 172,
      "end": 307,
      "positions": "C0O193C4O242C7O242C11O259C13O265C18O259C20O306",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadPreloadModules node:internal/bootstrap/pre_execution:574:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 163,
    "tm": 108671,
    "source": {
      "script": 100,
      "start": 18315,
      "end": 18635,
      "positions": "C0O18402C8O18402C13O18433C15O18470C21O18477C26O18553C32O18553C37O18553C42O18520C47O18597C52O18634",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1284:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 164,
    "tm": 108744,
    "source": {
      "script": 106,
      "start": 40265,
      "end": 40839,
      "positions": "C0O40280C5O40285C11O40313C12O40320C13O40324C17O40337C23O40532C33O40532C42O40582C45O40604C53O40629C58O40629C63O40604C68O40595C85O40657C88O40663C95O40668C100O40690C106O40703C114O40718C116O40718C119O40752C121O40768C125O40757C130O40792C137O40808C141O40792C146O40777C151O40739C154O40816C158O40829C165O40838",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module node:internal/modules/cjs/loader:172:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 165,
    "tm": 108811,
    "source": {
      "script": 106,
      "start": 5287,
      "end": 5524,
      "positions": "C14O5309C16O5317C20O5325C22O5337C25O5342C30O5342C35O5335C39O5357C40O5370C44O5378C49O5396C54O5396C60O5417C71O5417C76O5456C77O5470C81O5480C82O5492C86O5503C88O5517C93O5523",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1275:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 166,
    "tm": 108891,
    "source": {
      "script": 41,
      "start": 38741,
      "end": 39410,
      "positions": "C0O38754C8O38754C13O38797C19O38804C24O38817C26O38828C27O38849C34O38849C42O38888C44O38884C48O38922C51O38949C53O38977C57O38984C61O38991C63O38991C68O39010C73O39014C81O39053C83O39049C88O39083C92O39114C97O39133C101O39220C103O38999C108O38959C111O39261C113O39269C118O39283C128O39310C129O39315C135O39334C140O39347C142O39359C143O39364C156O39371C161O39406",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:165:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 167,
    "tm": 109019,
    "source": {
      "script": 106,
      "start": 5052,
      "end": 5225,
      "positions": "C0O5095C7O5101C15O5115C19O5133C23O5141C26O5141C33O5187C38O5187C44O5224",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:640:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 168,
    "tm": 109100,
    "source": {
      "script": 106,
      "start": 19143,
      "end": 20274,
      "positions": "C0O19198C5O19210C10O19210C17O19389C19O19398C24O19413C28O19438C29O19653C32O19679C36O19686C40O19695C42O19710C47O19720C48O19720C53O19752C58O19752C64O19794C66O19807C68O19803C73O19837C75O19847C77O19843C82O19864C89O19915C100O19915C108O19951C112O19864C117O19990C120O20008C124O20028C126O20034C131O20052C138O20063C144O20067C149O20089C156O20121C159O19728C164O19661C167O20208C175O20208C180O20257C182O20270",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:640:37",
    "type": "JS",
    "kind": "Baseline",
    "func": 168,
    "tm": 109227,
    "source": {
      "script": 106,
      "start": 19143,
      "end": 20274,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "next node:internal/per_context/primordials:288:9",
    "type": "JS",
    "kind": "Baseline",
    "func": 150,
    "tm": 109258,
    "source": {
      "script": 6,
      "start": 8207,
      "end": 8252,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36",
    "type": "JS",
    "kind": "Baseline",
    "func": 151,
    "tm": 109282,
    "source": {
      "script": 9,
      "start": 7775,
      "end": 7826,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:192:41",
    "type": "JS",
    "kind": "Baseline",
    "func": 152,
    "tm": 109305,
    "source": {
      "script": 106,
      "start": 5814,
      "end": 5840,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolve node:path:1091:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 15,
    "tm": 109336,
    "source": {
      "script": 41,
      "start": 33781,
      "end": 34691,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1020:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 169,
    "tm": 109406,
    "source": {
      "script": 106,
      "start": 31917,
      "end": 32208,
      "positions": "C0O31926C8O31926C13O31954C15O31961C20O31975C36O31981C41O31975C42O32090C51O32102C60O32118C63O32132C76O32132C93O32187C102O32199C126O32207",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:771:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 170,
    "tm": 109552
  },
  {
    "name": "logger node:internal/util/debuglog:95:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 171,
    "tm": 109661,
    "source": {
      "script": 22,
      "start": 2869,
      "end": 3064,
      "positions": "C0O2869C3O2901C24O2925C30O2942C34O2932C38O2947C39O2962C45O2979C51O2988C55O2969C60O2993C61O3009C65O3016C72O3029C77O3025C83O3016C88O3054",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/per_context/primordials:291:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 172,
    "tm": 109711,
    "source": {
      "script": 6,
      "start": 8273,
      "end": 8302,
      "positions": "C0O8284C2O8296",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 173,
    "tm": 109766,
    "source": {
      "script": 22,
      "start": 2357,
      "end": 2751,
      "positions": "C0O2357C3O2376C6O2376C9O2484C16O2505C22O2492C30O2490C36O2524C42O2560C47O2563C50O2560C54O2588C75O2612C81O2629C85O2619C89O2634C90O2649C96O2666C102O2675C106O2656C111O2680C112O2696C116O2703C123O2716C128O2712C134O2703C139O2741",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 174,
    "tm": 109830,
    "source": {
      "script": 22,
      "start": 2259,
      "end": 2342,
      "positions": "C0O2268C10O2274C14O2272C16O2311C26O2321C33O2319C40O2341",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 175,
    "tm": 109867,
    "source": {
      "script": 22,
      "start": 973,
      "end": 984,
      "positions": "C0O979C1O984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 176,
    "tm": 109924,
    "source": {
      "script": 22,
      "start": 1451,
      "end": 1995,
      "positions": "C0O1451C9O1470C18O1484C23O1511C34O1544C39O1552C43O1544C45O1563C55O1563C59O1595C71O1606C75O1611C83O1934C97O1952C99O1950C103O1970C112O1987C115O1993",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/loader:283:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 177,
    "tm": 109971,
    "source": {
      "script": 106,
      "start": 8043,
      "end": 8068,
      "positions": "C0O8055C2O8061C9O8067",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 178,
    "tm": 110004,
    "source": {
      "script": 22,
      "start": 1419,
      "end": 1427,
      "positions": "C1O1426",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:865:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 179,
    "tm": 110169
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:247:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 180,
    "tm": 110313,
    "source": {
      "script": 9,
      "start": 7502,
      "end": 7598,
      "positions": "C0O7525C5O7538C10O7542C15O7542C21O7555C23O7573C27O7594",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 181,
    "tm": 110401,
    "source": {
      "script": 106,
      "start": 20316,
      "end": 21551,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:438:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 182,
    "tm": 110502,
    "source": {
      "script": 106,
      "start": 12604,
      "end": 12867,
      "positions": "C0O12617C4O12630C5O12643C6O12658C12O12688C16O12697C17O12718C24O12721C29O12744C36O12747C44O12789C47O12804C52O12804C59O12812C62O12817C66O12810C69O12821C72O12842C73O12855C75O12866",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:452:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 183,
    "tm": 110587,
    "source": {
      "script": 106,
      "start": 12885,
      "end": 13718,
      "positions": "C0O12911C4O12928C5O12941C6O12982C9O12982C17O12959C22O12970C27O13020C31O13036C37O13059C38O13072C39O13090C47O13109C48O13122C49O13130C51O13163C55O13155C60O13175C65O13201C70O13247C82O13205C89O13263C94O13281C97O13315C102O13320C107O13281C112O13279C118O13344C119O13357C123O13375C128O13404C133O13433C138O13455C142O13433C149O13497C152O13497C159O13524C168O13404C183O13382C188O13570C200O13591C203O13597C210O13602C215O13636C222O13680C226O13642C231O13636C232O13704C234O13704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:332:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 184,
    "tm": 110668,
    "source": {
      "script": 106,
      "start": 9253,
      "end": 9771,
      "positions": "C0O9296C7O9330C10O9296C16O9342C18O9369C25O9424C28O9386C34O9434C47O9446C54O9502C61O9541C66O9545C70O9506C77O9570C78O9583C79O9602C84O9626C86O9624C90O9602C95O9636C97O9647C104O9668C110O9687C116O9704C117O9731C119O9731C124O9360C127O9756C128O9769",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:301:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 185,
    "tm": 110766,
    "source": {
      "script": 106,
      "start": 8436,
      "end": 9226,
      "positions": "C0O8471C5O8476C13O8476C20O8534C25O8551C30O8551C36O8568C38O8596C40O8612C41O8631C46O8649C51O8649C57O8687C63O8700C72O8726C77O8736C79O8766C84O8783C91O8783C97O8809C98O8822C102O8855C107O8855C112O8893C117O8914C125O8939C133O8967C141O8998C149O9026C160O9042C165O9059C170O9059C176O9088C178O9104C190O9125C195O9132C199O9148C207O9177C213O9188C220O9199C224O9195C227O9158C231O9212C233O9212",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 186,
    "tm": 110876,
    "source": {
      "script": 107,
      "start": 292,
      "end": 954,
      "positions": "C0O307C5O317C10O317C17O338C22O351C27O351C32O365C33O412C40O440C43O440C48O412C53O384C59O395C66O489C73O491C79O499C86O544C92O544C97O525C102O575C106O607C112O643C115O654C127O704C132O738C142O652C148O774C154O821C159O821C164O852C169O861C174O861C180O907C185O913C190O913C196O938C198O952",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 187,
    "tm": 110932,
    "source": {
      "script": 41,
      "start": 38608,
      "end": 38668,
      "positions": "C0O38652C2O38664",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:505:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 188,
    "tm": 130493,
    "source": {
      "script": 106,
      "start": 14670,
      "end": 17283,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isAbsolute node:path:1156:13",
    "type": "JS",
    "kind": "Unopt",
    "func": 189,
    "tm": 130599,
    "source": {
      "script": 41,
      "start": 35447,
      "end": 35593,
      "positions": "C0O35460C8O35460C13O35506C19O35513C26O35531C31O35531C39O35570C41O35566C44O35589",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stat node:internal/modules/cjs/loader:151:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 190,
    "tm": 130798,
    "source": {
      "script": 106,
      "start": 4630,
      "end": 5027,
      "positions": "C0O4645C5O4661C10O4661C17O4691C23O4736C28O4746C33O4746C39O4765C41O4791C43O4805C44O4827C49O4827C54O4859C61O4892C66O4972C71O4982C76O4982C82O5011C84O5025",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:411:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 191,
    "tm": 130913,
    "source": {
      "script": 106,
      "start": 11835,
      "end": 12019,
      "positions": "C0O11870C2O11882C6O11875C11O11918C16O11934C19O11928C23O11918C29O11953C31O11975C33O11991C34O11891C39O11857C42O12004C43O12017",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:395:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 192,
    "tm": 130970,
    "source": {
      "script": 106,
      "start": 11411,
      "end": 11605,
      "positions": "C0O11448C3O11448C8O11469C9O11476C14O11483C15O11490C16O11493C24O11518C26O11532C31O11544C36O11544C41O11565C42O11572C45O11579C49O11603",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:404:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 193,
    "tm": 131052,
    "source": {
      "script": 106,
      "start": 11626,
      "end": 11738,
      "positions": "C0O11644C5O11654C10O11667C17O11687C20O11698C28O11717C35O11654C41O11736",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "realpathSync node:fs:2460:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 194,
    "tm": 131353
  },
  {
    "name": "getOptions node:internal/fs/utils:318:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 195,
    "tm": 137865,
    "source": {
      "script": 84,
      "start": 7278,
      "end": 7884,
      "positions": "C9O7305C16O7323C27O7383C29O7405C30O7413C36O7452C41O7496C43O7520C47O7535C54O7570C60O7609C78O7615C83O7609C84O7702C91O7711C96O7729C99O7752C104O7729C108O7778C114O7806C119O7834C127O7806C132O7867C134O7882",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "assertEncoding node:internal/fs/utils:155:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 196,
    "tm": 140245,
    "source": {
      "script": 84,
      "start": 3587,
      "end": 3764,
      "positions": "C0O3602C6O3619C9O3626C14O3626C21O3669C24O3696C40O3702C45O3696C47O3763",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toPathIfFileURL node:internal/url:1513:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 197,
    "tm": 140395,
    "source": {
      "script": 39,
      "start": 42148,
      "end": 42269,
      "positions": "C0O42168C3O42173C9O42207C11O42228C12O42231C15O42238C19O42267",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isURLInstance node:internal/url:1509:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 198,
    "tm": 143693,
    "source": {
      "script": 39,
      "start": 42025,
      "end": 42122,
      "positions": "C0O42045C3O42066C6O42091C12O42113C16O42120",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:671:38",
    "type": "JS",
    "kind": "Unopt",
    "func": 199,
    "tm": 143812,
    "source": {
      "script": 84,
      "start": 18212,
      "end": 18482,
      "positions": "C14O18245C22O18278C25O18278C31O18304C36O18335C49O18310C54O18304C55O18400C68O18400C74O18437C76O18466C78O18466C80O18481",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:360:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 200,
    "tm": 143877,
    "source": {
      "script": 84,
      "start": 8612,
      "end": 9201,
      "positions": "C16O8676C21O8729C26O8729C31O8823C37O8846C41O8874C45O8891C51O8891C60O8942C64O8963C69O8963C76O9008C77O9015C78O9035C94O9035C100O9149C104O9171C106O9171C107O9188C109O9199",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 201,
    "tm": 143927,
    "source": {
      "script": 17,
      "start": 257,
      "end": 342,
      "positions": "C0O269C5O276C12O323C15O340",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "splitRoot node:fs:2416:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 202,
    "tm": 144196,
    "source": {
      "script": 83,
      "start": 64375,
      "end": 64567,
      "positions": "C0O64400C2O64411C6O64405C11O64432C16O64436C24O64474C26O64470C31O64502C44O64509C49O64541C50O64421C55O64387C58O64552C60O64563",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2449:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 203,
    "tm": 144244,
    "source": {
      "script": 83,
      "start": 65282,
      "end": 65340,
      "positions": "C0O65295C14O65302C19O65336",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:343:32",
    "type": "JS",
    "kind": "Unopt",
    "func": 204,
    "tm": 144337,
    "source": {
      "script": 84,
      "start": 7973,
      "end": 8471,
      "positions": "C0O7991C6O8054C11O8054C16O8076C24O8076C29O8133C31O8133C32O8158C38O8386C43O8413C51O8386C56O8459C60O8449C62O8470",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:213:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 205,
    "tm": 144389,
    "source": {
      "script": 83,
      "start": 5461,
      "end": 5702,
      "positions": "C0O5595C2O5600C6O5607C10O5641C15O5648C20O5664C22O5679C24O5677C30O5687C33O5700",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "encodeRealpathResult node:fs:2425:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 206,
    "tm": 144513,
    "source": {
      "script": 83,
      "start": 64601,
      "end": 64859,
      "positions": "C0O64623C4O64648C10O64668C17O64677C22O64693C24O64707C25O64727C30O64734C35O64734C41O64762C48O64771C53O64791C55O64807C56O64830C61O64847C66O64830C71O64857",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "loadNativeModule node:internal/modules/cjs/helpers:44:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 207,
    "tm": 144584,
    "source": {
      "script": 105,
      "start": 1151,
      "end": 1431,
      "positions": "C0O1187C5O1200C10O1204C15O1204C21O1221C26O1228C35O1258C43O1258C48O1384C53O1384C57O1414C59O1425C61O1430",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:992:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 208,
    "tm": 144674,
    "source": {
      "script": 106,
      "start": 30978,
      "end": 31791,
      "positions": "C0O30993C8O31039C16O30993C21O31047C26O31060C32O31047C36O31071C38O31085C42O31099C45O31119C52O31136C55O31141C60O31141C66O31119C71O31110C75O31182C78O31182C83O31259C91O31263C101O31316C106O31327C112O31341C124O31347C129O31341C130O31387C133O31394C140O31405C144O31416C150O31436C151O31448C155O31477C160O31486C165O31588C170O31623C175O31634C187O31674C192O31681C197O31681C204O31695C206O31693C211O31727C216O31736C221O31736C228O31761C233O31770C238O31770C245O31790",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 209,
    "tm": 144785,
    "source": {
      "script": 106,
      "start": 12147,
      "end": 12576,
      "positions": "C0O12175C5O12180C10O12180C16O12206C18O12230C20O12256C22O12324C36O12277C44O12324C49O12338C51O12357C55O12366C56O12376C61O12383C63O12430C68O12449C74O12488C77O12499C84O12510C89O12530C91O12554C92O12261C95O12561C97O12574",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "basename node:path:1306:11",
    "type": "JS",
    "kind": "Unopt",
    "func": 210,
    "tm": 144897,
    "source": {
      "script": 41,
      "start": 39511,
      "end": 41903,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1135:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 211,
    "tm": 145081,
    "source": {
      "script": 106,
      "start": 35517,
      "end": 37269,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readFileSync node:fs:459:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 212,
    "tm": 145218,
    "source": {
      "script": 83,
      "start": 11628,
      "end": 13005,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isEncoding node:buffer:535:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 213,
    "tm": 145305,
    "source": {
      "script": 24,
      "start": 14914,
      "end": 15046,
      "positions": "C0O14929C6O14977C12O14984C20O15002C23O15002C28O15030C29O15044",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "normalizeEncoding node:internal/util:160:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 214,
    "tm": 145348,
    "source": {
      "script": 15,
      "start": 4199,
      "end": 4304,
      "positions": "C0O4209C7O4232C14O4250C19O4263C21O4277C22O4280C25O4287C29O4302",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "openSync node:fs:585:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 215,
    "tm": 145410,
    "source": {
      "script": 83,
      "start": 14699,
      "end": 15078,
      "positions": "C0O14723C5O14730C11O14776C16O14776C21O14800C37O14807C44O14858C51O14860C58O14885C63O14893C70O14898C73O14909C78O14909C95O14893C101O15031C106O15031C110O15062C112O15076",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:683:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 216,
    "tm": 145458,
    "source": {
      "script": 84,
      "start": 18527,
      "end": 18662,
      "positions": "C14O18582C19O18582C24O18616C29O18616C34O18648C36O18660",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stringToFlags node:internal/fs/utils:558:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 217,
    "tm": 145538,
    "source": {
      "script": 84,
      "start": 15118,
      "end": 16352,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "parseFileMode node:internal/validators:60:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 218,
    "tm": 145656,
    "source": {
      "script": 16,
      "start": 1502,
      "end": 1806,
      "positions": "C0O1525C11O1542C17O1579C24O1603C27O1583C34O1638C41O1683C52O1644C57O1638C58O1704C66O1712C73O1745C89O1745C94O1791C96O1804",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:85:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 219,
    "tm": 145718,
    "source": {
      "script": 16,
      "start": 2278,
      "end": 2853,
      "positions": "C36O2419C42O2458C58O2464C63O2458C64O2523C67O2528C73O2552C78O2557C84O2591C100O2597C105O2591C106O2660C116O2699C129O2712C142O2666C147O2660C148O2737C150O2747C157O2762C162O2777C172O2816C185O2829C198O2783C203O2777C205O2852",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInt32 node:internal/validators:37:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 220,
    "tm": 145764,
    "source": {
      "script": 16,
      "start": 749,
      "end": 792,
      "positions": "C0O761C2O785C5O774C8O790",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryStatSync node:fs:413:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 221,
    "tm": 145866,
    "source": {
      "script": 83,
      "start": 10603,
      "end": 10813,
      "positions": "C0O10634C2O10654C7O10662C22O10662C28O10706C36O10730C38O10746C43O10749C48O10749C53O10768C58O10774C62O10768C63O10798C65O10811",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryCreateBuffer node:fs:423:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 222,
    "tm": 145937,
    "source": {
      "script": 83,
      "start": 10839,
      "end": 11126,
      "positions": "C0O10876C2O10888C7O10908C9O10919C11O10917C16O10941C23O10947C28O10941C29O10990C34O11006C39O11006C45O11029C57O11035C58O11062C65O11076C67O11086C72O11089C77O11089C93O11110C95O11124",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocUnsafe node:buffer:378:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 223,
    "tm": 145982,
    "source": {
      "script": 24,
      "start": 11011,
      "end": 11066,
      "positions": "C0O11022C5O11022C9O11042C12O11049C16O11064",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:buffer:354:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 224,
    "tm": 146021,
    "source": {
      "script": 24,
      "start": 10309,
      "end": 10464,
      "positions": "C0O10323C8O10323C13O10355C14O10366C21O10382C23O10379C28O10401C33O10433C46O10407C51O10401C53O10463",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateNumber node:internal/validators:124:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 225,
    "tm": 146079,
    "source": {
      "script": 16,
      "start": 3562,
      "end": 4007,
      "positions": "C19O3602C25O3637C41O3643C46O3637C47O3695C54O3721C66O3753C83O3802C86O3802C92O3829C110O3898C136O3930C151O3974C169O3835C174O3829C176O4006",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "allocate node:buffer:403:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 226,
    "tm": 146137,
    "source": {
      "script": 24,
      "start": 11713,
      "end": 12028,
      "positions": "C0O11724C1O11733C6O11745C11O11752C16O11769C17O11776C20O11795C24O11804C27O11785C32O11818C34O11830C39O11841C41O11839C44O11827C49O11860C52O11860C55O11888C62O11903C67O11914C75O11888C81O11937C88O11951C94O11948C100O11961C103O11961C106O11978C108O11987C109O11994C114O12001C118O12026",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "tryReadSync node:fs:438:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 227,
    "tm": 146201,
    "source": {
      "script": 83,
      "start": 11148,
      "end": 11383,
      "positions": "C0O11197C2O11209C7O11232C12O11247C29O11247C35O11283C47O11289C48O11316C55O11330C57O11340C62O11343C67O11343C83O11364C85O11381",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "readSync node:fs:699:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 228,
    "tm": 146342,
    "source": {
      "script": 83,
      "start": 17764,
      "end": 18748,
      "positions": "C0O17764C2O17807C7O17812C13O17835C18O17835C22O17876C29O17883C34O17958C40O17968C43O17996C55O18014C61O18030C68O18041C73O18057C82O18099C87O18125C92O18152C105O18152C110O18197C117O18213C118O18224C123O18237C124O18246C125O18265C131O18276C136O18289C152O18295C157O18289C158O18417C163O18465C174O18417C179O18481C184O18507C188O18525C196O18525C201O18580C203O18601C208O18609C233O18609C239O18701C244O18701C248O18732C250O18746",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:689:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 229,
    "tm": 146422,
    "source": {
      "script": 84,
      "start": 18705,
      "end": 18826,
      "positions": "C14O18734C22O18738C29O18762C30O18771C31O18779C44O18779C49O18814C51O18824",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:200:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 230,
    "tm": 146481,
    "source": {
      "script": 16,
      "start": 6028,
      "end": 6258,
      "positions": "C14O6061C19O6066C25O6099C30O6130C43O6105C48O6099C50O6257",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:74:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 231,
    "tm": 146533,
    "source": {
      "script": 16,
      "start": 1851,
      "end": 2232,
      "positions": "C12O1871C25O1901C32O1934C38O1971C54O1977C59O1971C60O2030C65O2035C71O2065C87O2071C92O2065C93O2124C95O2134C102O2149C107O2162C117O2201C130O2214C143O2168C148O2162C150O2231",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:639:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 232,
    "tm": 146598,
    "source": {
      "script": 84,
      "start": 17329,
      "end": 17708,
      "positions": "C0O17369C1O17380C6O17393C22O17399C27O17393C28O17457C29O17468C34O17481C50O17487C55O17481C56O17545C58O17556C64O17565C69O17589C82O17678C95O17595C100O17589C102O17707",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/fs/utils:904:42",
    "type": "JS",
    "kind": "Unopt",
    "func": 233,
    "tm": 146667,
    "source": {
      "script": 84,
      "start": 24549,
      "end": 25107,
      "positions": "C0O24573C6O24613C14O24613C21O24661C27O24701C32O24724C35O24719C37O24716C47O24750C53O24757C56O24744C61O24772C77O24855C80O24850C98O24875C104O24882C117O24778C122O24772C125O24955C143O24961C148O24955C150O25106",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "closeSync node:fs:535:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 234,
    "tm": 146999,
    "source": {
      "script": 83,
      "start": 13568,
      "end": 13690,
      "positions": "C0O13577C5O13582C11O13617C13O13623C18O13631C31O13631C36O13660C41O13660C46O13689",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toString node:buffer:790:46",
    "type": "JS",
    "kind": "Unopt",
    "func": 235,
    "tm": 147091,
    "source": {
      "script": 24,
      "start": 23442,
      "end": 24004,
      "positions": "C0O23442C2O23483C8O23490C13O23515C20O23533C25O23515C31O23541C32O23566C37O23577C38O23587C43O23597C48O23615C50O23625C55O23637C57O23647C58O23659C65O23674C71O23703C76O23714C83O23736C90O23749C92O23757C97O23771C99O23781C100O23785C104O23829C109O23829C115O23851C116O23867C119O23867C124O23895C126O23922C133O23928C138O23922C139O23978C156O23978C161O24002",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getEncodingOps node:buffer:684:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 236,
    "tm": 147197
  },
  {
    "name": "slice node:buffer:599:12",
    "type": "JS",
    "kind": "Unopt",
    "func": 237,
    "tm": 147296,
    "source": {
      "script": 24,
      "start": 16742,
      "end": 16788,
      "positions": "C0O16767C5O16767C11O16788",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1080:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 238,
    "tm": 147625,
    "source": {
      "script": 106,
      "start": 33609,
      "end": 35450,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 239,
    "tm": 147782,
    "source": {
      "script": 103,
      "start": 2489,
      "end": 3717,
      "positions": "C0O2577C3O2577C7O2603C10O2617C15O2621C23O2641C25O2661C26O2668C30O2681C35O2692C44O2690C54O2825C64O2825C68O2841C69O2848C70O2869C80O2869C86O2972C88O3002C91O3030C96O3037C101O3002C107O3072C112O3092C117O3099C122O3121C126O3152C131O3170C136O3174C143O3203C150O3234C160O3264C166O3278C170O3170C178O3303C182O3334C187O3358C192O3362C200O3395C210O3425C216O3439C220O3358C228O3593C233O3611C238O3615C246O3648C256O3678C262O3692C266O3611C273O3716",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 240,
    "tm": 147849,
    "source": {
      "script": 103,
      "start": 1668,
      "end": 1813,
      "positions": "C0O1675C6O1718C11O1739C17O1739C22O1718C26O1786C30O1811",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 241,
    "tm": 147904,
    "source": {
      "script": 103,
      "start": 1844,
      "end": 2459,
      "positions": "C0O1854C8O1854C13O1959C19O1959C24O1898C29O1924C34O1988C38O2017C42O2072C48O2072C53O2046C58O2128C64O2186C70O2345C76O2345C81O2318C86O2377C90O2433C92O2451C99O2458",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateBoolean node:internal/validators:148:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 242,
    "tm": 147951,
    "source": {
      "script": 16,
      "start": 4408,
      "end": 4519,
      "positions": "C0O4426C6O4462C22O4468C27O4462C29O4518",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1040:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 243,
    "tm": 148036,
    "source": {
      "script": 106,
      "start": 32405,
      "end": 33401,
      "positions": "C0O32405C9O32448C17O32483C22O32490C27O32490C33O32509C40O32519C45O32536C52O32553C56O32642C64O32519C70O32865C74O32882C81O32892C86O32908C98O33023C102O33039C113O32892C118O33276C130O33299C135O33311C142O33322C147O33351C157O33351C162O33385C164O33385",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileFunction node:vm:316:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 244,
    "tm": 148195,
    "source": {
      "script": 92,
      "start": 9645,
      "end": 11910,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/validators:177:39",
    "type": "JS",
    "kind": "Unopt",
    "func": 245,
    "tm": 149314,
    "source": {
      "script": 16,
      "start": 5332,
      "end": 5610,
      "positions": "C16O5368C21O5373C27O5400C43O5406C48O5400C49O5470C56O5477C61O5511C66O5534C71O5551C87O5557C92O5551C94O5609",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:vm:321:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 246,
    "tm": 149370,
    "source": {
      "script": 92,
      "start": 9845,
      "end": 9896,
      "positions": "C0O9859C10O9891C21O9859C26O9896",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 247,
    "tm": 149442,
    "source": {
      "script": 130,
      "start": 0,
      "end": 119,
      "positions": "C0O0C4O119",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 248,
    "tm": 149487,
    "source": {
      "script": 130,
      "start": 0,
      "end": 119,
      "positions": "C0O16C3O16C8O44C21O44C28O118",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:436:37",
    "type": "JS",
    "kind": "Unopt",
    "func": 249,
    "tm": 149586,
    "source": {
      "script": 128,
      "start": 11767,
      "end": 12210,
      "positions": "C0O11767C13O11836C18O12208",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:58:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 250,
    "tm": 149673,
    "source": {
      "script": 105,
      "start": 1708,
      "end": 3678,
      "positions": "C0O1708C22O1744C25O1748C29O1744C31O1768C33O1779C53O1811C58O1815C69O1831C73O1811C75O1858C81O1858C83O1885C89O1894C95O1922C104O3082C109O3313C111O3329C115O3469C117O3483C121O3495C126O3518C130O3508C134O3583C137O3611C141O3602C145O3627C148O3650C152O3641C156O3661C158O3676",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "require node:internal/modules/cjs/helpers:101:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 251,
    "tm": 149741,
    "source": {
      "script": 105,
      "start": 3108,
      "end": 3154,
      "positions": "C0O3123C3O3134C8O3134C13O3148",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/modules/cjs/helpers:29:66",
    "type": "JS",
    "kind": "Unopt",
    "func": 252,
    "tm": 149790,
    "source": {
      "script": 105,
      "start": 810,
      "end": 835,
      "positions": "C0O822C2O828C9O834",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:263:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 253,
    "tm": 149847,
    "source": {
      "script": 9,
      "start": 8006,
      "end": 8678,
      "positions": "C0O8025C6O8169C16O8212C33O8175C38O8169C39O8249C44O8249C48O8291C54O8480C61O8511C69O8480C75O8535C80O8553C90O8569C93O8585C98O8569C102O8551C106O8610C111O8610C115O8635C120O8635C124O8666C128O8674",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 254,
    "tm": 151011,
    "source": {
      "script": 131,
      "start": 0,
      "end": 1291,
      "positions": "C0O0C4O1291",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:cluster:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 255,
    "tm": 151251,
    "source": {
      "script": 131,
      "start": 0,
      "end": 1291,
      "positions": "C0O1172C3O1200C7O1189C19O1227C24O1272C29O1244C33O1242C38O1290",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 256,
    "tm": 152342,
    "source": {
      "script": 132,
      "start": 0,
      "end": 10812,
      "positions": "C0O0C4O10812",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 257,
    "tm": 153220
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 258,
    "tm": 153893,
    "source": {
      "script": 133,
      "start": 0,
      "end": 24984,
      "positions": "C0O0C4O24984",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 259,
    "tm": 155873,
    "source": {
      "script": 133,
      "start": 0,
      "end": 24984,
      "positions": "C0O0C238O1159C244O1175C250O1199C256O1225C262O1247C268O1276C274O1298C280O1321C286O1343C292O1367C298O1392C304O1411C310O1427C315O1451C321O1484C327O1507C333O1518C339O1542C345O1700C348O1700C353O1598C359O1622C365O1647C371O1669C377O1685C382O1756C385O1756C390O1734C396O1800C399O1800C404O1833C417O1834C423O1800C425O1917C428O1917C433O1906C439O1979C442O1979C447O1944C453O1961C459O2077C462O2077C467O2020C473O2041C478O2055C484O2115C490O2140C496O2174C502O2211C508O2235C514O2306C517O2306C522O2277C528O2291C534O2354C537O2354C542O2333C548O2485C551O2485C556O2394C562O2405C568O2428C574O2447C580O2465C586O2539C589O2539C593O2539C595O2656C598O2584C604O2601C610O2617C616O2633C622O2691C628O2691C630O6623C635O7027C645O7086C656O6990C661O13123C671O13182C682O13082C687O24855C697O24876C703O24890C709O24906C715O24914C721O24926C727O24942C733O24954C739O24962C745O24971C751O24870C756O24983",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 260,
    "tm": 156989,
    "source": {
      "script": 134,
      "start": 0,
      "end": 31545,
      "positions": "C0O0C4O31545",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/child_process:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 261,
    "tm": 159393
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:525:3",
    "type": "JS",
    "kind": "Unopt",
    "func": 262,
    "tm": 159498,
    "source": {
      "script": 134,
      "start": 13707,
      "end": 13764,
      "positions": "C3O13718C16O13734C26O13759C34O13764",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 263,
    "tm": 160671,
    "source": {
      "script": 135,
      "start": 0,
      "end": 27523,
      "positions": "C0O0C4O27523",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 264,
    "tm": 163223
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 265,
    "tm": 163627,
    "source": {
      "script": 136,
      "start": 0,
      "end": 1849,
      "positions": "C0O0C4O1849",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/dgram:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 266,
    "tm": 163810,
    "source": {
      "script": 136,
      "start": 0,
      "end": 1849,
      "positions": "C0O0C56O25C62O50C67O94C73O94C78O84C83O138C86O138C91O130C97O195C100O195C105O175C111O263C117O263C122O230C128O241C134O317C137O317C142O303C148O350C154O403C157O403C162O431C163O431C165O1776C172O1797C178O1813C184O1836C190O1791C195O1848",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 155,
    "tm": 164069,
    "source": {
      "script": 15,
      "start": 2401,
      "end": 3577,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "type": "JS",
    "kind": "Baseline",
    "func": 187,
    "tm": 164099,
    "source": {
      "script": 41,
      "start": 38608,
      "end": 38668,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "validateString node:internal/validators:119:24",
    "type": "JS",
    "kind": "Baseline",
    "func": 16,
    "tm": 164123,
    "source": {
      "script": 16,
      "start": 3428,
      "end": 3537,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "dirname node:path:1275:10",
    "type": "JS",
    "kind": "Baseline",
    "func": 166,
    "tm": 164156,
    "source": {
      "script": 41,
      "start": 38741,
      "end": 39410,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isFileType node:fs:213:20",
    "type": "JS",
    "kind": "Baseline",
    "func": 205,
    "tm": 164180,
    "source": {
      "script": 83,
      "start": 5461,
      "end": 5702,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 267,
    "tm": 164368,
    "source": {
      "script": 137,
      "start": 0,
      "end": 2705,
      "positions": "C0O0C4O2705",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/socket_list:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 268,
    "tm": 164612,
    "source": {
      "script": 137,
      "start": 0,
      "end": 2705,
      "positions": "C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C73O1525C101O2649C108O2668C114O2684C120O2664C125O2704",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "customPromiseExecFunction node:child_process:231:35",
    "type": "JS",
    "kind": "Unopt",
    "func": 269,
    "tm": 164834,
    "source": {
      "script": 133,
      "start": 6623,
      "end": 6987,
      "positions": "C0O6623C9O6637C13O6985",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 270,
    "tm": 165021,
    "source": {
      "script": 138,
      "start": 0,
      "end": 3381,
      "positions": "C0O0C4O3381",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 271,
    "tm": 165312,
    "source": {
      "script": 138,
      "start": 0,
      "end": 3381,
      "positions": "C0O0C49O25C55O41C61O52C67O68C73O110C76O110C80O110C82O150C85O150C89O150C91O189C94O189C99O174C105O272C108O272C113O232C119O240C125O246C131O255C137O261C143O326C146O326C151O312C157O356C159O371C163O1351C172O1365C176O2016C185O2033C189O2414C198O2435C202O2790C211O2808C216O3380",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 272,
    "tm": 165444,
    "source": {
      "script": 139,
      "start": 0,
      "end": 1053,
      "positions": "C0O0C4O1053",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 273,
    "tm": 165565,
    "source": {
      "script": 139,
      "start": 0,
      "end": 1053,
      "positions": "C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O134C60O134C65O134C67O159C68O159C71O1052",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 274,
    "tm": 165690,
    "source": {
      "script": 140,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C4O1102",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 275,
    "tm": 165803,
    "source": {
      "script": 140,
      "start": 0,
      "end": 1102,
      "positions": "C0O0C22O22C28O62C31O62C35O62C37O104C40O104C44O104C46O143C49O143C53O143C55O160C57O175C61O685C70O699C74O861C83O878C88O1101",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 276,
    "tm": 165942,
    "source": {
      "script": 141,
      "start": 0,
      "end": 1377,
      "positions": "C0O0C4O1377",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 277,
    "tm": 166166,
    "source": {
      "script": 141,
      "start": 0,
      "end": 1377,
      "positions": "C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O874C63O902C71O926C76O874C81O938C87O938C92O983C95O990C104O1005C108O1071C111O1078C120O1093C124O1179C127O1186C136O1203C140O1297C143O1304C152O1326C157O1376",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitter node:events:212:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 278,
    "tm": 166308,
    "source": {
      "script": 23,
      "start": 6313,
      "end": 6361,
      "positions": "C0O6324C3O6337C8O6342C13O6342C20O6360",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "EventEmitter.init node:events:337:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 279,
    "tm": 166373,
    "source": {
      "script": 23,
      "start": 9844,
      "end": 10433,
      "positions": "C0O9865C6O9901C13O9913C16O9913C21O9939C25O9909C30O9955C32O9970C37O9970C41O9968C45O9994C46O10012C50O10050C60O10043C64O10082C71O10090C80O10117C85O10138C93O10117C98O10191C100O10196C105O10208C108O10221C113O10208C117O10206C123O10377C125O10382C131O10407C138O10417C140O10416C143O10392C148O10432",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:281:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 280,
    "tm": 166537,
    "source": {
      "script": 9,
      "start": 8694,
      "end": 9323,
      "positions": "C0O8694C8O8712C14O8732C18O8739C19O8767C29O8767C34O8752C39O8815C42O8828C51O8859C53O8859C55O8889C62O8914C67O8889C72O8931C82O8931C87O8979C89O9031C102O8993C107O8991C111O9237C116O9244C121O9244C125O9268C130O9275C140O9275C146O9312C150O9319",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/bootstrap/loaders:290:15",
    "type": "JS",
    "kind": "Unopt",
    "func": 281,
    "tm": 166635,
    "source": {
      "script": 9,
      "start": 9058,
      "end": 9163,
      "positions": "C0O9071C5O9084C10O9084C14O9112C24O9133C27O9146C32O9112C39O9162",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:304:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 282,
    "tm": 166693,
    "source": {
      "script": 9,
      "start": 9630,
      "end": 9963,
      "positions": "C0O9658C5O9683C11O9712C13O9725C17O9717C22O9767C24O9772C28O9785C30O9800C35O9815C37O9838C42O9845C51O9897C54O9909C59O9935C67O9897C73O9845C79O9734C84O9699C88O9962",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:187:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 283,
    "tm": 166744,
    "source": {
      "script": 9,
      "start": 5646,
      "end": 5800,
      "positions": "C0O5682C5O5689C14O5743C26O5743C34O5798",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "(?:^|\\/)\\.?\\.$",
    "timestamp": 166923,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 284,
    "tm": 167513,
    "source": {
      "script": 142,
      "start": 0,
      "end": 494,
      "positions": "C0O0C4O494",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 285,
    "tm": 167593,
    "source": {
      "script": 142,
      "start": 0,
      "end": 494,
      "positions": "C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get SocketAddress node:net:1924:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 286,
    "tm": 167698,
    "source": {
      "script": 116,
      "start": 51684,
      "end": 51789,
      "positions": "C0O51693C14O51711C19O51744C26O51707C32O51764C36O51785",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 287,
    "tm": 168231,
    "source": {
      "script": 143,
      "start": 0,
      "end": 686,
      "positions": "C0O0C4O686",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:worker_threads:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 288,
    "tm": 168339,
    "source": {
      "script": 143,
      "start": 0,
      "end": 686,
      "positions": "C0O139C3O139C8O25C13O41C18O54C23O72C28O94C33O116C38O128C43O285C46O285C51O178C56O193C61O211C66O239C71O263C76O353C79O353C84O327C89O382C96O403C102O419C108O434C114O452C120O476C126O504C132O528C138O546C144O558C150O571C156O621C162O641C168O663C174O397C179O685",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 289,
    "tm": 169389,
    "source": {
      "script": 144,
      "start": 0,
      "end": 15418,
      "positions": "C0O0C4O15418",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/worker:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 290,
    "tm": 170586
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 291,
    "tm": 171376,
    "source": {
      "script": 145,
      "start": 0,
      "end": 4224,
      "positions": "C0O0C4O4224",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 292,
    "tm": 171733,
    "source": {
      "script": 145,
      "start": 0,
      "end": 4224,
      "positions": "C0O0C100O30C106O30C111O47C115O30C117O66C123O91C128O100C133O113C139O138C145O154C151O170C157O194C163O228C169O257C175O281C180O295C186O322C191O336C196O354C201O365C207O386C212O401C217O414C222O467C223O467C225O496C227O496C229O523C231O523C233O542C240O546C246O553C252O564C258O576C264O586C270O599C276O615C282O542C284O658C287O670C294O658C299O658C301O2111C302O2111C304O2308C305O2308C307O3309C308O3309C310O4169C317O4188C323O4204C329O4184C334O4223",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 63,
    "tm": 171892,
    "source": {
      "script": 22,
      "start": 2232,
      "end": 3240,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:187:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 283,
    "tm": 171926,
    "source": {
      "script": 9,
      "start": 5646,
      "end": 5800,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:304:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 282,
    "tm": 171954,
    "source": {
      "script": 9,
      "start": 9630,
      "end": 9963,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:379:16",
    "type": "JS",
    "kind": "Baseline",
    "func": 69,
    "tm": 171978,
    "source": {
      "script": 6,
      "start": 10928,
      "end": 10945,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "nextPart node:fs:2449:31",
    "type": "JS",
    "kind": "Baseline",
    "func": 203,
    "tm": 172001,
    "source": {
      "script": 83,
      "start": 65282,
      "end": 65340,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:vm:321:27",
    "type": "JS",
    "kind": "Baseline",
    "func": 246,
    "tm": 172022,
    "source": {
      "script": 92,
      "start": 9845,
      "end": 9896,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isUint32 node:internal/validators:41:18",
    "type": "JS",
    "kind": "Baseline",
    "func": 118,
    "tm": 172045,
    "source": {
      "script": 16,
      "start": 811,
      "end": 856,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "type": "JS",
    "kind": "Baseline",
    "func": 178,
    "tm": 172065,
    "source": {
      "script": 22,
      "start": 1419,
      "end": 1427,
      "positions": "",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Socket node:net:294:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 293,
    "tm": 172351
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 294,
    "tm": 172528,
    "source": {
      "script": 57,
      "start": 2011,
      "end": 2420,
      "positions": "C0O2025C2O2036C7O2060C12O2067C17O2087C18O2091C23O2100C28O2100C34O2123C39O2132C44O2132C50O2155C51O2174C55O2185C59O2216C65O2225C70O2242C71O2256C75O2282C81O2291C86O2308C87O2322C91O2348C97O2362C102O2381C103O2400C108O2419",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable node:internal/streams/readable:181:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 295,
    "tm": 173046,
    "source": {
      "script": 58,
      "start": 6246,
      "end": 7126,
      "positions": "C0O6246C9O6260C16O6271C21O6297C28O6304C33O6326C34O6481C41O6497C44O6504C48O6486C52O6515C71O6537C76O6535C80O6584C84O6622C92O6649C95O6670C99O6660C103O6700C111O6730C114O6754C118O6744C122O6787C130O6819C133O6845C137O6835C141O6872C149O6883C151O6899C158O6932C166O6899C171O6954C178O6961C186O6961C192O6985C199O6997C212O6997C219O7125",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 296,
    "tm": 176436,
    "source": {
      "script": 59,
      "start": 127,
      "end": 160,
      "positions": "C0O138C5O141C10O141C17O159",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "ReadableState node:internal/streams/readable:78:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 297,
    "tm": 176834,
    "source": {
      "script": 58,
      "start": 2519,
      "end": 6226,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 298,
    "tm": 176953,
    "source": {
      "script": 62,
      "start": 424,
      "end": 832,
      "positions": "C0O478C12O478C18O529C21O552C26O557C33O585C38O611C47O633C56O678C69O684C74O678C75O732C80O739C84O754C85O781C88O818C93O788C97O830",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 299,
    "tm": 177073,
    "source": {
      "script": 62,
      "start": 168,
      "end": 309,
      "positions": "C0O218C7O250C15O270C19O288C25O307",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 300,
    "tm": 177109,
    "source": {
      "script": 62,
      "start": 343,
      "end": 397,
      "positions": "C0O360C12O395",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 301,
    "tm": 177159,
    "source": {
      "script": 61,
      "start": 265,
      "end": 338,
      "positions": "C0O274C1O284C5O296C6O306C10O318C11O330C16O337",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "construct node:internal/streams/destroy:225:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 302,
    "tm": 177645,
    "source": {
      "script": 56,
      "start": 4626,
      "end": 5014,
      "positions": "C0O4661C8O4694C9O4701C10O4726C15O4761C20O4780C24O4793C25O4807C29O4822C33O4835C34O4849C38O4872C45O4877C48O4872C54O4908C61O4922C64O4908C72O4934C77O4959C78O4966C79O4974C82O4982C90O4982C97O5013",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Writable node:internal/streams/writable:220:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 303,
    "tm": 178280,
    "source": {
      "script": 65,
      "start": 7428,
      "end": 8948,
      "positions": "C0O7428C9O8002C16O8019C19O8026C23O8008C27O8038C33O8056C44O8056C51O8112C58O8119C63O8141C64O8145C83O8167C88O8165C92O8214C96O8252C104O8280C107O8302C111O8292C115O8333C123O8362C126O8385C130O8375C134O8417C142O8447C145O8471C149O8461C153O8504C161O8532C164O8554C168O8544C172O8585C180O8617C183O8643C187O8633C191O8670C197O8684C204O8717C212O8684C217O8739C224O8746C232O8746C238O8770C245O8782C258O8782C265O8947",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 304,
    "tm": 180309,
    "source": {
      "script": 65,
      "start": 2482,
      "end": 6983,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 305,
    "tm": 180423,
    "source": {
      "script": 65,
      "start": 7005,
      "end": 7117,
      "positions": "C0O7017C2O7032C6O7040C7O7060C11O7067C12O7084C16O7094C17O7108C22O7116",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:internal/streams/readable:1175:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 306,
    "tm": 180494,
    "source": {
      "script": 58,
      "start": 35825,
      "end": 35952,
      "positions": "C0O35875C6O35906C13O35934C15O35930C20O35951",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "createHandle node:net:146:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 307,
    "tm": 180556,
    "source": {
      "script": 116,
      "start": 3816,
      "end": 4176,
      "positions": "C0O3836C13O3836C18O3879C23O3879C28O3902C30O3911C35O3929C42O3952C46O3964C49O3978C57O3987C60O4001C67O3936C72O4014C73O4022C75O4031C80O4048C87O4070C91O4082C94O4095C102O4104C105O4117C112O4055C117O4130C118O4138C125O4144C130O4138",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "set node:net:1848:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 308,
    "tm": 180697,
    "source": {
      "script": 116,
      "start": 49778,
      "end": 49811,
      "positions": "C0O49784C2O49796C7O49805C13O49809",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:net:1847:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 309,
    "tm": 180737,
    "source": {
      "script": 116,
      "start": 49743,
      "end": 49771,
      "positions": "C0O49748C2O49760C4O49759C7O49769",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "Readable.on node:internal/streams/readable:874:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 310,
    "tm": 180874,
    "source": {
      "script": 58,
      "start": 27740,
      "end": 28639,
      "positions": "C0O27765C5O27772C10O27782C15O27785C29O27785C35O27826C40O27845C42O27852C47O28034C55O28034C62O28060C65O28027C69O28153C75O28161C80O28183C85O28183C91O28202C93O28209C98O28242C104O28263C110O28290C112O28335C118O28314C122O28349C123O28363C127O28378C128O28400C132O28415C140O28442C145O28456C150O28415C155O28482C161O28500C164O28500C170O28544C176O28563C179O28571C187O28571C193O28626C195O28637",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initSocketHandle node:net:263:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 311,
    "tm": 180962,
    "source": {
      "script": 116,
      "start": 6540,
      "end": 7118,
      "positions": "C0O6556C5O6556C9O6572C10O6587C14O6673C20O6693C27O6701C32O6715C36O6732C43O6749C45O6747C49O6767C51O6772C57O6810C62O6791C66O6789C70O6839C72O6844C74O6843C78O6858C80O6894C82O6899C84O6898C88O6918C90O6959C94O6977C99O6982C105O7015C106O7022C107O7031C109O7036C114O7045C118O7075C123O7083C128O7083C134O7117",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "undestroy node:internal/streams/destroy:160:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 312,
    "tm": 181031,
    "source": {
      "script": 56,
      "start": 3064,
      "end": 3661,
      "positions": "C0O3086C5O3119C10O3138C14O3151C15O3165C19O3177C20O3186C24O3199C25O3214C29O3227C30O3239C34O3252C35O3262C39O3274C40O3289C44O3302C45O3312C49O3325C50O3333C54O3346C55O3359C59O3375C63O3388C64O3402C68O3414C69O3426C73O3439C74O3448C78O3461C79O3476C83O3489C84O3499C88O3511C89O3526C93O3539C94O3547C98O3560C99O3569C103O3582C104O3596C108O3609C109O3623C113O3636C114O3647C119O3660",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getNewAsyncId node:net:165:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 313,
    "tm": 181113,
    "source": {
      "script": 116,
      "start": 4201,
      "end": 4317,
      "positions": "C0O4214C4O4247C14O4280C17O4280C22O4302C27O4302C31O4315",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/bootstrap/pre_execution:413:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 314,
    "tm": 181167,
    "source": {
      "script": 100,
      "start": 13112,
      "end": 13145,
      "positions": "C0O13123C4O13139",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 315,
    "tm": 181219,
    "source": {
      "script": 142,
      "start": 392,
      "end": 404,
      "positions": "C0O398C4O404",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 316,
    "tm": 181878,
    "source": {
      "script": 146,
      "start": 0,
      "end": 85,
      "positions": "C0O0C4O85",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 317,
    "tm": 181929,
    "source": {
      "script": 146,
      "start": 0,
      "end": 85,
      "positions": "C0O14C4O22C12O35C16O43C21O22C27O49C31O57C39O71C43O79C48O57C55O84",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 318,
    "tm": 182065,
    "source": {
      "script": 100,
      "start": 18064,
      "end": 18286,
      "positions": "C0O18071C8O18075C14O18120C17O18128C28O18128C34O18240C40O18240C45O18277C49O18285",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "type": "JS",
    "kind": "Unopt",
    "func": 319,
    "tm": 182162,
    "source": {
      "script": 129,
      "start": 2325,
      "end": 2630,
      "positions": "C7O2341C14O2345C22O2375C25O2375C30O2421C33O2421C38O2457C40O2481C45O2492C50O2481C56O2593C61O2600C73O2600C79O2629",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 320,
    "tm": 182222,
    "source": {
      "script": 129,
      "start": 398,
      "end": 812,
      "positions": "C0O570C5O577C12O587C15O592C20O592C30O577C36O622C38O641C39O648C40O681C48O681C53O727C55O758C60O769C65O794C67O810",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:30:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 321,
    "tm": 182376,
    "source": {
      "script": 129,
      "start": 841,
      "end": 1564,
      "positions": "C0O1026C8O1026C13O1085C19O1092C24O1101C25O1113C26O1156C34O1156C39O1213C41O1245C46O1261C47O1273C48O1321C54O1337C60O1337C67O1384C68O1396C69O1399C75O1416C81O1416C88O1463C89O1476C90O1491C95O1491C100O1521C102O1539C107O1544C114O1549C117O1562",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/process/execution:137:10",
    "type": "JS",
    "kind": "Unopt",
    "func": 322,
    "tm": 182881,
    "source": {
      "script": 81,
      "start": 4337,
      "end": 6598,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "clearDefaultTriggerAsyncId node:internal/async_hooks:441:36",
    "type": "JS",
    "kind": "Unopt",
    "func": 323,
    "tm": 183543,
    "source": {
      "script": 13,
      "start": 15227,
      "end": 15281,
      "positions": "C0O15234C7O15250C12O15274C17O15280",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "beforeInspector node:internal/errors:751:18",
    "type": "JS",
    "kind": "Unopt",
    "func": 324,
    "tm": 186012,
    "source": {
      "script": 11,
      "start": 22467,
      "end": 22843,
      "positions": "C0O22481C2O22498C4O22497C11O22565C15O22571C19O22677C21O22697C23O22696C27O22726C31O22689C41O22833C45O22839",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "prepareStackTrace node:internal/errors:90:27",
    "type": "JS",
    "kind": "Unopt",
    "func": 325,
    "tm": 190813,
    "source": {
      "script": 11,
      "start": 2155,
      "end": 3643,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:135:40",
    "type": "JS",
    "kind": "Unopt",
    "func": 326,
    "tm": 190933,
    "source": {
      "script": 11,
      "start": 3685,
      "end": 4392,
      "positions": "C0O3913C7O3918C18O3978C23O3984C28O3984C34O4016C35O4239C40O4267C48O4307C53O4331C58O4331C64O4363C65O4371C69O4390",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "afterInspector node:internal/errors:765:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 327,
    "tm": 191570,
    "source": {
      "script": 11,
      "start": 22861,
      "end": 24249,
      "positions": "C0O22903C5O22930C7O23412C10O23424C17O23433C22O23467C28O23467C33O23488C38O23489C43O23527C50O23545C55O23570C62O23545C70O23617C73O23527C79O23632C80O23639C86O23643C93O23656C101O23660C106O23679C108O23816C111O23816C115O23730C125O23786C130O23862C140O23896C145O23919C153O23920C161O23939C172O23971C177O23994C182O23995C194O24077C201O24094C207O24147C210O24163C215O24178C223O24147C232O24069C237O24197C240O24218C242O24239",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "lazyInternalUtilInspect node:internal/errors:182:33",
    "type": "JS",
    "kind": "Unopt",
    "func": 328,
    "tm": 191643,
    "source": {
      "script": 11,
      "start": 5189,
      "end": 5285,
      "positions": "C0O5196C14O5220C21O5216C27O5256C31O5283",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 329,
    "tm": 192155,
    "source": {
      "script": 147,
      "start": 0,
      "end": 6482,
      "positions": "C0O0C4O6482",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": " node:internal/tty:1:1",
    "type": "JS",
    "kind": "Unopt",
    "func": 330,
    "tm": 192681,
    "source": {
      "script": 147,
      "start": 0,
      "end": 6482,
      "positions": "C0O0C69O1186C75O1208C81O1231C87O1255C93O1329C99O1329C104O1309C110O1366C111O1366C113O1395C115O1395C117O1416C119O1416C121O1438C123O1438C125O1460C127O1460C129O1877C136O1890C142O1913C148O1937C154O1960C160O1983C166O2005C172O2026C178O2050C184O2074C190O2096C196O2119C202O2140C208O2163C214O2182C220O2287C226O2379C232O1877C234O2420C328O2420C330O2541C331O2541C333O6431C340O6452C346O6469C352O6446C357O6481",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "hasColors node:internal/tty:222:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 331,
    "tm": 192866,
    "source": {
      "script": 147,
      "start": 6174,
      "end": 6429,
      "positions": "C0O6191C18O6300C21O6317C27O6344C41O6344C46O6387C52O6408C56O6405C59O6400C62O6427",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getColorDepth node:internal/tty:106:23",
    "type": "JS",
    "kind": "Unopt",
    "func": 332,
    "tm": 193003
  },
  {
    "name": "get node:internal/util/inspect:356:6",
    "type": "JS",
    "kind": "Unopt",
    "func": 333,
    "tm": 193265,
    "source": {
      "script": 20,
      "start": 10754,
      "end": 10796,
      "positions": "C0O10763C4O10792",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "inspect node:internal/util/inspect:295:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 334,
    "tm": 199714,
    "source": {
      "script": 20,
      "start": 8630,
      "end": 10640,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatValue node:internal/util/inspect:750:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 335,
    "tm": 199923,
    "source": {
      "script": 20,
      "start": 22683,
      "end": 25385,
      "positions": "C0O22771C14O22848C17O22848C23O22883C26O22910C37O22890C42O22931C43O22938C47O22975C58O22975C64O22999C65O23083C68O23211C73O23240C80O23211C86O23254C88O23285C93O23312C98O23345C109O23345C115O23383C116O23402C122O23421C134O23428C139O23466C140O23477C145O23632C151O23673C153O23679C155O23678C159O23705C165O23838C170O23944C176O23965C181O23977C188O23987C193O24133C202O24161C209O24167C213O24220C216O24226C221O24264C223O24253C228O24291C236O24375C254O24291C260O24544C262O24552C267O24575C273O24616C285O24623C290O24659C291O24689C307O24713C312O24724C317O24713C327O24689C333O24743C334O24929C339O24934C344O24934C351O24969C354O24984C360O25016C362O25035C365O25031C370O25029C374O25056C379O25065C384O25065C392O25115C397O25124C402O25124C408O25142C410O25189C415O25198C419O25203C423O25220C428O25229C433O25229C439O25277C449O25299C463O25277C469O25320C470O25328C485O25335C490O25383",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatRaw node:internal/util/inspect:828:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 336,
    "tm": 200372
  },
  {
    "name": "getConstructorName node:internal/util/inspect:572:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 337,
    "tm": 200707,
    "source": {
      "script": 20,
      "start": 17086,
      "end": 18327,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isInstanceof node:internal/util/inspect:564:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 338,
    "tm": 200781,
    "source": {
      "script": 20,
      "start": 16960,
      "end": 17057,
      "positions": "C3O16990C5O17004C8O17021C11O17038C12O17051",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getKeys node:internal/util/inspect:693:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 339,
    "tm": 200856,
    "source": {
      "script": 20,
      "start": 20789,
      "end": 21764,
      "positions": "C0O20789C9O20817C11O20841C21O20841C26O20879C30O20901C40O20908C45O20958C51O20965C56O20978C63O20978C73O21338C83O21345C91O21343C101O21390C112O21397C118O21397C127O21423C134O21428C143O21465C151O21465C156O21390C160O21504C172O21511C179O21567C185O21574C190O21604C195O21668C206O21698C209O21698C215O21668C220O21750C222O21762",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isError node:internal/util:80:17",
    "type": "JS",
    "kind": "Unopt",
    "func": 340,
    "tm": 200932,
    "source": {
      "script": 15,
      "start": 1839,
      "end": 2073,
      "positions": "C0O2025C5O2032C13O2065C15O2054C18O2071",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatError node:internal/util/inspect:1341:21",
    "type": "JS",
    "kind": "Unopt",
    "func": 341,
    "tm": 201071,
    "source": {
      "script": 20,
      "start": 43378,
      "end": 45564,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStackString node:internal/util/inspect:1220:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 342,
    "tm": 201160,
    "source": {
      "script": 20,
      "start": 39614,
      "end": 39701,
      "positions": "C0O39639C8O39647C11O39660C16O39647C24O39669C27O39669C31O39699",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "removeDuplicateErrorKeys node:internal/util/inspect:1277:34",
    "type": "JS",
    "kind": "Unopt",
    "func": 343,
    "tm": 201219,
    "source": {
      "script": 20,
      "start": 41537,
      "end": 41881,
      "positions": "C0O41574C6O41593C12O41600C17O41632C46O41624C74O41624C77O41689C82O41689C88O41782C90O41792C98O41808C105O41820C109O41808C116O41844C124O41844C130O41613C194O41880",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "improveStack node:internal/util/inspect:1244:22",
    "type": "JS",
    "kind": "Unopt",
    "func": 344,
    "tm": 201313,
    "source": {
      "script": 20,
      "start": 40442,
      "end": 41502,
      "positions": "C0O40630C5O40641C9O40681C17O40681C24O40714C29O40714C36O40747C43O40754C50O40770C56O40776C63O40792C69O40798C74O40831C77O40844C81O40898C91O40898C98O40967C108O40967C114O41007C118O41033C126O41066C131O41080C138O41137C150O41137C156O41174C166O41175C173O41193C175O41202C180O41233C185O41233C192O41259C193O41267C198O41286C210O41308C218O41344C222O41370C227O41370C240O41417C252O41439C263O41453C268O41453C279O41487C281O41500",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getPrefix node:internal/util/inspect:678:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 345,
    "tm": 201407,
    "source": {
      "script": 20,
      "start": 20367,
      "end": 20736,
      "positions": "C20O20411C24O20443C26O20451C33O20470C38O20487C43O20498C50O20509C63O20535C73O20543C74O20554C79O20565C86O20576C96O20601C97O20609C99O20617C106O20639C111O20654C117O20678C130O20687C140O20695C141O20702C147O20726C157O20734",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "getStackFrames node:internal/util/inspect:1224:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 346,
    "tm": 201488,
    "source": {
      "script": 20,
      "start": 39726,
      "end": 40419,
      "positions": "C0O39769C8O39769C14O39848C22O39857C25O39869C30O39857C36O39902C39O39921C44O39902C49O39968C57O39968C63O39993C65O40013C70O40060C77O40082C81O40060C87O40086C95O40087C101O40130C104O40130C110O40114C115O40119C120O40181C121O40189C126O40220C128O40224C132O40249C137O40260C148O40323C155O40337C159O40355C167O40355C180O40323C185O40403C187O40417",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "safeGetCWD node:internal/util/inspect:1331:20",
    "type": "JS",
    "kind": "Unopt",
    "func": 347,
    "tm": 201554,
    "source": {
      "script": 20,
      "start": 43225,
      "end": 43356,
      "positions": "C0O43236C5O43266C8O43293C13O43293C21O43283C22O43316C23O43323C24O43330C26O43354",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "exists node:internal/bootstrap/loaders:243:16",
    "type": "JS",
    "kind": "Unopt",
    "func": 348,
    "tm": 201668,
    "source": {
      "script": 9,
      "start": 7424,
      "end": 7471,
      "positions": "C0O7435C5O7455C10O7459C15O7459C20O7467",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "stylizeWithColor node:internal/util/inspect:545:26",
    "type": "JS",
    "kind": "Unopt",
    "func": 349,
    "tm": 201723,
    "source": {
      "script": 20,
      "start": 16522,
      "end": 16763,
      "positions": "C0O16557C3O16565C10O16571C14O16586C16O16631C19O16639C26O16645C30O16658C32O16689C36O16711C52O16718C65O16736C78O16743C79O16750C81O16761",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "get node:internal/util/inspect:421:8",
    "type": "JS",
    "kind": "Unopt",
    "func": 350,
    "tm": 201764,
    "source": {
      "script": 20,
      "start": 12772,
      "end": 12809,
      "positions": "C0O12783C2O12794C5O12803",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$",
    "timestamp": 201845,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "getEmptyFormatArray node:internal/util/inspect:560:29",
    "type": "JS",
    "kind": "Unopt",
    "func": 351,
    "tm": 201896,
    "source": {
      "script": 20,
      "start": 16918,
      "end": 16937,
      "positions": "C0O16925C2O16935",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatProperty node:internal/util/inspect:1883:24",
    "type": "JS",
    "kind": "Unopt",
    "func": 352,
    "tm": 202061
  },
  {
    "name": "isUndetectableObject node:internal/util/inspect:161:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 353,
    "tm": 202166,
    "source": {
      "script": 20,
      "start": 3243,
      "end": 3293,
      "positions": "C0O3275C9O3280C10O3293",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "formatPrimitive node:internal/util/inspect:1590:25",
    "type": "JS",
    "kind": "Unopt",
    "func": 354,
    "tm": 202267,
    "source": {
      "script": 20,
      "start": 51906,
      "end": 53174,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "strEscape node:internal/util/inspect:480:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 355,
    "tm": 202424,
    "source": {
      "script": 20,
      "start": 14375,
      "end": 16495,
      "positions": "C0O14402C5O14450C10O14498C13O14757C21O14761C28O14892C36O14897C43O14940C48O14969C56O14974C65O15027C71O15027C78O15071C81O15099C83O15115C88O15131C93O15182C98O15329C107O15336C114O15346C117O15346C124O15397C127O15404C132O15432C133O15443C140O15450C145O15463C159O15469C166O15533C169O15540C174O15568C175O15589C178O15606C180O15624C182O15635C186O15629C191O15668C196O15668C202O15707C204O15717C211O15750C218O15774C225O15797C234O15812C239O15828C241O15837C246O15854C248O15864C253O15868C265O15900C267O15913C279O15913C288O15950C293O15954C307O15979C309O15988C315O16004C321O16014C332O16033C337O16052C343O16062C350O16077C354O16087C358O16081C363O16119C370O16152C374O16119C380O16166C386O16176C397O16195C402O16218C407O16233C409O16267C411O16280C423O16280C436O16326C444O16326C460O16348C462O16357C466O15644C471O15611C477O16392C481O16384C486O16406C488O16416C491O16416C503O16455C506O16462C511O16493",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "addQuotes node:internal/util/inspect:463:19",
    "type": "JS",
    "kind": "Unopt",
    "func": 356,
    "tm": 202533,
    "source": {
      "script": 20,
      "start": 13944,
      "end": 14084,
      "positions": "C0O13962C2O13973C7O13987C12O13998C22O14005C23O14012C25O14023C30O14037C35O14049C45O14057C46O14064C51O14075C61O14082",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "^[a-zA-Z_][a-zA-Z_0-9]*$",
    "timestamp": 202622,
    "type": "CODE",
    "kind": "RegExp"
  },
  {
    "name": "reduceToSingleString node:internal/util/inspect:1976:30",
    "type": "JS",
    "kind": "Unopt",
    "func": 357,
    "tm": 202726,
    "source": {
      "script": 20,
      "start": 65406,
      "end": 68262,
      "positions
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "isBelowBreakLength node:internal/util/inspect:1952:28",
    "type": "JS",
    "kind": "Unopt",
    "func": 358,
    "tm": 202831,
    "source": {
      "script": 20,
      "start": 64444,
      "end": 65375,
      "positions": "C0O64897C7O64904C11O64940C15O64931C19O64953C23O64947C28O64970C29O64983C30O64999C32O65013C36O65004C41O65040C47O65056C49O65071C54O65090C58O65071C63O65094C76O65122C78O65143C82O65147C93O65187C97O65181C102O65208C103O65221C104O65022C109O64986C112O65314C114O65326C121O65337C127O65337C133O65373",
      "inlined": "",
      "fns": []
    }
  },
  {
    "name": "join node:internal/util:380:14",
    "type": "JS",
    "kind": "Unopt",
    "func": 359,
    "tm": 202913,
    "source": {
      "script": 15,
      "start": 10529,
      "end": 10838,
      "positions": "C0O10563C3O10580C9O10587C14O10625C18O10632C22O10654C24O10659C26O10659C31O10741C33O10754C43O10765C45O10772C52O10673C57O10641C60O10793C62O10806C72O10825C74O10836",
      "inlined": "",
      "fns": []
    }
  }
],
  "functions": [
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      4415
    ]
  },
  {
    "name": " node:internal/main/run_main_module:1:1",
    "codes": [
      4416
    ]
  },
  {
    "name": "nativeModuleRequire node:internal/bootstrap/loaders:349:29",
    "codes": [
      4417,
      4450
    ]
  },
  {
    "name": "compileForInternalLoader node:internal/bootstrap/loaders:316:27",
    "codes": [
      4418,
      4527
    ]
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "codes": [
      4419
    ]
  },
  {
    "name": " node:internal/bootstrap/pre_execution:1:1",
    "codes": [
      4420
    ]
  },
  {
    "name": "prepareMainThreadExecution node:internal/bootstrap/pre_execution:29:36",
    "codes": [
      4421
    ]
  },
  {
    "name": "refreshRuntimeOptions node:internal/bootstrap/pre_execution:99:31",
    "codes": [
      4422
    ]
  },
  {
    "name": "refreshOptions node:internal/options:39:24",
    "codes": [
      4423
    ]
  },
  {
    "name": "reconnectZeroFillToggle node:internal/buffer:1072:33",
    "codes": [
      4424
    ]
  },
  {
    "name": "patchProcessObject node:internal/bootstrap/pre_execution:103:28",
    "codes": [
      4425
    ]
  },
  {
    "name": "internalBinding node:internal/bootstrap/loaders:171:45",
    "codes": [
      4426,
      4528
    ]
  },
  {
    "name": "refreshHrtimeBuffer node:internal/process/per_thread:67:29",
    "codes": [
      4427
    ]
  },
  {
    "name": "getOptionValue node:internal/options:44:24",
    "codes": [
      4428,
      4525
    ]
  },
  {
    "name": "getCLIOptionsFromBinding node:internal/options:18:34",
    "codes": [
      4429,
      4526
    ]
  },
  {
    "name": "resolve node:path:1091:10",
    "codes": [
      4430,
      4596
    ]
  },
  {
    "name": "validateString node:internal/validators:119:24",
    "codes": [
      4431,
      4697
    ]
  },
  {
    "name": " node:path:1082:10",
    "codes": [
      4432
    ]
  },
  {
    "name": "wrappedCwd node:internal/bootstrap/switches/does_own_process_state:124:20",
    "codes": [
      4433
    ]
  },
  {
    "name": "normalizeString node:path:66:25",
    "codes": [
      4434,
      4452
    ]
  },
  {
    "name": "isPosixPathSeparator node:path:56:30",
    "codes": [
      4435,
      4451
    ]
  },
  {
    "name": "initializeGlobalConsole node:internal/console/constructor:687:33",
    "codes": [
      4436
    ]
  },
  {
    "name": "value node:internal/console/constructor:200:20",
    "codes": [
      4437
    ]
  },
  {
    "name": "value node:internal/console/constructor:230:20",
    "codes": [
      4438
    ]
  },
  {
    "name": "createWriteErrorHandler node:internal/console/constructor:354:33",
    "codes": [
      4439
    ]
  },
  {
    "name": "SafeMap node:internal/per_context/primordials:366:16",
    "codes": [
      4440,
      4524
    ]
  },
  {
    "name": "addReadOnlyProcessAlias node:internal/bootstrap/pre_execution:155:33",
    "codes": [
      4441
    ]
  },
  {
    "name": "setupTraceCategoryState node:internal/bootstrap/pre_execution:318:33",
    "codes": [
      4442
    ]
  },
  {
    "name": "toggleTraceCategoryState node:internal/process/per_thread:397:34",
    "codes": [
      4443
    ]
  },
  {
    "name": "setupPerfHooks node:internal/bootstrap/pre_execution:324:24",
    "codes": [
      4444
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/performance:217:27",
    "codes": [
      4445
    ]
  },
  {
    "name": "refreshTimeOrigin node:internal/perf/utils:25:27",
    "codes": [
      4446
    ]
  },
  {
    "name": "setupInspectorHooks node:internal/bootstrap/pre_execution:329:29",
    "codes": [
      4447
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      4448
    ]
  },
  {
    "name": " node:internal/inspector_async_hook:1:1",
    "codes": [
      4449
    ]
  },
  {
    "name": "setupWarningHandler node:internal/bootstrap/pre_execution:168:29",
    "codes": [
      4453
    ]
  },
  {
    "name": "addListener node:events:604:58",
    "codes": [
      4454
    ]
  },
  {
    "name": "_addListener node:events:541:22",
    "codes": [
      4455
    ]
  },
  {
    "name": "checkListener node:events:265:23",
    "codes": [
      4456
    ]
  },
  {
    "name": " node:internal/validators:245:42",
    "codes": [
      4457
    ]
  },
  {
    "name": "emit node:events:460:44",
    "codes": [
      4458
    ]
  },
  {
    "name": "startListeningIfSignal node:internal/process/signal:22:32",
    "codes": [
      4459
    ]
  },
  {
    "name": "isSignal node:internal/process/signal:17:18",
    "codes": [
      4460
    ]
  },
  {
    "name": "setupFetch node:internal/bootstrap/pre_execution:179:20",
    "codes": [
      4461
    ]
  },
  {
    "name": "setupWebCrypto node:internal/bootstrap/pre_execution:196:24",
    "codes": [
      4462
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:136:6",
    "codes": [
      4463
    ]
  },
  {
    "name": "get node:internal/bootstrap/node:112:6",
    "codes": [
      4464
    ]
  },
  {
    "name": "setupCustomEvent node:internal/bootstrap/pre_execution:238:26",
    "codes": [
      4465
    ]
  },
  {
    "name": "setupDebugEnv node:internal/bootstrap/pre_execution:290:23",
    "codes": [
      4466
    ]
  },
  {
    "name": "initializeDebugEnv node:internal/util/debuglog:22:28",
    "codes": [
      4467
    ]
  },
  {
    "name": "setupStacktracePrinterOnSigint node:internal/bootstrap/pre_execution:268:40",
    "codes": [
      4468
    ]
  },
  {
    "name": "initializeReport node:internal/bootstrap/pre_execution:278:26",
    "codes": [
      4469
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      4470
    ]
  },
  {
    "name": " node:internal/process/report:1:1",
    "codes": [
      4471
    ]
  },
  {
    "name": "initializeReportSignalHandlers node:internal/bootstrap/pre_execution:298:40",
    "codes": [
      4472
    ]
  },
  {
    "name": "addSignalHandler node:internal/process/report:98:26",
    "codes": [
      4473
    ]
  },
  {
    "name": "initializeHeapSnapshotSignalHandlers node:internal/bootstrap/pre_execution:304:46",
    "codes": [
      4474
    ]
  },
  {
    "name": "setupChildProcessIpcChannel node:internal/bootstrap/pre_execution:437:37",
    "codes": [
      4475
    ]
  },
  {
    "name": "initializePolicy node:internal/bootstrap/pre_execution:465:26",
    "codes": [
      4476
    ]
  },
  {
    "name": "initializeClusterIPC node:internal/bootstrap/pre_execution:456:30",
    "codes": [
      4477
    ]
  },
  {
    "name": "initializeSourceMapsHandlers node:internal/bootstrap/pre_execution:560:38",
    "codes": [
      4478
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      4479
    ]
  },
  {
    "name": " node:internal/source_map/source_map_cache:1:1",
    "codes": [
      4480
    ]
  },
  {
    "name": "debuglog node:internal/util/debuglog:71:18",
    "codes": [
      4481,
      4727
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      4482
    ]
  },
  {
    "name": " node:internal/util/iterable_weak_map:1:1",
    "codes": [
      4483
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/util/iterable_weak_map:17:3",
    "codes": [
      4484
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      4485
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:1:1",
    "codes": [
      4486
    ]
  },
  {
    "name": "SafeSet node:internal/per_context/primordials:379:16",
    "codes": [
      4487,
      4730
    ]
  },
  {
    "name": "IterableWeakMap node:internal/util/iterable_weak_map:16:1",
    "codes": [
      4488
    ]
  },
  {
    "name": "SafeWeakMap node:internal/per_context/primordials:372:16",
    "codes": [
      4489
    ]
  },
  {
    "name": "SafeFinalizationRegistry node:internal/per_context/primordials:393:16",
    "codes": [
      4490
    ]
  },
  {
    "name": "initializeDeprecations node:internal/bootstrap/pre_execution:347:32",
    "codes": [
      4491
    ]
  },
  {
    "name": "initializeWASI node:internal/bootstrap/pre_execution:514:24",
    "codes": [
      4492
    ]
  },
  {
    "name": "runDeserializeCallbacks node:internal/v8/startup_snapshot:31:33",
    "codes": [
      4493
    ]
  },
  {
    "name": "initializeCJSLoader node:internal/bootstrap/pre_execution:521:29",
    "codes": [
      4494
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      4495
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:1:1",
    "codes": [
      4496
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      4497
    ]
  },
  {
    "name": " node:internal/modules/package_json_reader:1:1",
    "codes": [
      4498
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      4499
    ]
  },
  {
    "name": " node:internal/process/esm_loader:1:1",
    "codes": [
      4500
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      4501
    ]
  },
  {
    "name": " node:internal/modules/esm/loader:1:1",
    "codes": [
      4502
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/modules/esm/loader:190:3",
    "codes": [
      4503
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      4504
    ]
  },
  {
    "name": " node:internal/modules/esm/module_map:1:1",
    "codes": [
      4505
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      4506
    ]
  },
  {
    "name": " node:internal/modules/esm/module_job:1:1",
    "codes": [
      4507
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      4508
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:1:1",
    "codes": [
      4509
    ]
  },
  {
    "name": " node:internal/modules/esm/assert:43:3",
    "codes": [
      4510
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      4511
    ]
  },
  {
    "name": " node:internal/modules/esm/resolve:1:1",
    "codes": [
      4512
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      4513
    ]
  },
  {
    "name": " node:internal/modules/esm/get_format:1:1",
    "codes": [
      4514
    ]
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "codes": [
      4515
    ]
  },
  {
    "name": " node:internal/modules/esm/fetch_module:1:1",
    "codes": [
      4516
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      4517
    ]
  },
  {
    "name": " node:net:1:1",
    "codes": [
      4518
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      4519
    ]
  },
  {
    "name": " node:internal/net:1:1",
    "codes": [
      4520
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      4521
    ]
  },
  {
    "name": " node:internal/dtrace:1:1",
    "codes": [
      4522
    ]
  },
  {
    "name": "protoGetter node:net:796:21",
    "codes": [
      4523
    ]
  },
  {
    "name": "get BlockList node:net:1920:16",
    "codes": [
      4529
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      4530
    ]
  },
  {
    "name": " node:internal/blocklist:1:1",
    "codes": [
      4531
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      4532
    ]
  },
  {
    "name": " node:internal/socketaddress:1:1",
    "codes": [
      4533
    ]
  },
  {
    "name": "BlockList node:internal/blocklist:40:14",
    "codes": [
      4534
    ]
  },
  {
    "name": "addAddress node:internal/blocklist:60:13",
    "codes": [
      4535
    ]
  },
  {
    "name": "isSocketAddress node:internal/socketaddress:43:25",
    "codes": [
      4536
    ]
  },
  {
    "name": "SocketAddress node:internal/socketaddress:47:14",
    "codes": [
      4537
    ]
  },
  {
    "name": " node:internal/validators:163:3",
    "codes": [
      4538
    ]
  },
  {
    "name": "validatePort node:internal/validators:220:22",
    "codes": [
      4539
    ]
  },
  {
    "name": " node:internal/validators:102:40",
    "codes": [
      4540
    ]
  },
  {
    "name": "isUint32 node:internal/validators:41:18",
    "codes": [
      4541,
      4733
    ]
  },
  {
    "name": "addRange node:internal/blocklist:72:11",
    "codes": [
      4542
    ]
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "codes": [
      4543
    ]
  },
  {
    "name": " node:internal/modules/esm/formats:1:1",
    "codes": [
      4544
    ]
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "codes": [
      4545
    ]
  },
  {
    "name": " node:internal/modules/esm/initialize_import_meta:1:1",
    "codes": [
      4546
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      4547
    ]
  },
  {
    "name": " node:internal/modules/esm/load:1:1",
    "codes": [
      4548
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      4549
    ]
  },
  {
    "name": " node:internal/fs/promises:1:1",
    "codes": [
      4550
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/fs/promises:195:3",
    "codes": [
      4551
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      4552
    ]
  },
  {
    "name": " node:internal/fs/rimraf:1:1",
    "codes": [
      4553
    ]
  },
  {
    "name": "from node:buffer:301:28",
    "codes": [
      4554
    ]
  },
  {
    "name": "fromString node:buffer:437:20",
    "codes": [
      4555
    ]
  },
  {
    "name": "fromStringFast node:buffer:418:24",
    "codes": [
      4556
    ]
  },
  {
    "name": "FastBuffer node:internal/buffer:958:14",
    "codes": [
      4557
    ]
  },
  {
    "name": "write node:buffer:598:12",
    "codes": [
      4558
    ]
  },
  {
    "name": "alignPool node:buffer:163:19",
    "codes": [
      4559
    ]
  },
  {
    "name": "promisify node:internal/util:324:19",
    "codes": [
      4560
    ]
  },
  {
    "name": "EventEmitterMixin node:internal/event_target:1020:27",
    "codes": [
      4561
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      4562
    ]
  },
  {
    "name": " node:internal/modules/esm/translators:1:1",
    "codes": [
      4563
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      4564
    ]
  },
  {
    "name": " node:internal/modules/esm/create_dynamic_module:1:1",
    "codes": [
      4565
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      4566
    ]
  },
  {
    "name": " node:internal/vm/module:1:1",
    "codes": [
      4567
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/vm/module:259:3",
    "codes": [
      4568
    ]
  },
  {
    "name": "ESMLoader node:internal/modules/esm/loader:240:14",
    "codes": [
      4569
    ]
  },
  {
    "name": "ModuleMap node:internal/modules/esm/module_map:17:14",
    "codes": [
      4570
    ]
  },
  {
    "name": "desc.value node:internal/per_context/primordials:340:32",
    "codes": [
      4571
    ]
  },
  {
    "name": "SafeIterator node:internal/per_context/primordials:285:16",
    "codes": [
      4572
    ]
  },
  {
    "name": "next node:internal/per_context/primordials:288:9",
    "codes": [
      4573,
      4593
    ]
  },
  {
    "name": "canBeRequiredWithoutScheme node:internal/bootstrap/loaders:254:36",
    "codes": [
      4574,
      4594
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:192:41",
    "codes": [
      4575,
      4595
    ]
  },
  {
    "name": "getSchemeOnlyModuleNames node:internal/bootstrap/loaders:258:34",
    "codes": [
      4576
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:194:49",
    "codes": [
      4577
    ]
  },
  {
    "name": "deprecate node:internal/util:96:19",
    "codes": [
      4578,
      4695
    ]
  },
  {
    "name": "getEmbedderOptions node:internal/options:32:28",
    "codes": [
      4579
    ]
  },
  {
    "name": "Module._initPaths node:internal/modules/cjs/loader:1254:29",
    "codes": [
      4580
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      4581
    ]
  },
  {
    "name": " node:internal/modules/run_main:1:1",
    "codes": [
      4582
    ]
  },
  {
    "name": "initializeESMLoader node:internal/bootstrap/pre_execution:531:29",
    "codes": [
      4583
    ]
  },
  {
    "name": "get hasLoadedAnyUserCJSModule node:internal/modules/cjs/loader:74:32",
    "codes": [
      4584
    ]
  },
  {
    "name": "assert node:internal/assert:11:16",
    "codes": [
      4585
    ]
  },
  {
    "name": "loadPreloadModules node:internal/bootstrap/pre_execution:574:28",
    "codes": [
      4586
    ]
  },
  {
    "name": "Module._preloadModules node:internal/modules/cjs/loader:1284:34",
    "codes": [
      4587
    ]
  },
  {
    "name": "Module node:internal/modules/cjs/loader:172:16",
    "codes": [
      4588
    ]
  },
  {
    "name": "dirname node:path:1275:10",
    "codes": [
      4589,
      4698
    ]
  },
  {
    "name": "updateChildren node:internal/modules/cjs/loader:165:24",
    "codes": [
      4590
    ]
  },
  {
    "name": "Module._nodeModulePaths node:internal/modules/cjs/loader:640:37",
    "codes": [
      4591,
      4592
    ]
  },
  {
    "name": "Module.require node:internal/modules/cjs/loader:1020:36",
    "codes": [
      4597
    ]
  },
  {
    "name": "Module._load node:internal/modules/cjs/loader:771:24",
    "codes": [
      4598
    ]
  },
  {
    "name": "logger node:internal/util/debuglog:95:18",
    "codes": [
      4599
    ]
  },
  {
    "name": " node:internal/per_context/primordials:291:21",
    "codes": [
      4600
    ]
  },
  {
    "name": "debug node:internal/util/debuglog:76:15",
    "codes": [
      4601
    ]
  },
  {
    "name": "init node:internal/util/debuglog:72:16",
    "codes": [
      4602
    ]
  },
  {
    "name": "testEnabled node:internal/util/debuglog:32:19",
    "codes": [
      4603
    ]
  },
  {
    "name": "debuglogImpl node:internal/util/debuglog:49:22",
    "codes": [
      4604
    ]
  },
  {
    "name": " node:internal/modules/cjs/loader:283:66",
    "codes": [
      4605
    ]
  },
  {
    "name": "noop node:internal/util/debuglog:47:14",
    "codes": [
      4606,
      4734
    ]
  },
  {
    "name": "Module._resolveFilename node:internal/modules/cjs/loader:865:35",
    "codes": [
      4607
    ]
  },
  {
    "name": "canBeRequiredByUsers node:internal/bootstrap/loaders:247:30",
    "codes": [
      4608
    ]
  },
  {
    "name": "Module._resolveLookupPaths node:internal/modules/cjs/loader:678:38",
    "codes": [
      4609
    ]
  },
  {
    "name": "trySelfParentPath node:internal/modules/cjs/loader:438:27",
    "codes": [
      4610
    ]
  },
  {
    "name": "trySelf node:internal/modules/cjs/loader:452:17",
    "codes": [
      4611
    ]
  },
  {
    "name": "readPackageScope node:internal/modules/cjs/loader:332:26",
    "codes": [
      4612
    ]
  },
  {
    "name": "readPackage node:internal/modules/cjs/loader:301:21",
    "codes": [
      4613
    ]
  },
  {
    "name": "read node:internal/modules/package_json_reader:16:14",
    "codes": [
      4614
    ]
  },
  {
    "name": "toNamespacedPath node:path:1266:19",
    "codes": [
      4615,
      4696
    ]
  },
  {
    "name": "Module._findPath node:internal/modules/cjs/loader:505:28",
    "codes": [
      4616
    ]
  },
  {
    "name": "isAbsolute node:path:1156:13",
    "codes": [
      4617
    ]
  },
  {
    "name": "stat node:internal/modules/cjs/loader:151:14",
    "codes": [
      4618
    ]
  },
  {
    "name": "tryExtensions node:internal/modules/cjs/loader:411:23",
    "codes": [
      4619
    ]
  },
  {
    "name": "tryFile node:internal/modules/cjs/loader:395:17",
    "codes": [
      4620
    ]
  },
  {
    "name": "toRealPath node:internal/modules/cjs/loader:404:20",
    "codes": [
      4621
    ]
  },
  {
    "name": "realpathSync node:fs:2460:22",
    "codes": [
      4622
    ]
  },
  {
    "name": "getOptions node:internal/fs/utils:318:20",
    "codes": [
      4623
    ]
  },
  {
    "name": "assertEncoding node:internal/fs/utils:155:24",
    "codes": [
      4624
    ]
  },
  {
    "name": "toPathIfFileURL node:internal/url:1513:25",
    "codes": [
      4625
    ]
  },
  {
    "name": "isURLInstance node:internal/url:1509:23",
    "codes": [
      4626
    ]
  },
  {
    "name": " node:internal/fs/utils:671:38",
    "codes": [
      4627
    ]
  },
  {
    "name": " node:internal/fs/utils:360:35",
    "codes": [
      4628
    ]
  },
  {
    "name": "isUint8Array node:internal/util/types:13:22",
    "codes": [
      4629
    ]
  },
  {
    "name": "splitRoot node:fs:2416:33",
    "codes": [
      4630
    ]
  },
  {
    "name": "nextPart node:fs:2449:31",
    "codes": [
      4631,
      4731
    ]
  },
  {
    "name": "handleErrorFromBinding node:internal/fs/utils:343:32",
    "codes": [
      4632
    ]
  },
  {
    "name": "isFileType node:fs:213:20",
    "codes": [
      4633,
      4699
    ]
  },
  {
    "name": "encodeRealpathResult node:fs:2425:30",
    "codes": [
      4634
    ]
  },
  {
    "name": "loadNativeModule node:internal/modules/cjs/helpers:44:26",
    "codes": [
      4635
    ]
  },
  {
    "name": "Module.load node:internal/modules/cjs/loader:992:33",
    "codes": [
      4636
    ]
  },
  {
    "name": "findLongestRegisteredExtension node:internal/modules/cjs/loader:424:40",
    "codes": [
      4637
    ]
  },
  {
    "name": "basename node:path:1306:11",
    "codes": [
      4638
    ]
  },
  {
    "name": "Module._extensions..js node:internal/modules/cjs/loader:1135:37",
    "codes": [
      4639
    ]
  },
  {
    "name": "readFileSync node:fs:459:22",
    "codes": [
      4640
    ]
  },
  {
    "name": "isEncoding node:buffer:535:40",
    "codes": [
      4641
    ]
  },
  {
    "name": "normalizeEncoding node:internal/util:160:27",
    "codes": [
      4642
    ]
  },
  {
    "name": "openSync node:fs:585:18",
    "codes": [
      4643
    ]
  },
  {
    "name": " node:internal/fs/utils:683:42",
    "codes": [
      4644
    ]
  },
  {
    "name": "stringToFlags node:internal/fs/utils:558:23",
    "codes": [
      4645
    ]
  },
  {
    "name": "parseFileMode node:internal/validators:60:23",
    "codes": [
      4646
    ]
  },
  {
    "name": " node:internal/validators:85:3",
    "codes": [
      4647
    ]
  },
  {
    "name": "isInt32 node:internal/validators:37:17",
    "codes": [
      4648
    ]
  },
  {
    "name": "tryStatSync node:fs:413:21",
    "codes": [
      4649
    ]
  },
  {
    "name": "tryCreateBuffer node:fs:423:25",
    "codes": [
      4650
    ]
  },
  {
    "name": "allocUnsafe node:buffer:378:42",
    "codes": [
      4651
    ]
  },
  {
    "name": " node:buffer:354:36",
    "codes": [
      4652
    ]
  },
  {
    "name": "validateNumber node:internal/validators:124:24",
    "codes": [
      4653
    ]
  },
  {
    "name": "allocate node:buffer:403:18",
    "codes": [
      4654
    ]
  },
  {
    "name": "tryReadSync node:fs:438:21",
    "codes": [
      4655
    ]
  },
  {
    "name": "readSync node:fs:699:18",
    "codes": [
      4656
    ]
  },
  {
    "name": " node:internal/fs/utils:689:40",
    "codes": [
      4657
    ]
  },
  {
    "name": " node:internal/validators:200:40",
    "codes": [
      4658
    ]
  },
  {
    "name": " node:internal/validators:74:3",
    "codes": [
      4659
    ]
  },
  {
    "name": " node:internal/fs/utils:639:3",
    "codes": [
      4660
    ]
  },
  {
    "name": " node:internal/fs/utils:904:42",
    "codes": [
      4661
    ]
  },
  {
    "name": "closeSync node:fs:535:19",
    "codes": [
      4662
    ]
  },
  {
    "name": "toString node:buffer:790:46",
    "codes": [
      4663
    ]
  },
  {
    "name": "getEncodingOps node:buffer:684:24",
    "codes": [
      4664
    ]
  },
  {
    "name": "slice node:buffer:599:12",
    "codes": [
      4665
    ]
  },
  {
    "name": "Module._compile node:internal/modules/cjs/loader:1080:37",
    "codes": [
      4666
    ]
  },
  {
    "name": "maybeCacheSourceMap node:internal/source_map/source_map_cache:80:29",
    "codes": [
      4667
    ]
  },
  {
    "name": "getSourceMapsEnabled node:internal/source_map/source_map_cache:49:30",
    "codes": [
      4668
    ]
  },
  {
    "name": "setSourceMapsEnabled node:internal/source_map/source_map_cache:56:30",
    "codes": [
      4669
    ]
  },
  {
    "name": "validateBoolean node:internal/validators:148:25",
    "codes": [
      4670
    ]
  },
  {
    "name": "wrapSafe node:internal/modules/cjs/loader:1040:18",
    "codes": [
      4671
    ]
  },
  {
    "name": "compileFunction node:vm:316:25",
    "codes": [
      4672
    ]
  },
  {
    "name": " node:internal/validators:177:39",
    "codes": [
      4673
    ]
  },
  {
    "name": " node:vm:321:27",
    "codes": [
      4674,
      4732
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      4675
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/no-cluster.js:1:1",
    "codes": [
      4676
    ]
  },
  {
    "name": "importModuleDynamicallyWrap node:internal/vm/module:436:37",
    "codes": [
      4677
    ]
  },
  {
    "name": "makeRequireFunction node:internal/modules/cjs/helpers:58:29",
    "codes": [
      4678
    ]
  },
  {
    "name": "require node:internal/modules/cjs/helpers:101:31",
    "codes": [
      4679
    ]
  },
  {
    "name": " node:internal/modules/cjs/helpers:29:66",
    "codes": [
      4680
    ]
  },
  {
    "name": "compileForPublicLoader node:internal/bootstrap/loaders:263:25",
    "codes": [
      4681
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      4682
    ]
  },
  {
    "name": " node:cluster:1:1",
    "codes": [
      4683
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      4684
    ]
  },
  {
    "name": " node:internal/cluster/primary:1:1",
    "codes": [
      4685
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      4686
    ]
  },
  {
    "name": " node:child_process:1:1",
    "codes": [
      4687
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      4688
    ]
  },
  {
    "name": " node:internal/child_process:1:1",
    "codes": [
      4689
    ]
  },
  {
    "name": "<instance_members_initializer> node:internal/child_process:525:3",
    "codes": [
      4690
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      4691
    ]
  },
  {
    "name": " node:dgram:1:1",
    "codes": [
      4692
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      4693
    ]
  },
  {
    "name": " node:internal/dgram:1:1",
    "codes": [
      4694
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      4700
    ]
  },
  {
    "name": " node:internal/socket_list:1:1",
    "codes": [
      4701
    ]
  },
  {
    "name": "customPromiseExecFunction node:child_process:231:35",
    "codes": [
      4702
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      4703
    ]
  },
  {
    "name": " node:internal/cluster/round_robin_handle:1:1",
    "codes": [
      4704
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      4705
    ]
  },
  {
    "name": " node:internal/cluster/utils:1:1",
    "codes": [
      4706
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      4707
    ]
  },
  {
    "name": " node:internal/cluster/shared_handle:1:1",
    "codes": [
      4708
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      4709
    ]
  },
  {
    "name": " node:internal/cluster/worker:1:1",
    "codes": [
      4710
    ]
  },
  {
    "name": "EventEmitter node:events:212:22",
    "codes": [
      4711
    ]
  },
  {
    "name": "EventEmitter.init node:events:337:29",
    "codes": [
      4712
    ]
  },
  {
    "name": "getESMFacade node:internal/bootstrap/loaders:281:15",
    "codes": [
      4713
    ]
  },
  {
    "name": " node:internal/bootstrap/loaders:290:15",
    "codes": [
      4714
    ]
  },
  {
    "name": "syncExports node:internal/bootstrap/loaders:304:14",
    "codes": [
      4715,
      4729
    ]
  },
  {
    "name": "getOwn node:internal/bootstrap/loaders:187:16",
    "codes": [
      4716,
      4728
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      4718
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1",
    "codes": [
      4719
    ]
  },
  {
    "name": "get SocketAddress node:net:1924:20",
    "codes": [
      4720
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      4721
    ]
  },
  {
    "name": " node:worker_threads:1:1",
    "codes": [
      4722
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      4723
    ]
  },
  {
    "name": " node:internal/worker:1:1",
    "codes": [
      4724
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      4725
    ]
  },
  {
    "name": " node:internal/error_serdes:1:1",
    "codes": [
      4726
    ]
  },
  {
    "name": "Socket node:net:294:16",
    "codes": [
      4735
    ]
  },
  {
    "name": "Duplex node:internal/streams/duplex:54:16",
    "codes": [
      4736
    ]
  },
  {
    "name": "Readable node:internal/streams/readable:181:18",
    "codes": [
      4737
    ]
  },
  {
    "name": "Stream node:internal/streams/legacy:10:16",
    "codes": [
      4738
    ]
  },
  {
    "name": "ReadableState node:internal/streams/readable:78:23",
    "codes": [
      4739
    ]
  },
  {
    "name": "getHighWaterMark node:internal/streams/state:19:26",
    "codes": [
      4740
    ]
  },
  {
    "name": "highWaterMarkFrom node:internal/streams/state:10:27",
    "codes": [
      4741
    ]
  },
  {
    "name": "getDefaultHighWaterMark node:internal/streams/state:15:33",
    "codes": [
      4742
    ]
  },
  {
    "name": "BufferList node:internal/streams/buffer_list:14:14",
    "codes": [
      4743
    ]
  },
  {
    "name": "construct node:internal/streams/destroy:225:19",
    "codes": [
      4744
    ]
  },
  {
    "name": "Writable node:internal/streams/writable:220:18",
    "codes": [
      4745
    ]
  },
  {
    "name": "WritableState node:internal/streams/writable:77:23",
    "codes": [
      4746
    ]
  },
  {
    "name": "resetBuffer node:internal/streams/writable:202:21",
    "codes": [
      4747
    ]
  },
  {
    "name": "set node:internal/streams/readable:1175:8",
    "codes": [
      4748
    ]
  },
  {
    "name": "createHandle node:net:146:22",
    "codes": [
      4749
    ]
  },
  {
    "name": "set node:net:1848:6",
    "codes": [
      4750
    ]
  },
  {
    "name": "get node:net:1847:6",
    "codes": [
      4751
    ]
  },
  {
    "name": "Readable.on node:internal/streams/readable:874:33",
    "codes": [
      4752
    ]
  },
  {
    "name": "initSocketHandle node:net:263:26",
    "codes": [
      4753
    ]
  },
  {
    "name": "undestroy node:internal/streams/destroy:160:19",
    "codes": [
      4754
    ]
  },
  {
    "name": "getNewAsyncId node:net:165:23",
    "codes": [
      4755
    ]
  },
  {
    "name": "get node:internal/bootstrap/pre_execution:413:8",
    "codes": [
      4756
    ]
  },
  {
    "name": "get /usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10",
    "codes": [
      4757
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      4758
    ]
  },
  {
    "name": " /usr/local/lib/node_modules/0x/lib/preload/soft-exit.js:1:1",
    "codes": [
      4759
    ]
  },
  {
    "name": "initializeFrozenIntrinsics node:internal/bootstrap/pre_execution:566:36",
    "codes": [
      4760
    ]
  },
  {
    "name": "executeUserEntryPoint node:internal/modules/run_main:74:31",
    "codes": [
      4761
    ]
  },
  {
    "name": "resolveMainPath node:internal/modules/run_main:15:25",
    "codes": [
      4762
    ]
  },
  {
    "name": "shouldUseESMLoader node:internal/modules/run_main:30:28",
    "codes": [
      4763
    ]
  },
  {
    "name": " node:internal/process/execution:137:10",
    "codes": [
      4764
    ]
  },
  {
    "name": "clearDefaultTriggerAsyncId node:internal/async_hooks:441:36",
    "codes": [
      4765
    ]
  },
  {
    "name": "beforeInspector node:internal/errors:751:18",
    "codes": [
      4766
    ]
  },
  {
    "name": "prepareStackTrace node:internal/errors:90:27",
    "codes": [
      4767
    ]
  },
  {
    "name": "maybeOverridePrepareStackTrace node:internal/errors:135:40",
    "codes": [
      4768
    ]
  },
  {
    "name": "afterInspector node:internal/errors:765:17",
    "codes": [
      4769
    ]
  },
  {
    "name": "lazyInternalUtilInspect node:internal/errors:182:33",
    "codes": [
      4770
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      4771
    ]
  },
  {
    "name": " node:internal/tty:1:1",
    "codes": [
      4772
    ]
  },
  {
    "name": "hasColors node:internal/tty:222:19",
    "codes": [
      4773
    ]
  },
  {
    "name": "getColorDepth node:internal/tty:106:23",
    "codes": [
      4774
    ]
  },
  {
    "name": "get node:internal/util/inspect:356:6",
    "codes": [
      4775
    ]
  },
  {
    "name": "inspect node:internal/util/inspect:295:17",
    "codes": [
      4776
    ]
  },
  {
    "name": "formatValue node:internal/util/inspect:750:21",
    "codes": [
      4777
    ]
  },
  {
    "name": "formatRaw node:internal/util/inspect:828:19",
    "codes": [
      4778
    ]
  },
  {
    "name": "getConstructorName node:internal/util/inspect:572:28",
    "codes": [
      4779
    ]
  },
  {
    "name": "isInstanceof node:internal/util/inspect:564:22",
    "codes": [
      4780
    ]
  },
  {
    "name": "getKeys node:internal/util/inspect:693:17",
    "codes": [
      4781
    ]
  },
  {
    "name": "isError node:internal/util:80:17",
    "codes": [
      4782
    ]
  },
  {
    "name": "formatError node:internal/util/inspect:1341:21",
    "codes": [
      4783
    ]
  },
  {
    "name": "getStackString node:internal/util/inspect:1220:24",
    "codes": [
      4784
    ]
  },
  {
    "name": "removeDuplicateErrorKeys node:internal/util/inspect:1277:34",
    "codes": [
      4785
    ]
  },
  {
    "name": "improveStack node:internal/util/inspect:1244:22",
    "codes": [
      4786
    ]
  },
  {
    "name": "getPrefix node:internal/util/inspect:678:19",
    "codes": [
      4787
    ]
  },
  {
    "name": "getStackFrames node:internal/util/inspect:1224:24",
    "codes": [
      4788
    ]
  },
  {
    "name": "safeGetCWD node:internal/util/inspect:1331:20",
    "codes": [
      4789
    ]
  },
  {
    "name": "exists node:internal/bootstrap/loaders:243:16",
    "codes": [
      4790
    ]
  },
  {
    "name": "stylizeWithColor node:internal/util/inspect:545:26",
    "codes": [
      4791
    ]
  },
  {
    "name": "get node:internal/util/inspect:421:8",
    "codes": [
      4792
    ]
  },
  {
    "name": "getEmptyFormatArray node:internal/util/inspect:560:29",
    "codes": [
      4794
    ]
  },
  {
    "name": "formatProperty node:internal/util/inspect:1883:24",
    "codes": [
      4795
    ]
  },
  {
    "name": "isUndetectableObject node:internal/util/inspect:161:30",
    "codes": [
      4796
    ]
  },
  {
    "name": "formatPrimitive node:internal/util/inspect:1590:25",
    "codes": [
      4797
    ]
  },
  {
    "name": "strEscape node:internal/util/inspect:480:19",
    "codes": [
      4798
    ]
  },
  {
    "name": "addQuotes node:internal/util/inspect:463:19",
    "codes": [
      4799
    ]
  },
  {
    "name": "reduceToSingleString node:internal/util/inspect:1976:30",
    "codes": [
      4801
    ]
  },
  {
    "name": "isBelowBreakLength node:internal/util/inspect:1952:28",
    "codes": [
      4802
    ]
  },
  {
    "name": "join node:internal/util:380:14",
    "codes": [
      4803
    ]
  }
],
  "ticks": [
    {
  "tm": 1150,
  "vm": 6,
  "s": [
    2657,
    822
  ]
},
    {
  "tm": 2400,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 3681,
  "vm": 6,
  "s": [
    2618,
    6763981
  ]
},
    {
  "tm": 4941,
  "vm": 6,
  "s": [
    2618,
    6757282
  ]
},
    {
  "tm": 6094,
  "vm": 6,
  "s": [
    2618,
    5642739
  ]
},
    {
  "tm": 7422,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 12998,
  "vm": 6,
  "s": [
    -1,
    140703310304418
  ]
},
    {
  "tm": 13016,
  "vm": 6,
  "s": [
    2641,
    72234
  ]
},
    {
  "tm": 13024,
  "vm": 6,
  "s": [
    4190,
    3185
  ]
},
    {
  "tm": 13032,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 14721,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 17295,
  "vm": 6,
  "s": [
    2626,
    68073
  ]
},
    {
  "tm": 17312,
  "vm": 6,
  "s": [
    2641,
    158802
  ]
},
    {
  "tm": 17319,
  "vm": 6,
  "s": [
    2752,
    203
  ]
},
    {
  "tm": 20726,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 20760,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 20782,
  "vm": 6,
  "s": [
    4190,
    3687
  ]
},
    {
  "tm": 22643,
  "vm": 6,
  "s": [
    2627,
    34275
  ]
},
    {
  "tm": 22685,
  "vm": 6,
  "s": [
    2805,
    75
  ]
},
    {
  "tm": 23850,
  "vm": 6,
  "s": [
    2641,
    158731
  ]
},
    {
  "tm": 25404,
  "vm": 6,
  "s": [
    4190,
    3309
  ]
},
    {
  "tm": 27674,
  "vm": 5,
  "s": [
    2618,
    16697553
  ]
},
    {
  "tm": 28787,
  "vm": 5,
  "s": [
    2618,
    6757282
  ]
},
    {
  "tm": 29920,
  "vm": 5,
  "s": [
    3975,
    393
  ]
},
    {
  "tm": 31245,
  "vm": 5,
  "s": [
    2618,
    5099184
  ]
},
    {
  "tm": 33334,
  "vm": 3,
  "s": [
    2618,
    6956947,
    2618,
    6549392,
    4416,
    3
  ]
},
    {
  "tm": 33757,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4417,
    71,
    4416,
    3
  ]
},
    {
  "tm": 35409,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4417,
    71,
    4416,
    3
  ]
},
    {
  "tm": 38464,
  "vm": 3,
  "s": [
    4190,
    3764,
    2618,
    6549392,
    4421,
    31,
    4416,
    15
  ]
},
    {
  "tm": 38481,
  "vm": 3,
  "s": [
    563,
    17,
    2618,
    6549392,
    4421,
    31,
    4416,
    15
  ]
},
    {
  "tm": 38630,
  "vm": 3,
  "s": [
    4190,
    2158,
    2618,
    6549392,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 39881,
  "vm": 6,
  "s": [
    2573,
    0,
    2618,
    6548560,
    4429,
    11,
    4428,
    3,
    4425,
    68,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 43780,
  "vm": 3,
  "s": [
    4190,
    3185,
    2618,
    6549392,
    4425,
    226,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 43798,
  "vm": 3,
  "s": [
    4190,
    3495,
    2618,
    6549392,
    4425,
    226,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 43806,
  "vm": 3,
  "s": [
    4190,
    3576,
    2618,
    6549392,
    4425,
    226,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 44994,
  "vm": 3,
  "s": [
    4190,
    3185,
    2618,
    6549392,
    4432,
    8,
    4430,
    45,
    4425,
    226,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 47184,
  "vm": 3,
  "s": [
    4190,
    3780,
    2618,
    6549392,
    4425,
    268,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 47296,
  "vm": 0,
  "s": [
    4190,
    2169,
    2618,
    3592464,
    4437,
    56,
    4436,
    11,
    4425,
    268,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 48960,
  "vm": 3,
  "s": [
    2641,
    20864,
    2618,
    6549392,
    4438,
    169,
    4436,
    29,
    4425,
    268,
    4421,
    37,
    4416,
    15
  ]
},
    {
  "tm": 50291,
  "vm": 3,
  "s": [
    2618,
    1332340,
    2618,
    6549392,
    4444,
    16,
    4421,
    50,
    4416,
    15
  ]
},
    {
  "tm": 50949,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4417,
    71,
    4447,
    23,
    4421,
    56,
    4416,
    15
  ]
},
    {
  "tm": 54187,
  "vm": 3,
  "s": [
    2618,
    4049394,
    2618,
    6549392,
    4453,
    61,
    4421,
    62,
    4416,
    15
  ]
},
    {
  "tm": 54205,
  "vm": 3,
  "s": [
    2805,
    75,
    2618,
    6549392,
    4453,
    61,
    4421,
    62,
    4416,
    15
  ]
},
    {
  "tm": 54784,
  "vm": 3,
  "s": [
    563,
    13,
    2618,
    6549392,
    4459,
    3,
    4458,
    268,
    4455,
    77,
    4454,
    14,
    4453,
    61,
    4421,
    62,
    4416,
    15
  ]
},
    {
  "tm": 56306,
  "vm": 3,
  "s": [
    4190,
    3736,
    2618,
    6549392,
    4462,
    13,
    4421,
    74,
    4416,
    15
  ]
},
    {
  "tm": 57373,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4469,
    16,
    4421,
    144,
    4416,
    15
  ]
},
    {
  "tm": 59071,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4478,
    6,
    4421,
    180,
    4416,
    15
  ]
},
    {
  "tm": 59926,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4480,
    307,
    4418,
    103,
    4450,
    645,
    4478,
    6,
    4421,
    180,
    4416,
    15
  ]
},
    {
  "tm": 61150,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4480,
    323,
    4418,
    103,
    4450,
    645,
    4478,
    6,
    4421,
    180,
    4416,
    15
  ]
},
    {
  "tm": 62401,
  "vm": 3,
  "s": [
    2618,
    4049410,
    2618,
    6549392,
    4421,
    211,
    4416,
    15
  ]
},
    {
  "tm": 66950,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 66970,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 66979,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 67067,
  "vm": 6,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 70391,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 70412,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 70946,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4505,
    26,
    4418,
    103,
    4450,
    645,
    4502,
    430,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 72246,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4505,
    35,
    4418,
    103,
    4450,
    645,
    4502,
    430,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 73506,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 77797,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 77819,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 77830,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 78685,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 79956,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 85371,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 85398,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 85413,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 85426,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 86243,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4418,
    70,
    4450,
    645,
    4518,
    556,
    4418,
    103,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 87521,
  "vm": 0,
  "s": [
    2618,
    2654929,
    2618,
    6612960,
    4518,
    1667,
    4418,
    103,
    4450,
    645,
    4516,
    227,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 89113,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4531,
    81,
    4527,
    771,
    4450,
    645,
    4529,
    14,
    4516,
    284,
    4418,
    103,
    4450,
    645,
    4514,
    172,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 90156,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4514,
    186,
    4418,
    103,
    4450,
    645,
    4512,
    1142,
    4418,
    103,
    4450,
    645,
    4502,
    454,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 91374,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 94457,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 94479,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 95723,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4550,
    712,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 98824,
  "vm": 3,
  "s": [
    2641,
    158731,
    2618,
    6549392,
    4553,
    371,
    4527,
    771,
    4450,
    645,
    4550,
    712,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 98865,
  "vm": 3,
  "s": [
    2805,
    75,
    2618,
    6549392,
    4553,
    371,
    4527,
    771,
    4450,
    645,
    4550,
    712,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 98972,
  "vm": 3,
  "s": [
    2805,
    75,
    2618,
    6549392,
    4554,
    12,
    4553,
    371,
    4527,
    771,
    4450,
    645,
    4550,
    712,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 100496,
  "vm": 3,
  "s": [
    2618,
    4049394,
    2618,
    6549392,
    4550,
    1208,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 102697,
  "vm": 3,
  "s": [
    4190,
    3764,
    2618,
    6549392,
    4550,
    1226,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 102798,
  "vm": 0,
  "s": [
    2618,
    5471722,
    2618,
    1694016,
    4561,
    57,
    4550,
    1226,
    4527,
    771,
    4450,
    645,
    4548,
    183,
    4527,
    771,
    4450,
    645,
    4502,
    494,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 104319,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4502,
    511,
    4418,
    103,
    4450,
    645,
    4500,
    81,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 106610,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4500,
    132,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 106643,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4500,
    132,
    4418,
    103,
    4450,
    645,
    4496,
    1199,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 107707,
  "vm": 2,
  "s": [
    2618,
    6097273,
    2618,
    6549392,
    4496,
    2165,
    4418,
    103,
    4450,
    645,
    4494,
    6,
    4421,
    224,
    4416,
    15
  ]
},
    {
  "tm": 108994,
  "vm": 0,
  "s": [
    2618,
    3555938,
    2618,
    3589584,
    4589,
    13,
    4588,
    30,
    4587,
    33,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 110353,
  "vm": 3,
  "s": [
    4190,
    3190,
    2618,
    6549392,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 130270,
  "vm": 6,
  "s": [
    1853,
    0,
    2618,
    1554800,
    4614,
    48,
    4613,
    51,
    4612,
    90,
    4611,
    9,
    4607,
    676,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137701,
  "vm": 3,
  "s": [
    4190,
    3190,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137750,
  "vm": 3,
  "s": [
    3975,
    1879,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137776,
  "vm": 3,
  "s": [
    4190,
    3569,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137786,
  "vm": 3,
  "s": [
    2641,
    72240,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137811,
  "vm": 3,
  "s": [
    4190,
    3736,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 137825,
  "vm": 3,
  "s": [
    4190,
    3190,
    2618,
    6549392,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 140204,
  "vm": 3,
  "s": [
    4190,
    3722,
    2618,
    6549392,
    4622,
    6,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 140225,
  "vm": 3,
  "s": [
    2641,
    20867,
    2618,
    6549392,
    4622,
    6,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 143654,
  "vm": 3,
  "s": [
    2618,
    1332560,
    2618,
    6549392,
    4622,
    18,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 143677,
  "vm": 3,
  "s": [
    2641,
    72646,
    2618,
    6549392,
    4622,
    18,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 143777,
  "vm": 3,
  "s": [
    2618,
    4077510,
    2618,
    6549392,
    4625,
    3,
    4622,
    18,
    4621,
    35,
    4620,
    45,
    4619,
    23,
    4616,
    344,
    4607,
    770,
    4598,
    210,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 145022,
  "vm": 2,
  "s": [
    2618,
    1359624,
    2618,
    6549392,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 146316,
  "vm": 3,
  "s": [
    2618,
    1899671,
    2618,
    6549392,
    4655,
    29,
    4640,
    159,
    4639,
    60,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 147600,
  "vm": 2,
  "s": [
    2618,
    5873236,
    2618,
    6549392,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 149289,
  "vm": 3,
  "s": [
    4190,
    3764,
    2618,
    6549392,
    4671,
    113,
    4666,
    103,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 150223,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 151332,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 153333,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 153770,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 155973,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 156364,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 159530,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 159555,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 160085,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4689,
    506,
    4527,
    771,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 163387,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4689,
    506,
    4527,
    771,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 163413,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4689,
    506,
    4527,
    771,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 163485,
  "vm": 6,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4689,
    506,
    4527,
    771,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 164769,
  "vm": 0,
  "s": [
    2618,
    5275463,
    2618,
    3592464,
    4689,
    976,
    4527,
    771,
    4450,
    645,
    4687,
    589,
    4527,
    771,
    4450,
    645,
    4685,
    219,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 166265,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4685,
    268,
    4527,
    771,
    4450,
    645,
    4683,
    29,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4676,
    3,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 167385,
  "vm": 6,
  "s": [
    1844,
    0,
    2618,
    1554800,
    4656,
    233,
    4655,
    29,
    4640,
    159,
    4639,
    60,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 168627,
  "vm": 5,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4722,
    3,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4719,
    16,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 170723,
  "vm": 3,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4722,
    3,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4719,
    16,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 171061,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4724,
    606,
    4527,
    771,
    4450,
    645,
    4722,
    3,
    4527,
    771,
    4681,
    44,
    4635,
    53,
    4598,
    304,
    4597,
    76,
    4679,
    8,
    4719,
    16,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 172330,
  "vm": 3,
  "s": [
    2618,
    3898004,
    2618,
    6619664,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 176388,
  "vm": 3,
  "s": [
    -1,
    140703310304418,
    2618,
    6619664,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 176409,
  "vm": 3,
  "s": [
    4190,
    2158,
    2618,
    6619664,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 176423,
  "vm": 3,
  "s": [
    2641,
    21604,
    2618,
    6619664,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 177196,
  "vm": 3,
  "s": [
    2618,
    4051872,
    2618,
    6619664,
    4739,
    115,
    4737,
    71,
    4736,
    28,
    4735,
    368,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 180233,
  "vm": 3,
  "s": [
    4190,
    3736,
    2618,
    6549392,
    4736,
    44,
    4735,
    368,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 180254,
  "vm": 3,
  "s": [
    4190,
    3606,
    2618,
    6549392,
    4736,
    44,
    4735,
    368,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 180853,
  "vm": 0,
  "s": [
    2618,
    11081072,
    4735,
    757,
    4719,
    65,
    4666,
    459,
    4639,
    477,
    4636,
    144,
    4598,
    426,
    4597,
    76,
    4587,
    141,
    4586,
    47,
    4421,
    262,
    4416,
    15
  ]
},
    {
  "tm": 182137,
  "vm": 3,
  "s": [
    2657,
    2945,
    2618,
    6549392,
    4421,
    268,
    4416,
    15
  ]
},
    {
  "tm": 183520,
  "vm": 3,
  "s": [
    4190,
    3736
  ]
},
    {
  "tm": 185421,
  "vm": 3,
  "s": [
    4190,
    2400,
    2618,
    6549392,
    4764,
    5
  ]
},
    {
  "tm": 185878,
  "vm": 2,
  "s": [
    2618,
    6083971
  ]
},
    {
  "tm": 190727,
  "vm": 3,
  "s": [
    563,
    42
  ]
},
    {
  "tm": 190744,
  "vm": 3,
  "s": [
    2641,
    21604
  ]
},
    {
  "tm": 190751,
  "vm": 3,
  "s": [
    563,
    10
  ]
},
    {
  "tm": 190796,
  "vm": 2,
  "s": [
    2618,
    1407221,
    2618,
    6549392,
    2618,
    1553024,
    4766,
    11
  ]
},
    {
  "tm": 192116,
  "vm": 2,
  "s": [
    2510,
    0,
    2618,
    1554800,
    4527,
    571,
    4450,
    645,
    4769,
    172
  ]
},
    {
  "tm": 199575,
  "vm": 3,
  "s": [
    4190,
    3764,
    2618,
    6549392,
    4769,
    210
  ]
},
    {
  "tm": 199614,
  "vm": 3,
  "s": [
    4190,
    3056,
    2618,
    6549392,
    4769,
    210
  ]
},
    {
  "tm": 199635,
  "vm": 3,
  "s": [
    563,
    243,
    2618,
    6549392,
    4769,
    210
  ]
},
    {
  "tm": 199642,
  "vm": 3,
  "s": [
    563,
    224,
    2618,
    6549392,
    4769,
    210
  ]
},
    {
  "tm": 199648,
  "vm": 3,
  "s": [
    2641,
    20778,
    2618,
    6549392,
    4769,
    210
  ]
},
    {
  "tm": 199655,
  "vm": 2,
  "s": [
    2651,
    2675,
    2618,
    6549392,
    4769,
    232
  ]
},
    {
  "tm": 200988,
  "vm": 3,
  "s": [
    2618,
    5770353,
    2618,
    6549392,
    4778,
    1098,
    4777,
    485,
    4776,
    389,
    4769,
    232
  ]
},
    {
  "tm": 202228,
  "vm": 3,
  "s": [
    2657,
    2922,
    2618,
    6549392,
    4777,
    17,
    4795,
    137,
    4778,
    2594,
    4777,
    485,
    4776,
    389,
    4769,
    232
  ]
},
    {
  "tm": 203482,
  "vm": 0,
  "s": [
    2909,
    117
  ]
}
  ],
  "scripts": [
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/assert",
    "source": "'use strict';\n\nlet error;\nfunction lazyError() {\n  if (!error) {\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n  }\n  return error;\n}\n\nfunction assert(value, message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n",
    "name": "assert",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 21,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/perf/utils",
    "source": "'use strict';\n\nconst binding = internalBinding('performance');\nconst {\n  milestones,\n  getTimeOrigin,\n} = binding;\n\n// TODO(joyeecheung): we may want to warn about access to\n// this during snapshot building.\nlet timeOrigin = getTimeOrigin();\n\nfunction now() {\n  const hr = process.hrtime();\n  return (hr[0] * 1000 + hr[1] / 1e6) - timeOrigin;\n}\n\nfunction getMilestoneTimestamp(milestoneIdx) {\n  const ns = milestones[milestoneIdx];\n  if (ns === -1)\n    return ns;\n  return ns / 1e6 - timeOrigin;\n}\n\nfunction refreshTimeOrigin() {\n  timeOrigin = getTimeOrigin();\n}\n\nmodule.exports = {\n  now,\n  getMilestoneTimestamp,\n  refreshTimeOrigin\n};\n",
    "name": "utils",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 48,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/streams/state",
    "source": "'use strict';\n\nconst {\n  MathFloor,\n  NumberIsInteger,\n} = primordials;\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? 16 : 16 * 1024;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  const hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name, hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark,\n  getDefaultHighWaterMark\n};\n",
    "name": "state",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 62,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/main/run_main_module",
    "source": "'use strict';\n\nconst {\n  prepareMainThreadExecution\n} = require('internal/bootstrap/pre_execution');\n\nprepareMainThreadExecution(true);\n\nmarkBootstrapComplete();\n\n// Note: this loads the module through the ESM loader if the module is\n// determined to be an ES module. This hangs from the CJS module loader\n// because we currently allow monkey-patching of the module loaders\n// in the preloaded scripts through require('module').\n// runMain here might be monkey-patched by users in --require.\n// XXX: the monkey-patchability here should probably be deprecated.\nrequire('internal/modules/cjs/loader').Module.runMain(process.argv[1]);\n",
    "name": "run_main_module",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 99,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "node:internal/dtrace",
    "source": "'use strict';\n\nconst config = internalBinding('config');\n\nconst {\n  DTRACE_HTTP_CLIENT_REQUEST = () => {},\n  DTRACE_HTTP_CLIENT_RESPONSE = () => {},\n  DTRACE_HTTP_SERVER_REQUEST = () => {},\n  DTRACE_HTTP_SERVER_RESPONSE = () => {},\n  DTRACE_NET_SERVER_CONNECTION = () => {},\n  DTRACE_NET_STREAM_END = () => {}\n} = (config.hasDtrace ? internalBinding('dtrace') : {});\n\nmodule.exports = {\n  DTRACE_HTTP_CLIENT_REQUEST,\n  DTRACE_HTTP_CLIENT_RESPONSE,\n  DTRACE_HTTP_SERVER_REQUEST,\n  DTRACE_HTTP_SERVER_RESPONSE,\n  DTRACE_NET_SERVER_CONNECTION,\n  DTRACE_NET_STREAM_END\n};\n",
    "name": "dtrace",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 118,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/usr/local/lib/node_modules/0x/lib/preload/no-cluster.js",
    "source": "const cluster = require('cluster')\n\ncluster.on('fork', () => {\n  throw new Error('0x does not support clustering.')\n})\n",
    "name": "no-cluster.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 130,
    "sourcePositions": []
  },
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  {
    "url": "/usr/local/lib/node_modules/0x/lib/preload/redir-stdout.js",
    "source": "'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3,\n    readable: false,\n    writable: true\n  })\n  Object.defineProperty(process, 'stdout', {\n    configurable: true,\n    enumerable: true,\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout, 'fd', {\n    value: socket._handle.fd\n  })\n}\n",
    "name": "redir-stdout.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 142,
    "sourcePositions": []
  },
  {
    "url": "node:worker_threads",
    "source": "'use strict';\n\nconst {\n  isMainThread,\n  SHARE_ENV,\n  resourceLimits,\n  setEnvironmentData,\n  getEnvironmentData,\n  threadId,\n  Worker\n} = require('internal/worker');\n\nconst {\n  MessagePort,\n  MessageChannel,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  BroadcastChannel,\n} = require('internal/worker/io');\n\nconst {\n  markAsUntransferable,\n} = require('internal/buffer');\n\nmodule.exports = {\n  isMainThread,\n  MessagePort,\n  MessageChannel,\n  markAsUntransferable,\n  moveMessagePortToContext,\n  receiveMessageOnPort,\n  resourceLimits,\n  threadId,\n  SHARE_ENV,\n  Worker,\n  parentPort: null,\n  workerData: null,\n  BroadcastChannel,\n  setEnvironmentData,\n  getEnvironmentData,\n};\n",
    "name": "node:worker_threads",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 143,
    "sourcePositions": []
  },
  null,
  null,
  {
    "url": "/usr/local/lib/node_modules/0x/lib/preload/soft-exit.js",
    "source": "'use strict'\n\nprocess.on('SIGINT', process.exit)\nprocess.on('SIGTERM', process.exit)\n",
    "name": "soft-exit.js",
    "lineToColumn": {},
    "_entries": [],
    "_sourceMapState": "unknown",
    "id": 146,
    "sourcePositions": []
  }
]}
